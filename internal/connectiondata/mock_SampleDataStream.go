// Code generated by mockery. DO NOT EDIT.

package connectiondata

import (
	mgmtv1alpha1 "github.com/nucleuscloud/neosync/backend/gen/go/protos/mgmt/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// MockSampleDataStream is an autogenerated mock type for the SampleDataStream type
type MockSampleDataStream struct {
	mock.Mock
}

type MockSampleDataStream_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSampleDataStream) EXPECT() *MockSampleDataStream_Expecter {
	return &MockSampleDataStream_Expecter{mock: &_m.Mock}
}

// Send provides a mock function with given fields: resp
func (_m *MockSampleDataStream) Send(resp *mgmtv1alpha1.GetConnectionDataStreamResponse) error {
	ret := _m.Called(resp)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*mgmtv1alpha1.GetConnectionDataStreamResponse) error); ok {
		r0 = rf(resp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockSampleDataStream_Send_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Send'
type MockSampleDataStream_Send_Call struct {
	*mock.Call
}

// Send is a helper method to define mock.On call
//   - resp *mgmtv1alpha1.GetConnectionDataStreamResponse
func (_e *MockSampleDataStream_Expecter) Send(resp interface{}) *MockSampleDataStream_Send_Call {
	return &MockSampleDataStream_Send_Call{Call: _e.mock.On("Send", resp)}
}

func (_c *MockSampleDataStream_Send_Call) Run(run func(resp *mgmtv1alpha1.GetConnectionDataStreamResponse)) *MockSampleDataStream_Send_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*mgmtv1alpha1.GetConnectionDataStreamResponse))
	})
	return _c
}

func (_c *MockSampleDataStream_Send_Call) Return(_a0 error) *MockSampleDataStream_Send_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSampleDataStream_Send_Call) RunAndReturn(run func(*mgmtv1alpha1.GetConnectionDataStreamResponse) error) *MockSampleDataStream_Send_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSampleDataStream creates a new instance of MockSampleDataStream. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSampleDataStream(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSampleDataStream {
	mock := &MockSampleDataStream{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
