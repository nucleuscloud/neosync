-- add columns
ALTER TABLE regions
    ADD COLUMN is_active BOOLEAN NOT NULL DEFAULT TRUE,
    ADD COLUMN region_number BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 100 INCREMENT BY 10);

ALTER TABLE countries
    ADD COLUMN last_update DATE DEFAULT CURRENT_DATE;

ALTER TABLE locations
    ADD COLUMN phone_numbers TEXT[];

ALTER TABLE jobs
    ADD COLUMN job_type CHARACTER VARYING(50),
    ADD COLUMN job_code SERIAL;

ALTER TABLE employees
    ADD COLUMN profile JSONB;

CREATE SEQUENCE employees_code_seq
    START 1000
    INCREMENT 1;

ALTER TABLE employees
    ADD COLUMN employee_code INTEGER DEFAULT nextval('employees_code_seq');

COMMENT ON COLUMN employees.profile IS 'A JSONB column containing employee profile information';
COMMENT ON COLUMN countries.last_update IS 'The last time the country was updated';
COMMENT ON COLUMN jobs.job_type IS 'I''m an astronaut';

UPDATE regions
SET is_active = TRUE
WHERE region_id IN (1, 2, 3);

UPDATE regions
SET is_active = FALSE
WHERE region_id = 4;

UPDATE countries
SET last_update = '2025-01-01'
WHERE country_id IN ('US','CA');

UPDATE countries
SET last_update = '2025-02-01'
WHERE country_id IN ('UK','DE','FR');

UPDATE locations
SET phone_numbers = ARRAY['+1-555-123-4567','+1-555-999-8888']
WHERE location_id = 1400;

UPDATE locations
SET phone_numbers = ARRAY['+44-20-1111-2222']
WHERE location_id = 2400;

UPDATE jobs
SET job_type = 'Accounting'
WHERE job_id IN (1,2,6);

UPDATE jobs
SET job_type = 'Administration'
WHERE job_id IN (3,5,8);

UPDATE jobs
SET job_type = 'Management'
WHERE job_id IN (4,7,10,14,15,19);

UPDATE jobs
SET job_type = 'Technical'
WHERE job_id IN (9);

UPDATE jobs
SET job_type = 'Sales/Other'
WHERE job_id IN (11,12,13,16,17,18);

UPDATE employees
SET profile = '{"hobbies":["cycling","reading"],"location":"Remote"}'
WHERE employee_id = 100;

UPDATE employees
SET profile = '{"hobbies":["hiking"],"location":"On-site"}'
WHERE employee_id = 101;

UPDATE employees
SET profile = '{"languages":["English","German"],"certifications":["CPA","MBA"]}'
WHERE employee_id = 108;

ALTER TABLE employees 
    DROP CONSTRAINT employees_temp_col_check;

ALTER TABLE employees
    DROP CONSTRAINT employees_salary_check;

ALTER TABLE employees
    DROP COLUMN temp_col;

ALTER TABLE countries
    DROP CONSTRAINT countries_country_name_uniq;

ALTER TABLE countries
    DROP COLUMN temp_col;


CREATE OR REPLACE FUNCTION dummy_trigger_function()
RETURNS trigger
LANGUAGE plpgsql
AS $$
BEGIN
  IF TG_OP = 'UPDATE' THEN
    NEW.data := NEW.data || ' - updated again';
  END IF;

  -- Return the new row
  RETURN NEW;
END;
$$;

DROP TRIGGER IF EXISTS other_trigger ON dummy_table;
DROP FUNCTION IF EXISTS other_trigger_function();

ALTER TYPE employment_status ADD VALUE 'CONTRACTOR';

ALTER TYPE employment_status 
  RENAME VALUE 'PART_TIME' TO 'PARTTIME';

ALTER TABLE jobs DROP COLUMN job_category;
DROP TYPE IF EXISTS job_category;

ALTER TYPE comp_address
ADD ATTRIBUTE id text;

ALTER TYPE comp_address
RENAME ATTRIBUTE apt_number TO unit_number;

ALTER TYPE comp_address
DROP ATTRIBUTE state;

ALTER TABLE dummy_comp_table DROP COLUMN comp;
DROP TYPE IF EXISTS comp_dummy;

CREATE TYPE comp_new AS (
    id text
);

ALTER TABLE dummy_comp_table ADD COLUMN comp_col_new comp_new;

ALTER TABLE example_table DROP COLUMN amount;
DROP DOMAIN IF EXISTS over_hundred;

ALTER DOMAIN positive_integer
  SET DEFAULT 1;
  
ALTER DOMAIN positive_integer
  SET NOT NULL;


ALTER DOMAIN positive_integer ADD CONSTRAINT less_10000 
    CHECK (VALUE < 10000);


ALTER TABLE locations ALTER COLUMN city DROP NOT NULL;
ALTER TABLE locations ALTER COLUMN street_address SET NOT NULL;

ALTER TABLE jobs ALTER COLUMN min_salary SET DEFAULT 10000;
ALTER TABLE users ALTER COLUMN id DROP NOT NULL;
ALTER TABLE users ALTER COLUMN active DROP DEFAULT;

ALTER TABLE users
    RENAME COLUMN username TO name;

ALTER TABLE users
    ALTER COLUMN age TYPE text USING age::text;

COMMENT ON COLUMN users.age IS 'age of user';

ALTER TABLE users ALTER COLUMN id SET NOT NULL;   

ALTER TABLE users
    ALTER COLUMN id
    ADD GENERATED BY DEFAULT AS IDENTITY
    ( START WITH 10 INCREMENT BY 5 );

UPDATE budget
SET
    "name"          = 'Updated Name',
    "attribution"   = 'Updated Attribution',
    "date_created"  = '2025-04-07 10:00:00+00',
    "account_id"    = '1'
WHERE
    "id" = 2;
