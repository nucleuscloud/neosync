services:
  app:
    container_name: neosync-app
    image: neosync-app
    build:
      context: ./frontend
      dockerfile: ./apps/web/dev/build/Dockerfile.dev
    ports:
      - 3000:3000
    environment:
      - HOSTNAME=0.0.0.0
      - NUCLEUS_ENV=dev
      - NEXTAUTH_SECRET=foo
      - NEOSYNC_API_BASE_URL=http://api:8080
      - NEXT_PUBLIC_APP_BASE_URL=http://localhost:3000

      - POSTHOG_KEY=phc_qju45RhNvCDwYVdRyUjtWuWsOmLFaQZi3fmztMBaJip

      - AUTH_ENABLED=true
      - AUTH_CLIENT_ID=toXbXZXIYD3ni7MheOrU6J70j8lNtiSt
      - AUTH_CLIENT_SECRET=ePOwcBxyyn2kghKLuH67OJXbAFkeT-YEfMcdqNSPPnUq2XNpPrtDX3MOWatT2HwX
      - AUTH_ISSUER=https://auth.nucleuscloud.dev/
      - AUTH_AUDIENCE=https://api.nucleuscloud.com
      - AUTH_SCOPE=openid email profile offline_access
      - AUTH_PROVIDER_ID=auth0
      - AUTH_PROVIDER_NAME=Auth0

    networks:
      - neosync-network
    develop:
      watch:
        - path: frontend/package.json
          action: rebuild
        - path: frontend/package-lock.json
          action: rebuild
        - path: frontend/
          action: sync
          target: /app
          ignore:
            - frontend/node_modules/

  db:
    container_name: neosync-db
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=nucleus
      - POSTGRES_PASSWORD=foofar
      - PGUSER=postgres
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - neosync-network
    volumes:
      - $PWD/.data/neosync-postgres/data:/var/lib/postgresql/data
      - $PWD/hack/pg-init:/docker-entrypoint-initdb.d

  api:
    container_name: neosync-api
    image: neosync-api
    build:
      context: ./backend
      dockerfile: ./dev/build/Dockerfile.dev
    ports:
      - 8080:8080
    command: serve connect
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - NUCLEUS_ENV=dev
      - TEMPORAL_URL=temporal:7233
      - DB_AUTO_MIGRATE=true
      - DB_SCHEMA_DIR=/app/migrations
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=nucleus
      - DB_USER=postgres
      - DB_PASS=foofar
      - DB_SSL_DISABLE=true
      - DB_MIGRATIONS_TABLE=neosync_api_schema_migrations
      - DB_MIGRATIONS_TABLE_QUOTED=false

      - AUTH_ENABLED=true
      - AUTH_AUDIENCE=https://api.nucleuscloud.com
      - AUTH_BASEURL=https://auth.nucleuscloud.dev/
      - AUTH_CLIENTID_SECRET={"N53szkXwrMZmWiMQ96bJVCSuafn6myMR":"R7-URoQHcAaYkC3mq39g0krn82HbJ3V8tNfJ6yThXcGHd12g_KaDEGogR5qpT_YA"}
      - AUTH_CLI_CLIENT_ID=N53szkXwrMZmWiMQ96bJVCSuafn6myMR
      - AUTH_CLI_AUDIENCE=https://api.nucleuscloud.com
      - AUTH_API_BASEURL=https://nucleus-cloud-dev.us.auth0.com
      - AUTH_API_CLIENT_ID=NmymQDhFqcMS42Qc9s8zGCX52IoZcJy6
      - AUTH_API_CLIENT_SECRET=2GeZUD-RGlzW3fG4Hvu1tjkaNdgTKbXp3bX4XjKSB9szRpMfXE-NFjTdSJ0ks8g3
      - AUTH_SIGNATURE_ALGORITHM=RS256

    networks:
      - neosync-network
      - temporal-network

    depends_on:
      db:
        condition: service_healthy
        restart: true
    develop:
      watch:
        - path: backend/bin
          action: sync+restart
          target: /app

  worker:
    container_name: neosync-worker
    image: neosync-worker
    build:
      context: ./worker
      dockerfile: ./dev/build/Dockerfile.dev
    environment:
      - NUCLEUS_ENV=dev
      - TEMPORAL_URL=temporal:7233
      - TEMPORAL_NAMESPACE=default
      - TEMPORAL_TASK_QUEUE=sync-job
      - NEOSYNC_URL=http://api:8080
    networks:
      - neosync-network
      - temporal-network
    develop:
      watch:
        - path: worker/bin
          action: sync+restart
          target: /app

networks:
  neosync-network:
    driver: bridge
    name: neosync-network
  temporal-network:
    external: true
