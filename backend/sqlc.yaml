version: "2"
sql:
  - engine: "postgresql"
    queries: "sql/postgresql/queries"
    schema: "sql/postgresql/schema"
    gen:
      go:
        package: "db_queries"
        out: "gen/go/db"
        sql_package: "pgx/v5"
        emit_interface: true
        emit_methods_with_db_argument: true
        overrides:
          - column: neosync_api.connections.connection_config
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: ConnectionConfig
              pointer: true
          - column: neosync_api.jobs.mappings
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: JobMapping
              pointer: true
              slice: true
          - column: neosync_api.jobs.virtual_foreign_keys
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: VirtualForeignConstraint
              pointer: true
              slice: true 
          - column: neosync_api.jobs.connection_options
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: JobSourceOptions
              pointer: true
          - column: neosync_api.job_destination_connection_associations.options
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: JobDestinationOptions
              pointer: true
          - column: neosync_api.transformers.transformer_config
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: TransformerConfigs
              pointer: true
          - column: neosync_api.accounts.temporal_config
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: TemporalConfig
              pointer: true
          - column: neosync_api.jobs.sync_options
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: ActivityOptions
              pointer: true
          - column: neosync_api.jobs.workflow_options
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: WorkflowOptions
              pointer: true
          - column: neosync_api.accounts.onboarding_config
            go_type:
              import: github.com/nucleuscloud/neosync/backend/sql/postgresql/models
              package: pg_models
              type: AccountOnboardingConfig
              pointer: true

  - engine: "mysql"
    queries: "pkg/dbschemas/sql/mysql/queries"
    schema: "pkg/dbschemas/sql/mysql/schema"
    gen:
      go:
        package: mysql_queries
        out: "gen/go/db/dbschemas/mysql"
        emit_interface: true
        emit_methods_with_db_argument: true
        emit_result_struct_pointers: true
        emit_params_struct_pointers: true
        emit_pointers_for_null_types: true

  - engine: "postgresql"
    queries: "pkg/dbschemas/sql/postgresql/queries"
    gen:
      go:
        package: "pg_queries"
        out: "gen/go/db/dbschemas/postgresql"
        sql_package: "pgx/v5"
        emit_interface: true
        emit_methods_with_db_argument: true
        emit_result_struct_pointers: true
        emit_params_struct_pointers: true
        emit_pointers_for_null_types: true
        overrides:
          # - column: information_schema.columns.table_schema
          #   go_type: string
          # - column: information_schema.columns.table_name
          #   go_type: string
          # - column: information_schema.columns.column_name
          #   go_type: string
          # - column: information_schema.columns.ordinal_position
          #   go_type: int
          # - column: information_schema.columns.column_default
          #   go_type: "string"
          #   nullable: true # this only appears to work on models
          # - column: information_schema.columns.is_nullable
          #   go_type: string
          # - column: information_schema.columns.data_type
          #   go_type: string
          # - column: information_schema.columns.character_maximum_length
          #   go_type: int
          # - column: information_schema.columns.numeric_precision
          #   go_type: int
          # - column: information_schema.columns.numeric_scale
          #   go_type: int
          # - column: information_schema.tables.table_schema
          #   go_type: string
          # - column: information_schema.tables.table_name
          #   go_type: string
          # - column: information_schema.referential_constraints.constraint_name
          #   go_type: string
          # - column: information_schema.referential_constraints.constraint_schema
          #   go_type: string
          # - column: information_schema.key_column_usage.table_schema
          #   go_type: string
          # - column: information_schema.key_column_usage.table_name
          #   go_type: string
          # - column: information_schema.key_column_usage.column_name
          #   go_type: string
          # - column: information_schema.table_constraints.table_schema
          #   go_type: string
          # - column: information_schema.table_constraints.table_name
          #   go_type: string
          # - column: information_schema.table_constraints.constraint_name
          #   go_type: string
          # - column: information_schema.constraint_column_usage.table_schema
          #   go_type: string
          # - column: information_schema.constraint_column_usage.table_name
          #   go_type: string
          # - column: information_schema.constraint_column_usage.column_name
          #   go_type: string
          - column: information_schema.role_table_grants.table_schema
            go_type: string
          - column: information_schema.role_table_grants.table_name
            go_type: string
          - column: information_schema.role_table_grants.privilege_type
            go_type: string
          - column: pg_catalog.pg_constraint.connamespace # this is normally an int but we are casting it in queries to the friendly name
            go_type: string
          - column: pg_catalog.pg_constraint.conrelid # this is normally an int but we are casting it in queries to the friendly name
            go_type: string
