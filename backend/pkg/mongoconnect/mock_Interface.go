// Code generated by mockery. DO NOT EDIT.

package mongoconnect

import (
	mgmtv1alpha1 "github.com/nucleuscloud/neosync/backend/gen/go/protos/mgmt/v1alpha1"
	mock "github.com/stretchr/testify/mock"

	slog "log/slog"
)

// MockInterface is an autogenerated mock type for the Interface type
type MockInterface struct {
	mock.Mock
}

type MockInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInterface) EXPECT() *MockInterface_Expecter {
	return &MockInterface_Expecter{mock: &_m.Mock}
}

// NewFromConnectionConfig provides a mock function with given fields: cc, logger
func (_m *MockInterface) NewFromConnectionConfig(cc *mgmtv1alpha1.ConnectionConfig, logger *slog.Logger) (DbContainer, error) {
	ret := _m.Called(cc, logger)

	if len(ret) == 0 {
		panic("no return value specified for NewFromConnectionConfig")
	}

	var r0 DbContainer
	var r1 error
	if rf, ok := ret.Get(0).(func(*mgmtv1alpha1.ConnectionConfig, *slog.Logger) (DbContainer, error)); ok {
		return rf(cc, logger)
	}
	if rf, ok := ret.Get(0).(func(*mgmtv1alpha1.ConnectionConfig, *slog.Logger) DbContainer); ok {
		r0 = rf(cc, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DbContainer)
		}
	}

	if rf, ok := ret.Get(1).(func(*mgmtv1alpha1.ConnectionConfig, *slog.Logger) error); ok {
		r1 = rf(cc, logger)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockInterface_NewFromConnectionConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewFromConnectionConfig'
type MockInterface_NewFromConnectionConfig_Call struct {
	*mock.Call
}

// NewFromConnectionConfig is a helper method to define mock.On call
//   - cc *mgmtv1alpha1.ConnectionConfig
//   - logger *slog.Logger
func (_e *MockInterface_Expecter) NewFromConnectionConfig(cc interface{}, logger interface{}) *MockInterface_NewFromConnectionConfig_Call {
	return &MockInterface_NewFromConnectionConfig_Call{Call: _e.mock.On("NewFromConnectionConfig", cc, logger)}
}

func (_c *MockInterface_NewFromConnectionConfig_Call) Run(run func(cc *mgmtv1alpha1.ConnectionConfig, logger *slog.Logger)) *MockInterface_NewFromConnectionConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*mgmtv1alpha1.ConnectionConfig), args[1].(*slog.Logger))
	})
	return _c
}

func (_c *MockInterface_NewFromConnectionConfig_Call) Return(_a0 DbContainer, _a1 error) *MockInterface_NewFromConnectionConfig_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockInterface_NewFromConnectionConfig_Call) RunAndReturn(run func(*mgmtv1alpha1.ConnectionConfig, *slog.Logger) (DbContainer, error)) *MockInterface_NewFromConnectionConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockInterface creates a new instance of MockInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockInterface {
	mock := &MockInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
