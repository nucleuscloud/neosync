syntax = "proto3";

package mgmt.v1alpha1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

message GetRecordsReceivedCountRequest {
  oneof identifier {
    // The account identifier that will be used to filter by
    string account_id = 1 [(buf.validate.field).string.uuid = true];
    // The job identifier that will be used to filter by
    string job_id = 2 [(buf.validate.field).string.uuid = true];
    // The run identifier that will be used to filter by
    string run_id = 3 [(buf.validate.field).string.uuid = true];
  }
  // Provide a time range to retrieve a range of metrics by
  RecordsReceivedTimeRange indexed_time_range = 4;
}

message GetRecordsReceivedCountResponse {
  repeated MetricResult results = 1;
}

// An enumeration of the supported indexed time ranges for the records received metric
enum RecordsReceivedTimeRange {
  RECORDS_RECEIVED_TIME_RANGE_UNSPECIFIED = 0;
  RECORDS_RECEIVED_TIME_RANGE_7_DAY = 1;
  RECORDS_RECEIVED_TIME_RANGE_14_DAY = 2;
  RECORDS_RECEIVED_TIME_RANGE_30_DAY = 3;
  RECORDS_RECEIVED_TIME_RANGE_60_DAY = 4;
}

message MetricResult {
  // figure out what this is
  map<string, string> metric = 1;
  // A repeated list of metric values for the given range
  repeated MetricValue values = 2;
}

message MetricValue {
  // The actual value of the metric
  string value = 1;
  // The timestamp of when this value was recorded
  google.protobuf.Timestamp timestamp = 2;
}

service MetricsService {
  // Retrieve a timed range of records received based on a given identifier and indexed range of time
  rpc GetRecordsReceivedCount(GetRecordsReceivedCountRequest) returns (GetRecordsReceivedCountResponse) {}
}
