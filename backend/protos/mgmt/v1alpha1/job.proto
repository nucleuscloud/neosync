syntax = "proto3";

package mgmt.v1alpha1;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

message GetJobsRequest {}
message GetJobsResponse {
  repeated Job jobs = 1;
}

message CreateJobRequest {
  string job_name = 1;

  string connection_source_id = 2 [(validate.rules).string.uuid = true];
  repeated string connection_destination_ids = 3;
  optional string cron_schedule = 4;
  JobSourceOptions source_options = 5;
  repeated JobMapping mappings = 6;
}
message CreateJobResponse {
  Job job = 1;
}

message JobMapping {
  string schema = 1;
  string table = 2;
  string column = 3;
  string transformer = 5 [(validate.rules).string = {
    in: [
      "passthrough",
      "uuid_v4",
      "first_name",
      "phone_number"
    ]
  }];
  bool exclude = 6;
}

enum JobStatus {
  JOB_STATUS_UNSPECIFIED = 0;
  JOB_STATUS_ENABLED = 1;
  JOB_STATUS_PAUSED = 3;
  JOB_STATUS_DISABLED = 4;
}

message GetJobRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}
message GetJobResponse {
  Job job = 1;
}

message UpdateJobScheduleRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  optional string cron_schedule = 2;
}
message UpdateJobScheduleResponse {
  Job job = 1;
}

message UpdateJobSourceConnectionRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  string connection_id = 2 [(validate.rules).string.uuid = true];
}
message UpdateJobSourceConnectionResponse {
  Job job = 1;
}

message UpdateJobDestinationConnectionsRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  repeated string connection_ids = 2 [(validate.rules).repeated = {min_items: 1}];
}
message UpdateJobDestinationConnectionsResponse {
  Job job = 1;
}

message UpdateJobMappingsRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  repeated JobMapping mappings = 2 [(validate.rules).repeated = {min_items: 1}];
}
message UpdateJobMappingsResponse {
  Job job = 1;
}

message UpdateJobHaltOnNewColumnAdditionRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  bool halt_on_new_column_addition = 2;
}
message UpdateJobHaltOnNewColumnAdditionResponse {
  Job job = 1;
}

message DeleteJobRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}
message DeleteJobResponse {}

message IsJobNameAvailableRequest {
  string name = 1;
}
message IsJobNameAvailableResponse {
  bool is_available = 1;
}

message GetJobRunsRequest {
  oneof id {
    string job_id = 1 [(validate.rules).string.uuid = true];
  }
}
message GetJobRunsResponse {
  repeated JobRun job_runs = 1;
}

message GetJobRunRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}
message GetJobRunResponse {
  JobRun job_run = 1;
}

message CreateJobRunRequest {
  string job_id = 1;
}
message CreateJobRunResponse {
  JobRun job_run = 1;
}

message CancelJobRunRequest {
  string job_run_id = 1;
}
message CancelJobRunResponse {}

// TODO @alisha make this oneof to depend on connection type
message JobSourceOptions {
  bool halt_on_new_column_addition = 1;
}

message Job {
  string id = 1;

  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;

  string name = 4;
  JobStatus status = 5;

  string connection_source_id = 6 [(validate.rules).string.uuid = true];
  repeated string connection_destination_ids = 7;
  repeated JobMapping mappings = 8;
  optional string cron_schedule = 9;
  JobSourceOptions source_options = 10;
}

message JobRun {
  string id = 1;
  string job_id = 2;
  string name = 3;
  JobRunStatus status = 4;

  string created_by_user_id = 5;
  google.protobuf.Timestamp created_at = 6;
}

enum JobRunStatus {
  JOB_RUN_STATUS_UNSPECIFIED = 0;
  JOB_RUN_STATUS_PENDING = 1;
  JOB_RUN_STATUS_RUNNING = 2;
  JOB_RUN_STATUS_COMPLETE = 3;
  JOB_RUN_STATUS_ERROR = 4;
}

message Transformer {
  string title = 1;
  string value = 2;
}
message GetTransformersRequest {}
message GetTransformersResponse {
  repeated Transformer transformers = 1;
}

service JobService {
  rpc GetJobs(GetJobsRequest) returns (GetJobsResponse) {}
  rpc GetJob(GetJobRequest) returns (GetJobResponse) {}
  rpc CreateJob(CreateJobRequest) returns (CreateJobResponse) {}
  rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse) {}
  rpc IsJobNameAvailable(IsJobNameAvailableRequest) returns (IsJobNameAvailableResponse) {}
  rpc UpdateJobSchedule(UpdateJobScheduleRequest) returns (UpdateJobScheduleResponse) {}
  rpc UpdateJobSourceConnection(UpdateJobSourceConnectionRequest) returns (UpdateJobSourceConnectionResponse) {}
  rpc UpdateJobDestinationConnections(UpdateJobDestinationConnectionsRequest) returns (UpdateJobDestinationConnectionsResponse) {}
  rpc UpdateJobMappings(UpdateJobMappingsRequest) returns (UpdateJobMappingsResponse) {}
  rpc UpdateJobHaltOnNewColumnAddition(UpdateJobHaltOnNewColumnAdditionRequest) returns (UpdateJobHaltOnNewColumnAdditionResponse) {}

  rpc GetJobRuns(GetJobRunsRequest) returns (GetJobRunsResponse) {}
  rpc GetJobRun(GetJobRunRequest) returns (GetJobRunResponse) {}
  rpc CreateJobRun(CreateJobRunRequest) returns (CreateJobRunResponse) {}
  rpc CancelJobRun(CancelJobRunRequest) returns (CancelJobRunResponse) {}

  rpc GetTransformers(GetTransformersRequest) returns (GetTransformersResponse) {}
}
