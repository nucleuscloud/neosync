// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: transformers.sql

package db_queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getCustomTransformersByAccount = `-- name: GetCustomTransformersByAccount :many
SELECT t.id, t.created_at, t.updated_at, t.name, t.account_id, t.transformer_config, t.created_by_id, t.updated_by_id from neosync_api.transformers t
INNER JOIN neosync_api.accounts a ON a.id = t.account_id
WHERE a.id = $1
ORDER BY t.created_at DESC
`

func (q *Queries) GetCustomTransformersByAccount(ctx context.Context, accountid pgtype.UUID) ([]NeosyncApiTransformer, error) {
	rows, err := q.db.Query(ctx, getCustomTransformersByAccount, accountid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []NeosyncApiTransformer
	for rows.Next() {
		var i NeosyncApiTransformer
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Name,
			&i.AccountID,
			&i.TransformerConfig,
			&i.CreatedByID,
			&i.UpdatedByID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getCustomTransformersById = `-- name: GetCustomTransformersById :one
SELECT id, created_at, updated_at, name, account_id, transformer_config, created_by_id, updated_by_id from neosync_api.transformers WHERE id = $1
`

func (q *Queries) GetCustomTransformersById(ctx context.Context, id pgtype.UUID) (NeosyncApiTransformer, error) {
	row := q.db.QueryRow(ctx, getCustomTransformersById, id)
	var i NeosyncApiTransformer
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.AccountID,
		&i.TransformerConfig,
		&i.CreatedByID,
		&i.UpdatedByID,
	)
	return i, err
}
