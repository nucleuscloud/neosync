on:
  pull_request:
    paths:
      - cli/**.go
      - backend/**.go
      - worker/**.go
      - go.mod
      - go.sum
  push:
    branches:
      - main
    paths:
      - cli/**.go
      - backend/**.go
      - worker/**.go
      - go.mod
      - go.sum

name: Go
jobs:
  golangci:
    name: golang-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=10m

  vet:
    name: vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Vet
        run: go vet ./...

  test:
    name: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          PGUSER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Test
        run: |
          go test -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          INTEGRATION_TESTS_ENABLED: 1
          TEST_DB_URL: postgres://postgres:postgres@localhost:5432/postgres
          TEST_REDIS_URL: redis://localhost:6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
