on:
  pull_request:
    paths:
      - backend/**

name: Lint
jobs:
  golangci:
    name: golang-lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Granting private modules access
        run: |
          git config --global url."https://${{ secrets.REPO_PAT }}:x-oauth-basic@github.com/nucleuscloud".insteadOf "https://github.com/nucleuscloud"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
          working-directory: backend

  buf:
    name: buf-lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3

      - name: Retrieve Buf Version
        run: |
          VER=$(cat BUF_VERSION)
          echo "BUF_VERSION=$VER" >> $GITHUB_ENV

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1.26.1
        with:
          version: ${{ env.BUF_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Buf Lint
        uses: bufbuild/buf-lint-action@v1
        with:
          input: backend

  gofmt:
    name: gofmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum

      - name: Check Go Format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

  # sqlc:
  #   name: sqlc
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         path: backend

  #     - name: Retrieve SQLC Version
  #       run: |
  #         VER=$(cat SQLC_VERSION)
  #         echo "SQLC_VERSION=$VER" >> $GITHUB_ENV

  #     - uses: sqlc-dev/setup-sqlc@v3
  #       with:
  #         sqlc-version: ${{ env.SQLC_VERSION }}

  #     - run: sqlc diff
  #     - run: sqlc vet
