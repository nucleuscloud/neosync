image:
  repository: ghcr.io/nucleuscloud/neosync/app
  # Overrides the image tag whose default is {{ printf "v%s" .Chart.AppVersion }}
  tag:
  pullPolicy:

nameOverride:
fullnameOverride:

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use. If namenot set and create is true, a name is generated using fullname template
  name:
  annotations: {}
  #   eks.amazonaws.com/role-arn: arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME

# Determines what .env file to load in if running bare metal
# also adds a tag to the API logger
nucleusEnv:

# Currently does not do anything but will eventaully allow emitting otel metrics and traces
otel:
  enabled: false
  otlpPort: 4317

# Adds annotations and labels to the deployment to opt it in to Istio service mesh. See the Neosync k8s docs for more details.
istio:
  enabled: false

# Adds annotations to support sending logs to Datadog. See the Neosync k8s docs for more details.
datadog:
  enabled: false

host: 0.0.0.0

servicePort: 80
containerPort: 3000

terminationGracePeriodSeconds:
shutdownTimeoutSeconds:

neosyncApi:
  url: http://neosync-api

nextAuthSecret: 'This is an example'
nextAuthUrl: 'http://localhost:3000'

nextPublic:
  appBaseUrl: 'http://localhost:3000'

auth:
  enabled: false
  clientId:
  clientSecret:
  issuer:
  scope:
  audience:

# check out the ingress.yaml file to see what ither values are available for configuration on this object.
ingress:
  # enable this if using K8s ingress to expose the backend to the internet
  enabled: false

analytics:
  enabled: true # enables analytics such as posthog and koala

posthog:
  key: phc_qju45RhNvCDwYVdRyUjtWuWsOmLFaQZi3fmztMBaJip
  # host:

koala:
  key:

tolerations: []
nodeSelector: {}

neosyncCloud:
  enabled: false

# feature flag that enables the frontend to show the run logs on the Run [id] page.
# only enable this if the backend has been configured to surface run logs
enableRunLogs: false

# whether or not to enable the metrics service and display usage metrics in the app
# if this is enabled, the backend must also have the metrics service enabled and configured
protometrics:
  enabled: false

updateStrategy:

# Provide extra environment variables that will be applied to the deployment.
extraEnvVars: []
