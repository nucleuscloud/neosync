// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file mgmt/v1alpha1/job.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum mgmt.v1alpha1.JobStatus
 */
export enum JobStatus {
  /**
   * @generated from enum value: JOB_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: JOB_STATUS_ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * @generated from enum value: JOB_STATUS_PAUSED = 3;
   */
  PAUSED = 3,

  /**
   * @generated from enum value: JOB_STATUS_DISABLED = 4;
   */
  DISABLED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(JobStatus)
proto3.util.setEnumType(JobStatus, "mgmt.v1alpha1.JobStatus", [
  { no: 0, name: "JOB_STATUS_UNSPECIFIED" },
  { no: 1, name: "JOB_STATUS_ENABLED" },
  { no: 3, name: "JOB_STATUS_PAUSED" },
  { no: 4, name: "JOB_STATUS_DISABLED" },
]);

/**
 * @generated from enum mgmt.v1alpha1.ActivityStatus
 */
export enum ActivityStatus {
  /**
   * @generated from enum value: ACTIVITY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVITY_STATUS_SCHEDULED = 1;
   */
  SCHEDULED = 1,

  /**
   * @generated from enum value: ACTIVITY_STATUS_STARTED = 2;
   */
  STARTED = 2,

  /**
   * @generated from enum value: ACTIVITY_STATUS_CANCELED = 3;
   */
  CANCELED = 3,

  /**
   * @generated from enum value: ACTIVITY_STATUS_FAILED = 4;
   */
  FAILED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ActivityStatus)
proto3.util.setEnumType(ActivityStatus, "mgmt.v1alpha1.ActivityStatus", [
  { no: 0, name: "ACTIVITY_STATUS_UNSPECIFIED" },
  { no: 1, name: "ACTIVITY_STATUS_SCHEDULED" },
  { no: 2, name: "ACTIVITY_STATUS_STARTED" },
  { no: 3, name: "ACTIVITY_STATUS_CANCELED" },
  { no: 4, name: "ACTIVITY_STATUS_FAILED" },
]);

/**
 * @generated from enum mgmt.v1alpha1.JobRunStatus
 */
export enum JobRunStatus {
  /**
   * @generated from enum value: JOB_RUN_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: JOB_RUN_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: JOB_RUN_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: JOB_RUN_STATUS_COMPLETE = 3;
   */
  COMPLETE = 3,

  /**
   * @generated from enum value: JOB_RUN_STATUS_ERROR = 4;
   */
  ERROR = 4,

  /**
   * @generated from enum value: JOB_RUN_STATUS_CANCELED = 5;
   */
  CANCELED = 5,

  /**
   * @generated from enum value: JOB_RUN_STATUS_TERMINATED = 6;
   */
  TERMINATED = 6,

  /**
   * @generated from enum value: JOB_RUN_STATUS_FAILED = 7;
   */
  FAILED = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(JobRunStatus)
proto3.util.setEnumType(JobRunStatus, "mgmt.v1alpha1.JobRunStatus", [
  { no: 0, name: "JOB_RUN_STATUS_UNSPECIFIED" },
  { no: 1, name: "JOB_RUN_STATUS_PENDING" },
  { no: 2, name: "JOB_RUN_STATUS_RUNNING" },
  { no: 3, name: "JOB_RUN_STATUS_COMPLETE" },
  { no: 4, name: "JOB_RUN_STATUS_ERROR" },
  { no: 5, name: "JOB_RUN_STATUS_CANCELED" },
  { no: 6, name: "JOB_RUN_STATUS_TERMINATED" },
  { no: 7, name: "JOB_RUN_STATUS_FAILED" },
]);

/**
 * @generated from message mgmt.v1alpha1.GetJobsRequest
 */
export class GetJobsRequest extends Message<GetJobsRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  constructor(data?: PartialMessage<GetJobsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobsRequest {
    return new GetJobsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobsRequest {
    return new GetJobsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobsRequest {
    return new GetJobsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobsRequest | PlainMessage<GetJobsRequest> | undefined, b: GetJobsRequest | PlainMessage<GetJobsRequest> | undefined): boolean {
    return proto3.util.equals(GetJobsRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobsResponse
 */
export class GetJobsResponse extends Message<GetJobsResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.Job jobs = 1;
   */
  jobs: Job[] = [];

  constructor(data?: PartialMessage<GetJobsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "jobs", kind: "message", T: Job, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobsResponse {
    return new GetJobsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobsResponse {
    return new GetJobsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobsResponse {
    return new GetJobsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobsResponse | PlainMessage<GetJobsResponse> | undefined, b: GetJobsResponse | PlainMessage<GetJobsResponse> | undefined): boolean {
    return proto3.util.equals(GetJobsResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobSource
 */
export class JobSource extends Message<JobSource> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobSourceOptions options = 2;
   */
  options?: JobSourceOptions;

  constructor(data?: PartialMessage<JobSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "options", kind: "message", T: JobSourceOptions },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobSource {
    return new JobSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobSource {
    return new JobSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobSource {
    return new JobSource().fromJsonString(jsonString, options);
  }

  static equals(a: JobSource | PlainMessage<JobSource> | undefined, b: JobSource | PlainMessage<JobSource> | undefined): boolean {
    return proto3.util.equals(JobSource, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestination
 */
export class CreateJobDestination extends Message<CreateJobDestination> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 2;
   */
  options?: JobDestinationOptions;

  constructor(data?: PartialMessage<CreateJobDestination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobDestination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "options", kind: "message", T: JobDestinationOptions },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobDestination {
    return new CreateJobDestination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobDestination {
    return new CreateJobDestination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobDestination {
    return new CreateJobDestination().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobDestination | PlainMessage<CreateJobDestination> | undefined, b: CreateJobDestination | PlainMessage<CreateJobDestination> | undefined): boolean {
    return proto3.util.equals(CreateJobDestination, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobDestination
 */
export class JobDestination extends Message<JobDestination> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 2;
   */
  options?: JobDestinationOptions;

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<JobDestination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobDestination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "options", kind: "message", T: JobDestinationOptions },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobDestination {
    return new JobDestination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobDestination {
    return new JobDestination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobDestination {
    return new JobDestination().fromJsonString(jsonString, options);
  }

  static equals(a: JobDestination | PlainMessage<JobDestination> | undefined, b: JobDestination | PlainMessage<JobDestination> | undefined): boolean {
    return proto3.util.equals(JobDestination, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobSourceOptions
 */
export class JobSourceOptions extends Message<JobSourceOptions> {
  /**
   * @generated from oneof mgmt.v1alpha1.JobSourceOptions.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.SqlSourceConnectionOptions sql_options = 1;
     */
    value: SqlSourceConnectionOptions;
    case: "sqlOptions";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.AwsS3SourceConnectionOptions aws_s3_options = 2;
     */
    value: AwsS3SourceConnectionOptions;
    case: "awsS3Options";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<JobSourceOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobSourceOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sql_options", kind: "message", T: SqlSourceConnectionOptions, oneof: "config" },
    { no: 2, name: "aws_s3_options", kind: "message", T: AwsS3SourceConnectionOptions, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobSourceOptions {
    return new JobSourceOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobSourceOptions {
    return new JobSourceOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobSourceOptions {
    return new JobSourceOptions().fromJsonString(jsonString, options);
  }

  static equals(a: JobSourceOptions | PlainMessage<JobSourceOptions> | undefined, b: JobSourceOptions | PlainMessage<JobSourceOptions> | undefined): boolean {
    return proto3.util.equals(JobSourceOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.SqlSourceConnectionOptions
 */
export class SqlSourceConnectionOptions extends Message<SqlSourceConnectionOptions> {
  /**
   * @generated from field: optional bool halt_on_new_column_addition = 1;
   */
  haltOnNewColumnAddition?: boolean;

  constructor(data?: PartialMessage<SqlSourceConnectionOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.SqlSourceConnectionOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "halt_on_new_column_addition", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SqlSourceConnectionOptions {
    return new SqlSourceConnectionOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SqlSourceConnectionOptions {
    return new SqlSourceConnectionOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SqlSourceConnectionOptions {
    return new SqlSourceConnectionOptions().fromJsonString(jsonString, options);
  }

  static equals(a: SqlSourceConnectionOptions | PlainMessage<SqlSourceConnectionOptions> | undefined, b: SqlSourceConnectionOptions | PlainMessage<SqlSourceConnectionOptions> | undefined): boolean {
    return proto3.util.equals(SqlSourceConnectionOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.AwsS3SourceConnectionOptions
 */
export class AwsS3SourceConnectionOptions extends Message<AwsS3SourceConnectionOptions> {
  constructor(data?: PartialMessage<AwsS3SourceConnectionOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.AwsS3SourceConnectionOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AwsS3SourceConnectionOptions {
    return new AwsS3SourceConnectionOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AwsS3SourceConnectionOptions {
    return new AwsS3SourceConnectionOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AwsS3SourceConnectionOptions {
    return new AwsS3SourceConnectionOptions().fromJsonString(jsonString, options);
  }

  static equals(a: AwsS3SourceConnectionOptions | PlainMessage<AwsS3SourceConnectionOptions> | undefined, b: AwsS3SourceConnectionOptions | PlainMessage<AwsS3SourceConnectionOptions> | undefined): boolean {
    return proto3.util.equals(AwsS3SourceConnectionOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobDestinationOptions
 */
export class JobDestinationOptions extends Message<JobDestinationOptions> {
  /**
   * @generated from oneof mgmt.v1alpha1.JobDestinationOptions.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.SqlDestinationConnectionOptions sql_options = 1;
     */
    value: SqlDestinationConnectionOptions;
    case: "sqlOptions";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.AwsS3DestinationConnectionOptions aws_s3_options = 2;
     */
    value: AwsS3DestinationConnectionOptions;
    case: "awsS3Options";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<JobDestinationOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobDestinationOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sql_options", kind: "message", T: SqlDestinationConnectionOptions, oneof: "config" },
    { no: 2, name: "aws_s3_options", kind: "message", T: AwsS3DestinationConnectionOptions, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobDestinationOptions {
    return new JobDestinationOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobDestinationOptions {
    return new JobDestinationOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobDestinationOptions {
    return new JobDestinationOptions().fromJsonString(jsonString, options);
  }

  static equals(a: JobDestinationOptions | PlainMessage<JobDestinationOptions> | undefined, b: JobDestinationOptions | PlainMessage<JobDestinationOptions> | undefined): boolean {
    return proto3.util.equals(JobDestinationOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.SqlDestinationConnectionOptions
 */
export class SqlDestinationConnectionOptions extends Message<SqlDestinationConnectionOptions> {
  /**
   * @generated from field: optional bool truncate_before_insert = 1;
   */
  truncateBeforeInsert?: boolean;

  /**
   * @generated from field: optional bool init_db_schema = 2;
   */
  initDbSchema?: boolean;

  constructor(data?: PartialMessage<SqlDestinationConnectionOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.SqlDestinationConnectionOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "truncate_before_insert", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "init_db_schema", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SqlDestinationConnectionOptions {
    return new SqlDestinationConnectionOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SqlDestinationConnectionOptions {
    return new SqlDestinationConnectionOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SqlDestinationConnectionOptions {
    return new SqlDestinationConnectionOptions().fromJsonString(jsonString, options);
  }

  static equals(a: SqlDestinationConnectionOptions | PlainMessage<SqlDestinationConnectionOptions> | undefined, b: SqlDestinationConnectionOptions | PlainMessage<SqlDestinationConnectionOptions> | undefined): boolean {
    return proto3.util.equals(SqlDestinationConnectionOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.AwsS3DestinationConnectionOptions
 */
export class AwsS3DestinationConnectionOptions extends Message<AwsS3DestinationConnectionOptions> {
  constructor(data?: PartialMessage<AwsS3DestinationConnectionOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.AwsS3DestinationConnectionOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AwsS3DestinationConnectionOptions {
    return new AwsS3DestinationConnectionOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AwsS3DestinationConnectionOptions {
    return new AwsS3DestinationConnectionOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AwsS3DestinationConnectionOptions {
    return new AwsS3DestinationConnectionOptions().fromJsonString(jsonString, options);
  }

  static equals(a: AwsS3DestinationConnectionOptions | PlainMessage<AwsS3DestinationConnectionOptions> | undefined, b: AwsS3DestinationConnectionOptions | PlainMessage<AwsS3DestinationConnectionOptions> | undefined): boolean {
    return proto3.util.equals(AwsS3DestinationConnectionOptions, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobRequest
 */
export class CreateJobRequest extends Message<CreateJobRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string job_name = 2;
   */
  jobName = "";

  /**
   * @generated from field: optional string cron_schedule = 3;
   */
  cronSchedule?: string;

  /**
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 4;
   */
  mappings: JobMapping[] = [];

  /**
   * @generated from field: mgmt.v1alpha1.JobSource source = 5;
   */
  source?: JobSource;

  /**
   * @generated from field: repeated mgmt.v1alpha1.CreateJobDestination destinations = 6;
   */
  destinations: CreateJobDestination[] = [];

  constructor(data?: PartialMessage<CreateJobRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "job_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "cron_schedule", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "mappings", kind: "message", T: JobMapping, repeated: true },
    { no: 5, name: "source", kind: "message", T: JobSource },
    { no: 6, name: "destinations", kind: "message", T: CreateJobDestination, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobRequest {
    return new CreateJobRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobRequest {
    return new CreateJobRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobRequest {
    return new CreateJobRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobRequest | PlainMessage<CreateJobRequest> | undefined, b: CreateJobRequest | PlainMessage<CreateJobRequest> | undefined): boolean {
    return proto3.util.equals(CreateJobRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobResponse
 */
export class CreateJobResponse extends Message<CreateJobResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<CreateJobResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobResponse {
    return new CreateJobResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobResponse {
    return new CreateJobResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobResponse {
    return new CreateJobResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobResponse | PlainMessage<CreateJobResponse> | undefined, b: CreateJobResponse | PlainMessage<CreateJobResponse> | undefined): boolean {
    return proto3.util.equals(CreateJobResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobMapping
 */
export class JobMapping extends Message<JobMapping> {
  /**
   * @generated from field: string schema = 1;
   */
  schema = "";

  /**
   * @generated from field: string table = 2;
   */
  table = "";

  /**
   * @generated from field: string column = 3;
   */
  column = "";

  /**
   * @generated from field: string transformer = 5;
   */
  transformer = "";

  /**
   * @generated from field: bool exclude = 6;
   */
  exclude = false;

  constructor(data?: PartialMessage<JobMapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobMapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "schema", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "table", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "column", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "transformer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "exclude", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobMapping {
    return new JobMapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobMapping {
    return new JobMapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobMapping {
    return new JobMapping().fromJsonString(jsonString, options);
  }

  static equals(a: JobMapping | PlainMessage<JobMapping> | undefined, b: JobMapping | PlainMessage<JobMapping> | undefined): boolean {
    return proto3.util.equals(JobMapping, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRequest
 */
export class GetJobRequest extends Message<GetJobRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetJobRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRequest {
    return new GetJobRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRequest {
    return new GetJobRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRequest {
    return new GetJobRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRequest | PlainMessage<GetJobRequest> | undefined, b: GetJobRequest | PlainMessage<GetJobRequest> | undefined): boolean {
    return proto3.util.equals(GetJobRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobResponse
 */
export class GetJobResponse extends Message<GetJobResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<GetJobResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobResponse {
    return new GetJobResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobResponse {
    return new GetJobResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobResponse {
    return new GetJobResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobResponse | PlainMessage<GetJobResponse> | undefined, b: GetJobResponse | PlainMessage<GetJobResponse> | undefined): boolean {
    return proto3.util.equals(GetJobResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobScheduleRequest
 */
export class UpdateJobScheduleRequest extends Message<UpdateJobScheduleRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string cron_schedule = 2;
   */
  cronSchedule?: string;

  constructor(data?: PartialMessage<UpdateJobScheduleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobScheduleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cron_schedule", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobScheduleRequest {
    return new UpdateJobScheduleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobScheduleRequest {
    return new UpdateJobScheduleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobScheduleRequest {
    return new UpdateJobScheduleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobScheduleRequest | PlainMessage<UpdateJobScheduleRequest> | undefined, b: UpdateJobScheduleRequest | PlainMessage<UpdateJobScheduleRequest> | undefined): boolean {
    return proto3.util.equals(UpdateJobScheduleRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobScheduleResponse
 */
export class UpdateJobScheduleResponse extends Message<UpdateJobScheduleResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<UpdateJobScheduleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobScheduleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobScheduleResponse {
    return new UpdateJobScheduleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobScheduleResponse {
    return new UpdateJobScheduleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobScheduleResponse {
    return new UpdateJobScheduleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobScheduleResponse | PlainMessage<UpdateJobScheduleResponse> | undefined, b: UpdateJobScheduleResponse | PlainMessage<UpdateJobScheduleResponse> | undefined): boolean {
    return proto3.util.equals(UpdateJobScheduleResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobSourceConnectionRequest
 */
export class UpdateJobSourceConnectionRequest extends Message<UpdateJobSourceConnectionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobSource source = 2;
   */
  source?: JobSource;

  /**
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 3;
   */
  mappings: JobMapping[] = [];

  constructor(data?: PartialMessage<UpdateJobSourceConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobSourceConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source", kind: "message", T: JobSource },
    { no: 3, name: "mappings", kind: "message", T: JobMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobSourceConnectionRequest {
    return new UpdateJobSourceConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobSourceConnectionRequest {
    return new UpdateJobSourceConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobSourceConnectionRequest {
    return new UpdateJobSourceConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobSourceConnectionRequest | PlainMessage<UpdateJobSourceConnectionRequest> | undefined, b: UpdateJobSourceConnectionRequest | PlainMessage<UpdateJobSourceConnectionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateJobSourceConnectionRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobSourceConnectionResponse
 */
export class UpdateJobSourceConnectionResponse extends Message<UpdateJobSourceConnectionResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<UpdateJobSourceConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobSourceConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobSourceConnectionResponse {
    return new UpdateJobSourceConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobSourceConnectionResponse {
    return new UpdateJobSourceConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobSourceConnectionResponse {
    return new UpdateJobSourceConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobSourceConnectionResponse | PlainMessage<UpdateJobSourceConnectionResponse> | undefined, b: UpdateJobSourceConnectionResponse | PlainMessage<UpdateJobSourceConnectionResponse> | undefined): boolean {
    return proto3.util.equals(UpdateJobSourceConnectionResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobDestinationConnectionRequest
 */
export class UpdateJobDestinationConnectionRequest extends Message<UpdateJobDestinationConnectionRequest> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: string connection_id = 2;
   */
  connectionId = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 3;
   */
  options?: JobDestinationOptions;

  /**
   * @generated from field: string destination_id = 4;
   */
  destinationId = "";

  constructor(data?: PartialMessage<UpdateJobDestinationConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobDestinationConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "options", kind: "message", T: JobDestinationOptions },
    { no: 4, name: "destination_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobDestinationConnectionRequest {
    return new UpdateJobDestinationConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobDestinationConnectionRequest {
    return new UpdateJobDestinationConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobDestinationConnectionRequest {
    return new UpdateJobDestinationConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobDestinationConnectionRequest | PlainMessage<UpdateJobDestinationConnectionRequest> | undefined, b: UpdateJobDestinationConnectionRequest | PlainMessage<UpdateJobDestinationConnectionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateJobDestinationConnectionRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateJobDestinationConnectionResponse
 */
export class UpdateJobDestinationConnectionResponse extends Message<UpdateJobDestinationConnectionResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<UpdateJobDestinationConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateJobDestinationConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobDestinationConnectionResponse {
    return new UpdateJobDestinationConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobDestinationConnectionResponse {
    return new UpdateJobDestinationConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobDestinationConnectionResponse {
    return new UpdateJobDestinationConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobDestinationConnectionResponse | PlainMessage<UpdateJobDestinationConnectionResponse> | undefined, b: UpdateJobDestinationConnectionResponse | PlainMessage<UpdateJobDestinationConnectionResponse> | undefined): boolean {
    return proto3.util.equals(UpdateJobDestinationConnectionResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobDestinationConnectionRequest
 */
export class DeleteJobDestinationConnectionRequest extends Message<DeleteJobDestinationConnectionRequest> {
  /**
   * @generated from field: string destination_id = 1;
   */
  destinationId = "";

  constructor(data?: PartialMessage<DeleteJobDestinationConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobDestinationConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobDestinationConnectionRequest {
    return new DeleteJobDestinationConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobDestinationConnectionRequest {
    return new DeleteJobDestinationConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobDestinationConnectionRequest {
    return new DeleteJobDestinationConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobDestinationConnectionRequest | PlainMessage<DeleteJobDestinationConnectionRequest> | undefined, b: DeleteJobDestinationConnectionRequest | PlainMessage<DeleteJobDestinationConnectionRequest> | undefined): boolean {
    return proto3.util.equals(DeleteJobDestinationConnectionRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobDestinationConnectionResponse
 */
export class DeleteJobDestinationConnectionResponse extends Message<DeleteJobDestinationConnectionResponse> {
  constructor(data?: PartialMessage<DeleteJobDestinationConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobDestinationConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobDestinationConnectionResponse {
    return new DeleteJobDestinationConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobDestinationConnectionResponse {
    return new DeleteJobDestinationConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobDestinationConnectionResponse {
    return new DeleteJobDestinationConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobDestinationConnectionResponse | PlainMessage<DeleteJobDestinationConnectionResponse> | undefined, b: DeleteJobDestinationConnectionResponse | PlainMessage<DeleteJobDestinationConnectionResponse> | undefined): boolean {
    return proto3.util.equals(DeleteJobDestinationConnectionResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestinationConnectionsRequest
 */
export class CreateJobDestinationConnectionsRequest extends Message<CreateJobDestinationConnectionsRequest> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: repeated mgmt.v1alpha1.CreateJobDestination destinations = 2;
   */
  destinations: CreateJobDestination[] = [];

  constructor(data?: PartialMessage<CreateJobDestinationConnectionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobDestinationConnectionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "destinations", kind: "message", T: CreateJobDestination, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobDestinationConnectionsRequest {
    return new CreateJobDestinationConnectionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobDestinationConnectionsRequest {
    return new CreateJobDestinationConnectionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobDestinationConnectionsRequest {
    return new CreateJobDestinationConnectionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobDestinationConnectionsRequest | PlainMessage<CreateJobDestinationConnectionsRequest> | undefined, b: CreateJobDestinationConnectionsRequest | PlainMessage<CreateJobDestinationConnectionsRequest> | undefined): boolean {
    return proto3.util.equals(CreateJobDestinationConnectionsRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestinationConnectionsResponse
 */
export class CreateJobDestinationConnectionsResponse extends Message<CreateJobDestinationConnectionsResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;

  constructor(data?: PartialMessage<CreateJobDestinationConnectionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobDestinationConnectionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job", kind: "message", T: Job },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobDestinationConnectionsResponse {
    return new CreateJobDestinationConnectionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobDestinationConnectionsResponse {
    return new CreateJobDestinationConnectionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobDestinationConnectionsResponse {
    return new CreateJobDestinationConnectionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobDestinationConnectionsResponse | PlainMessage<CreateJobDestinationConnectionsResponse> | undefined, b: CreateJobDestinationConnectionsResponse | PlainMessage<CreateJobDestinationConnectionsResponse> | undefined): boolean {
    return proto3.util.equals(CreateJobDestinationConnectionsResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRequest
 */
export class DeleteJobRequest extends Message<DeleteJobRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteJobRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobRequest {
    return new DeleteJobRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobRequest {
    return new DeleteJobRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobRequest {
    return new DeleteJobRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobRequest | PlainMessage<DeleteJobRequest> | undefined, b: DeleteJobRequest | PlainMessage<DeleteJobRequest> | undefined): boolean {
    return proto3.util.equals(DeleteJobRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobResponse
 */
export class DeleteJobResponse extends Message<DeleteJobResponse> {
  constructor(data?: PartialMessage<DeleteJobResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobResponse {
    return new DeleteJobResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobResponse {
    return new DeleteJobResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobResponse {
    return new DeleteJobResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobResponse | PlainMessage<DeleteJobResponse> | undefined, b: DeleteJobResponse | PlainMessage<DeleteJobResponse> | undefined): boolean {
    return proto3.util.equals(DeleteJobResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsJobNameAvailableRequest
 */
export class IsJobNameAvailableRequest extends Message<IsJobNameAvailableRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  constructor(data?: PartialMessage<IsJobNameAvailableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsJobNameAvailableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsJobNameAvailableRequest {
    return new IsJobNameAvailableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsJobNameAvailableRequest {
    return new IsJobNameAvailableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsJobNameAvailableRequest {
    return new IsJobNameAvailableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IsJobNameAvailableRequest | PlainMessage<IsJobNameAvailableRequest> | undefined, b: IsJobNameAvailableRequest | PlainMessage<IsJobNameAvailableRequest> | undefined): boolean {
    return proto3.util.equals(IsJobNameAvailableRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsJobNameAvailableResponse
 */
export class IsJobNameAvailableResponse extends Message<IsJobNameAvailableResponse> {
  /**
   * @generated from field: bool is_available = 1;
   */
  isAvailable = false;

  constructor(data?: PartialMessage<IsJobNameAvailableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsJobNameAvailableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsJobNameAvailableResponse {
    return new IsJobNameAvailableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsJobNameAvailableResponse {
    return new IsJobNameAvailableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsJobNameAvailableResponse {
    return new IsJobNameAvailableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IsJobNameAvailableResponse | PlainMessage<IsJobNameAvailableResponse> | undefined, b: IsJobNameAvailableResponse | PlainMessage<IsJobNameAvailableResponse> | undefined): boolean {
    return proto3.util.equals(IsJobNameAvailableResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunsRequest
 */
export class GetJobRunsRequest extends Message<GetJobRunsRequest> {
  /**
   * @generated from oneof mgmt.v1alpha1.GetJobRunsRequest.id
   */
  id: {
    /**
     * @generated from field: string job_id = 1;
     */
    value: string;
    case: "jobId";
  } | {
    /**
     * @generated from field: string account_id = 2;
     */
    value: string;
    case: "accountId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GetJobRunsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "id" },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "id" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunsRequest {
    return new GetJobRunsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunsRequest {
    return new GetJobRunsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunsRequest {
    return new GetJobRunsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunsRequest | PlainMessage<GetJobRunsRequest> | undefined, b: GetJobRunsRequest | PlainMessage<GetJobRunsRequest> | undefined): boolean {
    return proto3.util.equals(GetJobRunsRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunsResponse
 */
export class GetJobRunsResponse extends Message<GetJobRunsResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.JobRun job_runs = 1;
   */
  jobRuns: JobRun[] = [];

  constructor(data?: PartialMessage<GetJobRunsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_runs", kind: "message", T: JobRun, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunsResponse {
    return new GetJobRunsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunsResponse {
    return new GetJobRunsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunsResponse {
    return new GetJobRunsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunsResponse | PlainMessage<GetJobRunsResponse> | undefined, b: GetJobRunsResponse | PlainMessage<GetJobRunsResponse> | undefined): boolean {
    return proto3.util.equals(GetJobRunsResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunRequest
 */
export class GetJobRunRequest extends Message<GetJobRunRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetJobRunRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunRequest {
    return new GetJobRunRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunRequest {
    return new GetJobRunRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunRequest {
    return new GetJobRunRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunRequest | PlainMessage<GetJobRunRequest> | undefined, b: GetJobRunRequest | PlainMessage<GetJobRunRequest> | undefined): boolean {
    return proto3.util.equals(GetJobRunRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunResponse
 */
export class GetJobRunResponse extends Message<GetJobRunResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.JobRun job_run = 1;
   */
  jobRun?: JobRun;

  constructor(data?: PartialMessage<GetJobRunResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_run", kind: "message", T: JobRun },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunResponse {
    return new GetJobRunResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunResponse {
    return new GetJobRunResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunResponse {
    return new GetJobRunResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunResponse | PlainMessage<GetJobRunResponse> | undefined, b: GetJobRunResponse | PlainMessage<GetJobRunResponse> | undefined): boolean {
    return proto3.util.equals(GetJobRunResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobRunRequest
 */
export class CreateJobRunRequest extends Message<CreateJobRunRequest> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<CreateJobRunRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobRunRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobRunRequest {
    return new CreateJobRunRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobRunRequest {
    return new CreateJobRunRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobRunRequest {
    return new CreateJobRunRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobRunRequest | PlainMessage<CreateJobRunRequest> | undefined, b: CreateJobRunRequest | PlainMessage<CreateJobRunRequest> | undefined): boolean {
    return proto3.util.equals(CreateJobRunRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateJobRunResponse
 */
export class CreateJobRunResponse extends Message<CreateJobRunResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.JobRun job_run = 1;
   */
  jobRun?: JobRun;

  constructor(data?: PartialMessage<CreateJobRunResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateJobRunResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_run", kind: "message", T: JobRun },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobRunResponse {
    return new CreateJobRunResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobRunResponse {
    return new CreateJobRunResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobRunResponse {
    return new CreateJobRunResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobRunResponse | PlainMessage<CreateJobRunResponse> | undefined, b: CreateJobRunResponse | PlainMessage<CreateJobRunResponse> | undefined): boolean {
    return proto3.util.equals(CreateJobRunResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CancelJobRunRequest
 */
export class CancelJobRunRequest extends Message<CancelJobRunRequest> {
  /**
   * @generated from field: string job_run_id = 1;
   */
  jobRunId = "";

  constructor(data?: PartialMessage<CancelJobRunRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CancelJobRunRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_run_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelJobRunRequest {
    return new CancelJobRunRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelJobRunRequest {
    return new CancelJobRunRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelJobRunRequest {
    return new CancelJobRunRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelJobRunRequest | PlainMessage<CancelJobRunRequest> | undefined, b: CancelJobRunRequest | PlainMessage<CancelJobRunRequest> | undefined): boolean {
    return proto3.util.equals(CancelJobRunRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CancelJobRunResponse
 */
export class CancelJobRunResponse extends Message<CancelJobRunResponse> {
  constructor(data?: PartialMessage<CancelJobRunResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CancelJobRunResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelJobRunResponse {
    return new CancelJobRunResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelJobRunResponse {
    return new CancelJobRunResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelJobRunResponse {
    return new CancelJobRunResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelJobRunResponse | PlainMessage<CancelJobRunResponse> | undefined, b: CancelJobRunResponse | PlainMessage<CancelJobRunResponse> | undefined): boolean {
    return proto3.util.equals(CancelJobRunResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Job
 */
export class Job extends Message<Job> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string created_by_user_id = 2;
   */
  createdByUserId = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string updated_by_user_id = 4;
   */
  updatedByUserId = "";

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobStatus status = 7;
   */
  status = JobStatus.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.JobSource source = 8;
   */
  source?: JobSource;

  /**
   * @generated from field: repeated mgmt.v1alpha1.JobDestination destinations = 9;
   */
  destinations: JobDestination[] = [];

  /**
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 10;
   */
  mappings: JobMapping[] = [];

  /**
   * @generated from field: optional string cron_schedule = 11;
   */
  cronSchedule?: string;

  /**
   * @generated from field: string account_id = 12;
   */
  accountId = "";

  constructor(data?: PartialMessage<Job>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Job";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_by_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "updated_by_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "updated_at", kind: "message", T: Timestamp },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(JobStatus) },
    { no: 8, name: "source", kind: "message", T: JobSource },
    { no: 9, name: "destinations", kind: "message", T: JobDestination, repeated: true },
    { no: 10, name: "mappings", kind: "message", T: JobMapping, repeated: true },
    { no: 11, name: "cron_schedule", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Job {
    return new Job().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Job {
    return new Job().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Job {
    return new Job().fromJsonString(jsonString, options);
  }

  static equals(a: Job | PlainMessage<Job> | undefined, b: Job | PlainMessage<Job> | undefined): boolean {
    return proto3.util.equals(Job, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.ActivityFailure
 */
export class ActivityFailure extends Message<ActivityFailure> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<ActivityFailure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.ActivityFailure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityFailure {
    return new ActivityFailure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityFailure {
    return new ActivityFailure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityFailure {
    return new ActivityFailure().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityFailure | PlainMessage<ActivityFailure> | undefined, b: ActivityFailure | PlainMessage<ActivityFailure> | undefined): boolean {
    return proto3.util.equals(ActivityFailure, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.PendingActivity
 */
export class PendingActivity extends Message<PendingActivity> {
  /**
   * @generated from field: mgmt.v1alpha1.ActivityStatus status = 1;
   */
  status = ActivityStatus.UNSPECIFIED;

  /**
   * @generated from field: string activity_name = 2;
   */
  activityName = "";

  /**
   * @generated from field: optional mgmt.v1alpha1.ActivityFailure last_failure = 3;
   */
  lastFailure?: ActivityFailure;

  constructor(data?: PartialMessage<PendingActivity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.PendingActivity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(ActivityStatus) },
    { no: 2, name: "activity_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_failure", kind: "message", T: ActivityFailure, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PendingActivity {
    return new PendingActivity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PendingActivity {
    return new PendingActivity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PendingActivity {
    return new PendingActivity().fromJsonString(jsonString, options);
  }

  static equals(a: PendingActivity | PlainMessage<PendingActivity> | undefined, b: PendingActivity | PlainMessage<PendingActivity> | undefined): boolean {
    return proto3.util.equals(PendingActivity, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobRun
 */
export class JobRun extends Message<JobRun> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string job_id = 2;
   */
  jobId = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: mgmt.v1alpha1.JobRunStatus status = 4;
   */
  status = JobRunStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 6;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp completed_at = 7;
   */
  completedAt?: Timestamp;

  /**
   * @generated from field: repeated mgmt.v1alpha1.PendingActivity pending_activities = 8;
   */
  pendingActivities: PendingActivity[] = [];

  constructor(data?: PartialMessage<JobRun>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobRun";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(JobRunStatus) },
    { no: 6, name: "started_at", kind: "message", T: Timestamp },
    { no: 7, name: "completed_at", kind: "message", T: Timestamp, opt: true },
    { no: 8, name: "pending_activities", kind: "message", T: PendingActivity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobRun {
    return new JobRun().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobRun {
    return new JobRun().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobRun {
    return new JobRun().fromJsonString(jsonString, options);
  }

  static equals(a: JobRun | PlainMessage<JobRun> | undefined, b: JobRun | PlainMessage<JobRun> | undefined): boolean {
    return proto3.util.equals(JobRun, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.JobRunEvent
 */
export class JobRunEvent extends Message<JobRunEvent> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string type = 3;
   */
  type = "";

  /**
   * @generated from field: int64 id = 4;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<JobRunEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.JobRunEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobRunEvent {
    return new JobRunEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobRunEvent {
    return new JobRunEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobRunEvent {
    return new JobRunEvent().fromJsonString(jsonString, options);
  }

  static equals(a: JobRunEvent | PlainMessage<JobRunEvent> | undefined, b: JobRunEvent | PlainMessage<JobRunEvent> | undefined): boolean {
    return proto3.util.equals(JobRunEvent, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunEventsRequest
 */
export class GetJobRunEventsRequest extends Message<GetJobRunEventsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetJobRunEventsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunEventsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunEventsRequest {
    return new GetJobRunEventsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunEventsRequest {
    return new GetJobRunEventsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunEventsRequest {
    return new GetJobRunEventsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunEventsRequest | PlainMessage<GetJobRunEventsRequest> | undefined, b: GetJobRunEventsRequest | PlainMessage<GetJobRunEventsRequest> | undefined): boolean {
    return proto3.util.equals(GetJobRunEventsRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetJobRunEventsResponse
 */
export class GetJobRunEventsResponse extends Message<GetJobRunEventsResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.JobRunEvent events = 1;
   */
  events: JobRunEvent[] = [];

  constructor(data?: PartialMessage<GetJobRunEventsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetJobRunEventsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "events", kind: "message", T: JobRunEvent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobRunEventsResponse {
    return new GetJobRunEventsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobRunEventsResponse {
    return new GetJobRunEventsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobRunEventsResponse {
    return new GetJobRunEventsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobRunEventsResponse | PlainMessage<GetJobRunEventsResponse> | undefined, b: GetJobRunEventsResponse | PlainMessage<GetJobRunEventsResponse> | undefined): boolean {
    return proto3.util.equals(GetJobRunEventsResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Transformer
 */
export class Transformer extends Message<Transformer> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string value = 2;
   */
  value = "";

  constructor(data?: PartialMessage<Transformer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Transformer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transformer {
    return new Transformer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transformer {
    return new Transformer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transformer {
    return new Transformer().fromJsonString(jsonString, options);
  }

  static equals(a: Transformer | PlainMessage<Transformer> | undefined, b: Transformer | PlainMessage<Transformer> | undefined): boolean {
    return proto3.util.equals(Transformer, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetTransformersRequest
 */
export class GetTransformersRequest extends Message<GetTransformersRequest> {
  constructor(data?: PartialMessage<GetTransformersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetTransformersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTransformersRequest {
    return new GetTransformersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTransformersRequest {
    return new GetTransformersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTransformersRequest {
    return new GetTransformersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetTransformersRequest | PlainMessage<GetTransformersRequest> | undefined, b: GetTransformersRequest | PlainMessage<GetTransformersRequest> | undefined): boolean {
    return proto3.util.equals(GetTransformersRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetTransformersResponse
 */
export class GetTransformersResponse extends Message<GetTransformersResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.Transformer transformers = 1;
   */
  transformers: Transformer[] = [];

  constructor(data?: PartialMessage<GetTransformersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetTransformersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformers", kind: "message", T: Transformer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTransformersResponse {
    return new GetTransformersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTransformersResponse {
    return new GetTransformersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTransformersResponse {
    return new GetTransformersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetTransformersResponse | PlainMessage<GetTransformersResponse> | undefined, b: GetTransformersResponse | PlainMessage<GetTransformersResponse> | undefined): boolean {
    return proto3.util.equals(GetTransformersResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRunRequest
 */
export class DeleteJobRunRequest extends Message<DeleteJobRunRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteJobRunRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobRunRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobRunRequest {
    return new DeleteJobRunRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobRunRequest {
    return new DeleteJobRunRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobRunRequest {
    return new DeleteJobRunRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobRunRequest | PlainMessage<DeleteJobRunRequest> | undefined, b: DeleteJobRunRequest | PlainMessage<DeleteJobRunRequest> | undefined): boolean {
    return proto3.util.equals(DeleteJobRunRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRunResponse
 */
export class DeleteJobRunResponse extends Message<DeleteJobRunResponse> {
  constructor(data?: PartialMessage<DeleteJobRunResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteJobRunResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobRunResponse {
    return new DeleteJobRunResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobRunResponse {
    return new DeleteJobRunResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobRunResponse {
    return new DeleteJobRunResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobRunResponse | PlainMessage<DeleteJobRunResponse> | undefined, b: DeleteJobRunResponse | PlainMessage<DeleteJobRunResponse> | undefined): boolean {
    return proto3.util.equals(DeleteJobRunResponse, a, b);
  }
}

