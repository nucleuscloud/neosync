// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file mgmt/v1alpha1/auth.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message mgmt.v1alpha1.RefreshAccessTokenRequest
 */
export class RefreshAccessTokenRequest extends Message<RefreshAccessTokenRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken = "";

  constructor(data?: PartialMessage<RefreshAccessTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.RefreshAccessTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshAccessTokenRequest {
    return new RefreshAccessTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshAccessTokenRequest {
    return new RefreshAccessTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshAccessTokenRequest {
    return new RefreshAccessTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshAccessTokenRequest | PlainMessage<RefreshAccessTokenRequest> | undefined, b: RefreshAccessTokenRequest | PlainMessage<RefreshAccessTokenRequest> | undefined): boolean {
    return proto3.util.equals(RefreshAccessTokenRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.RefreshAccessTokenResponse
 */
export class RefreshAccessTokenResponse extends Message<RefreshAccessTokenResponse> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken = "";

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken = "";

  /**
   * @generated from field: int64 expires_in = 3;
   */
  expiresIn = protoInt64.zero;

  /**
   * @generated from field: string scope = 4;
   */
  scope = "";

  /**
   * @generated from field: string id_token = 5;
   */
  idToken = "";

  /**
   * @generated from field: string token_type = 6;
   */
  tokenType = "";

  constructor(data?: PartialMessage<RefreshAccessTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.RefreshAccessTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expires_in", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshAccessTokenResponse {
    return new RefreshAccessTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshAccessTokenResponse {
    return new RefreshAccessTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshAccessTokenResponse {
    return new RefreshAccessTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshAccessTokenResponse | PlainMessage<RefreshAccessTokenResponse> | undefined, b: RefreshAccessTokenResponse | PlainMessage<RefreshAccessTokenResponse> | undefined): boolean {
    return proto3.util.equals(RefreshAccessTokenResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetAccessTokenRequest
 */
export class GetAccessTokenRequest extends Message<GetAccessTokenRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: string redirect_uri = 3;
   */
  redirectUri = "";

  constructor(data?: PartialMessage<GetAccessTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetAccessTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessTokenRequest {
    return new GetAccessTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessTokenRequest {
    return new GetAccessTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessTokenRequest {
    return new GetAccessTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessTokenRequest | PlainMessage<GetAccessTokenRequest> | undefined, b: GetAccessTokenRequest | PlainMessage<GetAccessTokenRequest> | undefined): boolean {
    return proto3.util.equals(GetAccessTokenRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetAccessTokenResponse
 */
export class GetAccessTokenResponse extends Message<GetAccessTokenResponse> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken = "";

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken = "";

  /**
   * @generated from field: int64 expires_in = 3;
   */
  expiresIn = protoInt64.zero;

  /**
   * @generated from field: string scope = 4;
   */
  scope = "";

  /**
   * @generated from field: string id_token = 5;
   */
  idToken = "";

  /**
   * @generated from field: string token_type = 6;
   */
  tokenType = "";

  constructor(data?: PartialMessage<GetAccessTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetAccessTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expires_in", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessTokenResponse {
    return new GetAccessTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessTokenResponse {
    return new GetAccessTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessTokenResponse {
    return new GetAccessTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessTokenResponse | PlainMessage<GetAccessTokenResponse> | undefined, b: GetAccessTokenResponse | PlainMessage<GetAccessTokenResponse> | undefined): boolean {
    return proto3.util.equals(GetAccessTokenResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetAuthStatusRequest
 */
export class GetAuthStatusRequest extends Message<GetAuthStatusRequest> {
  constructor(data?: PartialMessage<GetAuthStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetAuthStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined, b: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetAuthStatusResponse
 */
export class GetAuthStatusResponse extends Message<GetAuthStatusResponse> {
  /**
   * @generated from field: bool is_enabled = 1;
   */
  isEnabled = false;

  constructor(data?: PartialMessage<GetAuthStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetAuthStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined, b: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusResponse, a, b);
  }
}

