// @generated by protoc-gen-connect-es v1.0.0 with parameter "target=ts,import_extension=none"
// @generated from file mgmt/v1alpha1/api_key.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateAccountApiKeyRequest, CreateAccountApiKeyResponse, DeleteAccountApiKeyRequest, DeleteAccountApiKeyResponse, GetAccountApiKeyRequest, GetAccountApiKeyResponse, GetAccountApiKeysRequest, GetAccountApiKeysResponse, RegenerateAccountApiKeyRequest, RegenerateAccountApiKeyResponse } from "./api_key_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service mgmt.v1alpha1.ApiKeyService
 */
export const ApiKeyService = {
  typeName: "mgmt.v1alpha1.ApiKeyService",
  methods: {
    /**
     * @generated from rpc mgmt.v1alpha1.ApiKeyService.GetAccountApiKeys
     */
    getAccountApiKeys: {
      name: "GetAccountApiKeys",
      I: GetAccountApiKeysRequest,
      O: GetAccountApiKeysResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ApiKeyService.GetAccountApiKey
     */
    getAccountApiKey: {
      name: "GetAccountApiKey",
      I: GetAccountApiKeyRequest,
      O: GetAccountApiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ApiKeyService.CreateAccountApiKey
     */
    createAccountApiKey: {
      name: "CreateAccountApiKey",
      I: CreateAccountApiKeyRequest,
      O: CreateAccountApiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ApiKeyService.RegenerateAccountApiKey
     */
    regenerateAccountApiKey: {
      name: "RegenerateAccountApiKey",
      I: RegenerateAccountApiKeyRequest,
      O: RegenerateAccountApiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ApiKeyService.DeleteAccountApiKey
     */
    deleteAccountApiKey: {
      name: "DeleteAccountApiKey",
      I: DeleteAccountApiKeyRequest,
      O: DeleteAccountApiKeyResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

