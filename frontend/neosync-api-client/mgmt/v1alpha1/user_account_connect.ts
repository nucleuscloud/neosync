// @generated by protoc-gen-connect-es v1.0.0 with parameter "target=ts,import_extension=none"
// @generated from file mgmt/v1alpha1/user_account.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ConvertPersonalToTeamAccountRequest, ConvertPersonalToTeamAccountResponse, GetUserAccountsRequest, GetUserAccountsResponse, GetUserRequest, GetUserResponse, IsUserInAccountRequest, IsUserInAccountResponse, SetPersonalAccountRequest, SetPersonalAccountResponse, SetUserRequest, SetUserResponse } from "./user_account_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service mgmt.v1alpha1.UserAccountService
 */
export const UserAccountService = {
  typeName: "mgmt.v1alpha1.UserAccountService",
  methods: {
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: GetUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.SetUser
     */
    setUser: {
      name: "SetUser",
      I: SetUserRequest,
      O: SetUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.GetUserAccounts
     */
    getUserAccounts: {
      name: "GetUserAccounts",
      I: GetUserAccountsRequest,
      O: GetUserAccountsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.SetPersonalAccount
     */
    setPersonalAccount: {
      name: "SetPersonalAccount",
      I: SetPersonalAccountRequest,
      O: SetPersonalAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.ConvertPersonalToTeamAccount
     */
    convertPersonalToTeamAccount: {
      name: "ConvertPersonalToTeamAccount",
      I: ConvertPersonalToTeamAccountRequest,
      O: ConvertPersonalToTeamAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.UserAccountService.IsUserInAccount
     */
    isUserInAccount: {
      name: "IsUserInAccount",
      I: IsUserInAccountRequest,
      O: IsUserInAccountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

