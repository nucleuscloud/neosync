// @generated by protoc-gen-connect-es v1.0.0 with parameter "target=ts,import_extension=none"
// @generated from file mgmt/v1alpha1/connection.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CheckConnectionConfigRequest, CheckConnectionConfigResponse, CheckSqlQueryRequest, CheckSqlQueryResponse, CreateConnectionRequest, CreateConnectionResponse, DeleteConnectionRequest, DeleteConnectionResponse, GetConnectionDataStreamRequest, GetConnectionDataStreamResponse, GetConnectionForeignConstraintsRequest, GetConnectionForeignConstraintsResponse, GetConnectionRequest, GetConnectionResponse, GetConnectionSchemaRequest, GetConnectionSchemaResponse, GetConnectionsRequest, GetConnectionsResponse, IsConnectionNameAvailableRequest, IsConnectionNameAvailableResponse, UpdateConnectionRequest, UpdateConnectionResponse } from "./connection_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service mgmt.v1alpha1.ConnectionService
 */
export const ConnectionService = {
  typeName: "mgmt.v1alpha1.ConnectionService",
  methods: {
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnections
     */
    getConnections: {
      name: "GetConnections",
      I: GetConnectionsRequest,
      O: GetConnectionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnection
     */
    getConnection: {
      name: "GetConnection",
      I: GetConnectionRequest,
      O: GetConnectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.CreateConnection
     */
    createConnection: {
      name: "CreateConnection",
      I: CreateConnectionRequest,
      O: CreateConnectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.UpdateConnection
     */
    updateConnection: {
      name: "UpdateConnection",
      I: UpdateConnectionRequest,
      O: UpdateConnectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.DeleteConnection
     */
    deleteConnection: {
      name: "DeleteConnection",
      I: DeleteConnectionRequest,
      O: DeleteConnectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.IsConnectionNameAvailable
     */
    isConnectionNameAvailable: {
      name: "IsConnectionNameAvailable",
      I: IsConnectionNameAvailableRequest,
      O: IsConnectionNameAvailableResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.CheckConnectionConfig
     */
    checkConnectionConfig: {
      name: "CheckConnectionConfig",
      I: CheckConnectionConfigRequest,
      O: CheckConnectionConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnectionSchema
     */
    getConnectionSchema: {
      name: "GetConnectionSchema",
      I: GetConnectionSchemaRequest,
      O: GetConnectionSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.CheckSqlQuery
     */
    checkSqlQuery: {
      name: "CheckSqlQuery",
      I: CheckSqlQueryRequest,
      O: CheckSqlQueryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnectionDataStream
     */
    getConnectionDataStream: {
      name: "GetConnectionDataStream",
      I: GetConnectionDataStreamRequest,
      O: GetConnectionDataStreamResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnectionForeignConstraints
     */
    getConnectionForeignConstraints: {
      name: "GetConnectionForeignConstraints",
      I: GetConnectionForeignConstraintsRequest,
      O: GetConnectionForeignConstraintsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

