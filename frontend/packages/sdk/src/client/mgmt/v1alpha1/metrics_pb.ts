// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/metrics.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.js";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mgmt/v1alpha1/metrics.proto.
 */
export const file_mgmt_v1alpha1_metrics: GenFile = /*@__PURE__*/
  fileDesc("ChttZ210L3YxYWxwaGExL21ldHJpY3MucHJvdG8SDW1nbXQudjFhbHBoYTEiUgoERGF0ZRIYCgR5ZWFyGAEgASgNQgq6SAcqBRiPTigAEhgKBW1vbnRoGAIgASgNQgm6SAYqBBgfKAASFgoDZGF5GAMgASgNQgm6SAYqBBgfKAAi+QEKGkdldERhaWx5TWV0cmljQ291bnRSZXF1ZXN0EiIKBXN0YXJ0GAEgASgLMhMubWdtdC52MWFscGhhMS5EYXRlEiAKA2VuZBgCIAEoCzITLm1nbXQudjFhbHBoYTEuRGF0ZRIvCgZtZXRyaWMYAyABKA4yHy5tZ210LnYxYWxwaGExLlJhbmdlZE1ldHJpY05hbWUSHgoKYWNjb3VudF9pZBgEIAEoCUIIukgFcgOwAQFIABIaCgZqb2JfaWQYBSABKAlCCLpIBXIDsAEBSAASGgoGcnVuX2lkGAYgASgJQgi6SAVyA7ABAUgAQgwKCmlkZW50aWZpZXIiSAobR2V0RGFpbHlNZXRyaWNDb3VudFJlc3BvbnNlEikKB3Jlc3VsdHMYASADKAsyGC5tZ210LnYxYWxwaGExLkRheVJlc3VsdCI9CglEYXlSZXN1bHQSIQoEZGF0ZRgBIAEoCzITLm1nbXQudjFhbHBoYTEuRGF0ZRINCgVjb3VudBgCIAEoBCLQAgoVR2V0TWV0cmljQ291bnRSZXF1ZXN0EikKBXN0YXJ0GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBInCgNlbmQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KBm1ldHJpYxgDIAEoDjIfLm1nbXQudjFhbHBoYTEuUmFuZ2VkTWV0cmljTmFtZRIeCgphY2NvdW50X2lkGAQgASgJQgi6SAVyA7ABAUgAEhoKBmpvYl9pZBgFIAEoCUIIukgFcgOwAQFIABIaCgZydW5faWQYBiABKAlCCLpIBXIDsAEBSAASJgoJc3RhcnRfZGF5GAcgASgLMhMubWdtdC52MWFscGhhMS5EYXRlEiQKB2VuZF9kYXkYCCABKAsyEy5tZ210LnYxYWxwaGExLkRhdGVCDAoKaWRlbnRpZmllciInChZHZXRNZXRyaWNDb3VudFJlc3BvbnNlEg0KBWNvdW50GAEgASgEKl0KEFJhbmdlZE1ldHJpY05hbWUSIgoeUkFOR0VEX01FVFJJQ19OQU1FX1VOU1BFQ0lGSUVEEAASJQohUkFOR0VEX01FVFJJQ19OQU1FX0lOUFVUX1JFQ0VJVkVEEAEy4QEKDk1ldHJpY3NTZXJ2aWNlEm4KE0dldERhaWx5TWV0cmljQ291bnQSKS5tZ210LnYxYWxwaGExLkdldERhaWx5TWV0cmljQ291bnRSZXF1ZXN0GioubWdtdC52MWFscGhhMS5HZXREYWlseU1ldHJpY0NvdW50UmVzcG9uc2UiABJfCg5HZXRNZXRyaWNDb3VudBIkLm1nbXQudjFhbHBoYTEuR2V0TWV0cmljQ291bnRSZXF1ZXN0GiUubWdtdC52MWFscGhhMS5HZXRNZXRyaWNDb3VudFJlc3BvbnNlIgBCyAEKEWNvbS5tZ210LnYxYWxwaGExQgxNZXRyaWNzUHJvdG9QAVpQZ2l0aHViLmNvbS9udWNsZXVzY2xvdWQvbmVvc3luYy9iYWNrZW5kL2dlbi9nby9wcm90b3MvbWdtdC92MWFscGhhMTttZ210djFhbHBoYTGiAgNNWFiqAg1NZ210LlYxYWxwaGExygINTWdtdFxWMWFscGhhMeICGU1nbXRcVjFhbHBoYTFcR1BCTWV0YWRhdGHqAg5NZ210OjpWMWFscGhhMWIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_timestamp]);

/**
 * Represents a whole or partial calendar date, such as a birthday. The time of
 * day and time zone are either specified elsewhere or are insignificant. The
 * date is relative to the Gregorian Calendar. This can represent one of the
 * following:
 *
 * * A full date, with non-zero year, month, and day values
 * * A month and day value, with a zero year, such as an anniversary
 * * A year on its own, with zero month and day values
 * * A year and month value, with a zero day, such as a credit card expiration
 * date
 *
 * Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and
 * `google.protobuf.Timestamp`.
 *
 * @generated from message mgmt.v1alpha1.Date
 */
export type Date = Message<"mgmt.v1alpha1.Date"> & {
  /**
   * Year of the date. Must be from 1 to 9999, or 0 to specify a date without
   * a year.
   *
   * @generated from field: uint32 year = 1;
   */
  year: number;

  /**
   * Month of a year. Must be from 1 to 12, or 0 to specify a year without a
   * month and day.
   *
   * @generated from field: uint32 month = 2;
   */
  month: number;

  /**
   * Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
   * to specify a year by itself or a year and month where the day isn't
   * significant.
   *
   * @generated from field: uint32 day = 3;
   */
  day: number;
};

/**
 * Describes the message mgmt.v1alpha1.Date.
 * Use `create(DateSchema)` to create a new message.
 */
export const DateSchema: GenMessage<Date> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 0);

/**
 * @generated from message mgmt.v1alpha1.GetDailyMetricCountRequest
 */
export type GetDailyMetricCountRequest = Message<"mgmt.v1alpha1.GetDailyMetricCountRequest"> & {
  /**
   * The start day
   *
   * @generated from field: mgmt.v1alpha1.Date start = 1;
   */
  start?: Date;

  /**
   * The end day
   *
   * @generated from field: mgmt.v1alpha1.Date end = 2;
   */
  end?: Date;

  /**
   * The metric to return
   *
   * @generated from field: mgmt.v1alpha1.RangedMetricName metric = 3;
   */
  metric: RangedMetricName;

  /**
   * @generated from oneof mgmt.v1alpha1.GetDailyMetricCountRequest.identifier
   */
  identifier: {
    /**
     * The account identifier that will be used to filter by
     *
     * @generated from field: string account_id = 4;
     */
    value: string;
    case: "accountId";
  } | {
    /**
     * The job identifier that will be used to filter by
     *
     * @generated from field: string job_id = 5;
     */
    value: string;
    case: "jobId";
  } | {
    /**
     * The run identifier that will be used to filter by
     *
     * @generated from field: string run_id = 6;
     */
    value: string;
    case: "runId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.GetDailyMetricCountRequest.
 * Use `create(GetDailyMetricCountRequestSchema)` to create a new message.
 */
export const GetDailyMetricCountRequestSchema: GenMessage<GetDailyMetricCountRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 1);

/**
 * @generated from message mgmt.v1alpha1.GetDailyMetricCountResponse
 */
export type GetDailyMetricCountResponse = Message<"mgmt.v1alpha1.GetDailyMetricCountResponse"> & {
  /**
   * @generated from field: repeated mgmt.v1alpha1.DayResult results = 1;
   */
  results: DayResult[];
};

/**
 * Describes the message mgmt.v1alpha1.GetDailyMetricCountResponse.
 * Use `create(GetDailyMetricCountResponseSchema)` to create a new message.
 */
export const GetDailyMetricCountResponseSchema: GenMessage<GetDailyMetricCountResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 2);

/**
 * @generated from message mgmt.v1alpha1.DayResult
 */
export type DayResult = Message<"mgmt.v1alpha1.DayResult"> & {
  /**
   * @generated from field: mgmt.v1alpha1.Date date = 1;
   */
  date?: Date;

  /**
   * @generated from field: uint64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.DayResult.
 * Use `create(DayResultSchema)` to create a new message.
 */
export const DayResultSchema: GenMessage<DayResult> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 3);

/**
 * @generated from message mgmt.v1alpha1.GetMetricCountRequest
 */
export type GetMetricCountRequest = Message<"mgmt.v1alpha1.GetMetricCountRequest"> & {
  /**
   * @deprecated - use start_day
   *
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @deprecated - use end_day
   *
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  /**
   * The metric to return
   *
   * @generated from field: mgmt.v1alpha1.RangedMetricName metric = 3;
   */
  metric: RangedMetricName;

  /**
   * @generated from oneof mgmt.v1alpha1.GetMetricCountRequest.identifier
   */
  identifier: {
    /**
     * The account identifier that will be used to filter by
     *
     * @generated from field: string account_id = 4;
     */
    value: string;
    case: "accountId";
  } | {
    /**
     * The job identifier that will be used to filter by
     *
     * @generated from field: string job_id = 5;
     */
    value: string;
    case: "jobId";
  } | {
    /**
     * The run identifier that will be used to filter by
     *
     * @generated from field: string run_id = 6;
     */
    value: string;
    case: "runId";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: mgmt.v1alpha1.Date start_day = 7;
   */
  startDay?: Date;

  /**
   * @generated from field: mgmt.v1alpha1.Date end_day = 8;
   */
  endDay?: Date;
};

/**
 * Describes the message mgmt.v1alpha1.GetMetricCountRequest.
 * Use `create(GetMetricCountRequestSchema)` to create a new message.
 */
export const GetMetricCountRequestSchema: GenMessage<GetMetricCountRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 4);

/**
 * @generated from message mgmt.v1alpha1.GetMetricCountResponse
 */
export type GetMetricCountResponse = Message<"mgmt.v1alpha1.GetMetricCountResponse"> & {
  /**
   * The summed up count of the metric based on the input query and timerange specified
   *
   * @generated from field: uint64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.GetMetricCountResponse.
 * Use `create(GetMetricCountResponseSchema)` to create a new message.
 */
export const GetMetricCountResponseSchema: GenMessage<GetMetricCountResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_metrics, 5);

/**
 * @generated from enum mgmt.v1alpha1.RangedMetricName
 */
export enum RangedMetricName {
  /**
   * If unspecified, an error will be thrown
   *
   * @generated from enum value: RANGED_METRIC_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The input_received metric
   *
   * @generated from enum value: RANGED_METRIC_NAME_INPUT_RECEIVED = 1;
   */
  INPUT_RECEIVED = 1,
}

/**
 * Describes the enum mgmt.v1alpha1.RangedMetricName.
 */
export const RangedMetricNameSchema: GenEnum<RangedMetricName> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_metrics, 0);

/**
 * @generated from service mgmt.v1alpha1.MetricsService
 */
export const MetricsService: GenService<{
  /**
   * Retrieve a timed range of records
   *
   * @generated from rpc mgmt.v1alpha1.MetricsService.GetDailyMetricCount
   */
  getDailyMetricCount: {
    methodKind: "unary";
    input: typeof GetDailyMetricCountRequestSchema;
    output: typeof GetDailyMetricCountResponseSchema;
  },
  /**
   * For the given metric and time range, returns the total count found
   *
   * @generated from rpc mgmt.v1alpha1.MetricsService.GetMetricCount
   */
  getMetricCount: {
    methodKind: "unary";
    input: typeof GetMetricCountRequestSchema;
    output: typeof GetMetricCountResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mgmt_v1alpha1_metrics, 0);

