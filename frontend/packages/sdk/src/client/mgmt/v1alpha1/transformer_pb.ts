// @generated by protoc-gen-es v1.9.0 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/transformer.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum mgmt.v1alpha1.TransformerSource
 */
export enum TransformerSource {
  /**
   * @generated from enum value: TRANSFORMER_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_PASSTHROUGH = 1;
   */
  PASSTHROUGH = 1,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_DEFAULT = 2;
   */
  GENERATE_DEFAULT = 2,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_JAVASCRIPT = 3;
   */
  TRANSFORM_JAVASCRIPT = 3,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_EMAIL = 4;
   */
  GENERATE_EMAIL = 4,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_EMAIL = 5;
   */
  TRANSFORM_EMAIL = 5,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_BOOL = 6;
   */
  GENERATE_BOOL = 6,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_CARD_NUMBER = 7;
   */
  GENERATE_CARD_NUMBER = 7,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_CITY = 8;
   */
  GENERATE_CITY = 8,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_E164_PHONE_NUMBER = 9;
   */
  GENERATE_E164_PHONE_NUMBER = 9,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_FIRST_NAME = 10;
   */
  GENERATE_FIRST_NAME = 10,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_FLOAT64 = 11;
   */
  GENERATE_FLOAT64 = 11,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_FULL_ADDRESS = 12;
   */
  GENERATE_FULL_ADDRESS = 12,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_FULL_NAME = 13;
   */
  GENERATE_FULL_NAME = 13,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_GENDER = 14;
   */
  GENERATE_GENDER = 14,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_INT64_PHONE_NUMBER = 15;
   */
  GENERATE_INT64_PHONE_NUMBER = 15,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_INT64 = 16;
   */
  GENERATE_INT64 = 16,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_RANDOM_INT64 = 17;
   */
  GENERATE_RANDOM_INT64 = 17,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_LAST_NAME = 18;
   */
  GENERATE_LAST_NAME = 18,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_SHA256HASH = 19;
   */
  GENERATE_SHA256HASH = 19,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_SSN = 20;
   */
  GENERATE_SSN = 20,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_STATE = 21;
   */
  GENERATE_STATE = 21,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_STREET_ADDRESS = 22;
   */
  GENERATE_STREET_ADDRESS = 22,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_STRING_PHONE_NUMBER = 23;
   */
  GENERATE_STRING_PHONE_NUMBER = 23,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_STRING = 24;
   */
  GENERATE_STRING = 24,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_RANDOM_STRING = 25;
   */
  GENERATE_RANDOM_STRING = 25,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_UNIXTIMESTAMP = 26;
   */
  GENERATE_UNIXTIMESTAMP = 26,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_USERNAME = 27;
   */
  GENERATE_USERNAME = 27,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_UTCTIMESTAMP = 28;
   */
  GENERATE_UTCTIMESTAMP = 28,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_UUID = 29;
   */
  GENERATE_UUID = 29,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_ZIPCODE = 30;
   */
  GENERATE_ZIPCODE = 30,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_E164_PHONE_NUMBER = 31;
   */
  TRANSFORM_E164_PHONE_NUMBER = 31,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_FIRST_NAME = 32;
   */
  TRANSFORM_FIRST_NAME = 32,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_FLOAT64 = 33;
   */
  TRANSFORM_FLOAT64 = 33,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_FULL_NAME = 34;
   */
  TRANSFORM_FULL_NAME = 34,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_INT64_PHONE_NUMBER = 35;
   */
  TRANSFORM_INT64_PHONE_NUMBER = 35,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_INT64 = 36;
   */
  TRANSFORM_INT64 = 36,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_LAST_NAME = 37;
   */
  TRANSFORM_LAST_NAME = 37,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_PHONE_NUMBER = 38;
   */
  TRANSFORM_PHONE_NUMBER = 38,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_STRING = 39;
   */
  TRANSFORM_STRING = 39,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_NULL = 40;
   */
  GENERATE_NULL = 40,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_CATEGORICAL = 42;
   */
  GENERATE_CATEGORICAL = 42,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_TRANSFORM_CHARACTER_SCRAMBLE = 43;
   */
  TRANSFORM_CHARACTER_SCRAMBLE = 43,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_USER_DEFINED = 44;
   */
  USER_DEFINED = 44,

  /**
   * @generated from enum value: TRANSFORMER_SOURCE_GENERATE_JAVASCRIPT = 45;
   */
  GENERATE_JAVASCRIPT = 45,
}
// Retrieve enum metadata with: proto3.getEnumType(TransformerSource)
proto3.util.setEnumType(TransformerSource, "mgmt.v1alpha1.TransformerSource", [
  { no: 0, name: "TRANSFORMER_SOURCE_UNSPECIFIED" },
  { no: 1, name: "TRANSFORMER_SOURCE_PASSTHROUGH" },
  { no: 2, name: "TRANSFORMER_SOURCE_GENERATE_DEFAULT" },
  { no: 3, name: "TRANSFORMER_SOURCE_TRANSFORM_JAVASCRIPT" },
  { no: 4, name: "TRANSFORMER_SOURCE_GENERATE_EMAIL" },
  { no: 5, name: "TRANSFORMER_SOURCE_TRANSFORM_EMAIL" },
  { no: 6, name: "TRANSFORMER_SOURCE_GENERATE_BOOL" },
  { no: 7, name: "TRANSFORMER_SOURCE_GENERATE_CARD_NUMBER" },
  { no: 8, name: "TRANSFORMER_SOURCE_GENERATE_CITY" },
  { no: 9, name: "TRANSFORMER_SOURCE_GENERATE_E164_PHONE_NUMBER" },
  { no: 10, name: "TRANSFORMER_SOURCE_GENERATE_FIRST_NAME" },
  { no: 11, name: "TRANSFORMER_SOURCE_GENERATE_FLOAT64" },
  { no: 12, name: "TRANSFORMER_SOURCE_GENERATE_FULL_ADDRESS" },
  { no: 13, name: "TRANSFORMER_SOURCE_GENERATE_FULL_NAME" },
  { no: 14, name: "TRANSFORMER_SOURCE_GENERATE_GENDER" },
  { no: 15, name: "TRANSFORMER_SOURCE_GENERATE_INT64_PHONE_NUMBER" },
  { no: 16, name: "TRANSFORMER_SOURCE_GENERATE_INT64" },
  { no: 17, name: "TRANSFORMER_SOURCE_GENERATE_RANDOM_INT64" },
  { no: 18, name: "TRANSFORMER_SOURCE_GENERATE_LAST_NAME" },
  { no: 19, name: "TRANSFORMER_SOURCE_GENERATE_SHA256HASH" },
  { no: 20, name: "TRANSFORMER_SOURCE_GENERATE_SSN" },
  { no: 21, name: "TRANSFORMER_SOURCE_GENERATE_STATE" },
  { no: 22, name: "TRANSFORMER_SOURCE_GENERATE_STREET_ADDRESS" },
  { no: 23, name: "TRANSFORMER_SOURCE_GENERATE_STRING_PHONE_NUMBER" },
  { no: 24, name: "TRANSFORMER_SOURCE_GENERATE_STRING" },
  { no: 25, name: "TRANSFORMER_SOURCE_GENERATE_RANDOM_STRING" },
  { no: 26, name: "TRANSFORMER_SOURCE_GENERATE_UNIXTIMESTAMP" },
  { no: 27, name: "TRANSFORMER_SOURCE_GENERATE_USERNAME" },
  { no: 28, name: "TRANSFORMER_SOURCE_GENERATE_UTCTIMESTAMP" },
  { no: 29, name: "TRANSFORMER_SOURCE_GENERATE_UUID" },
  { no: 30, name: "TRANSFORMER_SOURCE_GENERATE_ZIPCODE" },
  { no: 31, name: "TRANSFORMER_SOURCE_TRANSFORM_E164_PHONE_NUMBER" },
  { no: 32, name: "TRANSFORMER_SOURCE_TRANSFORM_FIRST_NAME" },
  { no: 33, name: "TRANSFORMER_SOURCE_TRANSFORM_FLOAT64" },
  { no: 34, name: "TRANSFORMER_SOURCE_TRANSFORM_FULL_NAME" },
  { no: 35, name: "TRANSFORMER_SOURCE_TRANSFORM_INT64_PHONE_NUMBER" },
  { no: 36, name: "TRANSFORMER_SOURCE_TRANSFORM_INT64" },
  { no: 37, name: "TRANSFORMER_SOURCE_TRANSFORM_LAST_NAME" },
  { no: 38, name: "TRANSFORMER_SOURCE_TRANSFORM_PHONE_NUMBER" },
  { no: 39, name: "TRANSFORMER_SOURCE_TRANSFORM_STRING" },
  { no: 40, name: "TRANSFORMER_SOURCE_GENERATE_NULL" },
  { no: 42, name: "TRANSFORMER_SOURCE_GENERATE_CATEGORICAL" },
  { no: 43, name: "TRANSFORMER_SOURCE_TRANSFORM_CHARACTER_SCRAMBLE" },
  { no: 44, name: "TRANSFORMER_SOURCE_USER_DEFINED" },
  { no: 45, name: "TRANSFORMER_SOURCE_GENERATE_JAVASCRIPT" },
]);

/**
 * @generated from enum mgmt.v1alpha1.TransformerDataType
 */
export enum TransformerDataType {
  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_STRING = 1;
   */
  STRING = 1,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_INT64 = 2;
   */
  INT64 = 2,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_BOOLEAN = 3;
   */
  BOOLEAN = 3,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_FLOAT64 = 4;
   */
  FLOAT64 = 4,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_NULL = 5;
   */
  NULL = 5,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_ANY = 6;
   */
  ANY = 6,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_TIME = 7;
   */
  TIME = 7,

  /**
   * @generated from enum value: TRANSFORMER_DATA_TYPE_UUID = 8;
   */
  UUID = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(TransformerDataType)
proto3.util.setEnumType(TransformerDataType, "mgmt.v1alpha1.TransformerDataType", [
  { no: 0, name: "TRANSFORMER_DATA_TYPE_UNSPECIFIED" },
  { no: 1, name: "TRANSFORMER_DATA_TYPE_STRING" },
  { no: 2, name: "TRANSFORMER_DATA_TYPE_INT64" },
  { no: 3, name: "TRANSFORMER_DATA_TYPE_BOOLEAN" },
  { no: 4, name: "TRANSFORMER_DATA_TYPE_FLOAT64" },
  { no: 5, name: "TRANSFORMER_DATA_TYPE_NULL" },
  { no: 6, name: "TRANSFORMER_DATA_TYPE_ANY" },
  { no: 7, name: "TRANSFORMER_DATA_TYPE_TIME" },
  { no: 8, name: "TRANSFORMER_DATA_TYPE_UUID" },
]);

/**
 * @generated from enum mgmt.v1alpha1.SupportedJobType
 */
export enum SupportedJobType {
  /**
   * @generated from enum value: SUPPORTED_JOB_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SUPPORTED_JOB_TYPE_SYNC = 1;
   */
  SYNC = 1,

  /**
   * @generated from enum value: SUPPORTED_JOB_TYPE_GENERATE = 2;
   */
  GENERATE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupportedJobType)
proto3.util.setEnumType(SupportedJobType, "mgmt.v1alpha1.SupportedJobType", [
  { no: 0, name: "SUPPORTED_JOB_TYPE_UNSPECIFIED" },
  { no: 1, name: "SUPPORTED_JOB_TYPE_SYNC" },
  { no: 2, name: "SUPPORTED_JOB_TYPE_GENERATE" },
]);

/**
 * @generated from enum mgmt.v1alpha1.GenerateEmailType
 */
export enum GenerateEmailType {
  /**
   * Unspecified defaults to uuid v4
   *
   * @generated from enum value: GENERATE_EMAIL_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Generates a random uuid v4 (without hyphens) on the left side of the @. This has all the uniqueness guarantees of the standard uuid v4, along with randomized domains.
   *
   * @generated from enum value: GENERATE_EMAIL_TYPE_UUID_V4 = 1;
   */
  UUID_V4 = 1,

  /**
   * Generates a full name (firstnamelastname) on the left side of the @. This has high cardinality but is not guaranteed to be unique.
   *
   * @generated from enum value: GENERATE_EMAIL_TYPE_FULLNAME = 2;
   */
  FULLNAME = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GenerateEmailType)
proto3.util.setEnumType(GenerateEmailType, "mgmt.v1alpha1.GenerateEmailType", [
  { no: 0, name: "GENERATE_EMAIL_TYPE_UNSPECIFIED" },
  { no: 1, name: "GENERATE_EMAIL_TYPE_UUID_V4" },
  { no: 2, name: "GENERATE_EMAIL_TYPE_FULLNAME" },
]);

/**
 * Action enumeration that dictates what the transform_email transformer should do in the case that it encounters an email that does not conform to RFC 5322
 *
 * @generated from enum mgmt.v1alpha1.InvalidEmailAction
 */
export enum InvalidEmailAction {
  /**
   * Unspecified defaults to reject.
   *
   * @generated from enum value: INVALID_EMAIL_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * If an invalid email is encountered, the transformer will reject the transformation and exit.
   *
   * @generated from enum value: INVALID_EMAIL_ACTION_REJECT = 1;
   */
  REJECT = 1,

  /**
   * The result of the email will be null. This should only be specified if the destination column is also nullable.
   *
   * @generated from enum value: INVALID_EMAIL_ACTION_NULL = 2;
   */
  NULL = 2,

  /**
   * The result of the email will be identical to the original value, unmodified.
   *
   * @generated from enum value: INVALID_EMAIL_ACTION_PASSTHROUGH = 3;
   */
  PASSTHROUGH = 3,

  /**
   * The result of the email will be a brand new generated email. This is the same result as the generate_email transformer.
   *
   * @generated from enum value: INVALID_EMAIL_ACTION_GENERATE = 4;
   */
  GENERATE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(InvalidEmailAction)
proto3.util.setEnumType(InvalidEmailAction, "mgmt.v1alpha1.InvalidEmailAction", [
  { no: 0, name: "INVALID_EMAIL_ACTION_UNSPECIFIED" },
  { no: 1, name: "INVALID_EMAIL_ACTION_REJECT" },
  { no: 2, name: "INVALID_EMAIL_ACTION_NULL" },
  { no: 3, name: "INVALID_EMAIL_ACTION_PASSTHROUGH" },
  { no: 4, name: "INVALID_EMAIL_ACTION_GENERATE" },
]);

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformersRequest
 */
export class GetSystemTransformersRequest extends Message<GetSystemTransformersRequest> {
  constructor(data?: PartialMessage<GetSystemTransformersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformersRequest | PlainMessage<GetSystemTransformersRequest> | undefined, b: GetSystemTransformersRequest | PlainMessage<GetSystemTransformersRequest> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformersRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformersResponse
 */
export class GetSystemTransformersResponse extends Message<GetSystemTransformersResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.SystemTransformer transformers = 1;
   */
  transformers: SystemTransformer[] = [];

  constructor(data?: PartialMessage<GetSystemTransformersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformers", kind: "message", T: SystemTransformer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformersResponse | PlainMessage<GetSystemTransformersResponse> | undefined, b: GetSystemTransformersResponse | PlainMessage<GetSystemTransformersResponse> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformersResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformerBySourceRequest
 */
export class GetSystemTransformerBySourceRequest extends Message<GetSystemTransformerBySourceRequest> {
  /**
   * @generated from field: mgmt.v1alpha1.TransformerSource source = 1;
   */
  source = TransformerSource.UNSPECIFIED;

  constructor(data?: PartialMessage<GetSystemTransformerBySourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformerBySourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "source", kind: "enum", T: proto3.getEnumType(TransformerSource) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformerBySourceRequest {
    return new GetSystemTransformerBySourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformerBySourceRequest {
    return new GetSystemTransformerBySourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformerBySourceRequest {
    return new GetSystemTransformerBySourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformerBySourceRequest | PlainMessage<GetSystemTransformerBySourceRequest> | undefined, b: GetSystemTransformerBySourceRequest | PlainMessage<GetSystemTransformerBySourceRequest> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformerBySourceRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformerBySourceResponse
 */
export class GetSystemTransformerBySourceResponse extends Message<GetSystemTransformerBySourceResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.SystemTransformer transformer = 1;
   */
  transformer?: SystemTransformer;

  constructor(data?: PartialMessage<GetSystemTransformerBySourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformerBySourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: SystemTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformerBySourceResponse {
    return new GetSystemTransformerBySourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformerBySourceResponse {
    return new GetSystemTransformerBySourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformerBySourceResponse {
    return new GetSystemTransformerBySourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformerBySourceResponse | PlainMessage<GetSystemTransformerBySourceResponse> | undefined, b: GetSystemTransformerBySourceResponse | PlainMessage<GetSystemTransformerBySourceResponse> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformerBySourceResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformersRequest
 */
export class GetUserDefinedTransformersRequest extends Message<GetUserDefinedTransformersRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  constructor(data?: PartialMessage<GetUserDefinedTransformersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformersRequest | PlainMessage<GetUserDefinedTransformersRequest> | undefined, b: GetUserDefinedTransformersRequest | PlainMessage<GetUserDefinedTransformersRequest> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformersRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformersResponse
 */
export class GetUserDefinedTransformersResponse extends Message<GetUserDefinedTransformersResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.UserDefinedTransformer transformers = 1;
   */
  transformers: UserDefinedTransformer[] = [];

  constructor(data?: PartialMessage<GetUserDefinedTransformersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformers", kind: "message", T: UserDefinedTransformer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformersResponse | PlainMessage<GetUserDefinedTransformersResponse> | undefined, b: GetUserDefinedTransformersResponse | PlainMessage<GetUserDefinedTransformersResponse> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformersResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformerByIdRequest
 */
export class GetUserDefinedTransformerByIdRequest extends Message<GetUserDefinedTransformerByIdRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  constructor(data?: PartialMessage<GetUserDefinedTransformerByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformerByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformerByIdRequest | PlainMessage<GetUserDefinedTransformerByIdRequest> | undefined, b: GetUserDefinedTransformerByIdRequest | PlainMessage<GetUserDefinedTransformerByIdRequest> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformerByIdRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformerByIdResponse
 */
export class GetUserDefinedTransformerByIdResponse extends Message<GetUserDefinedTransformerByIdResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<GetUserDefinedTransformerByIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformerByIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformerByIdResponse | PlainMessage<GetUserDefinedTransformerByIdResponse> | undefined, b: GetUserDefinedTransformerByIdResponse | PlainMessage<GetUserDefinedTransformerByIdResponse> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformerByIdResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateUserDefinedTransformerRequest
 */
export class CreateUserDefinedTransformerRequest extends Message<CreateUserDefinedTransformerRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @deprecated
   *
   * @generated from field: string type = 4;
   */
  type = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerSource source = 5;
   */
  source = TransformerSource.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig transformer_config = 6;
   */
  transformerConfig?: TransformerConfig;

  constructor(data?: PartialMessage<CreateUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "source", kind: "enum", T: proto3.getEnumType(TransformerSource) },
    { no: 6, name: "transformer_config", kind: "message", T: TransformerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserDefinedTransformerRequest | PlainMessage<CreateUserDefinedTransformerRequest> | undefined, b: CreateUserDefinedTransformerRequest | PlainMessage<CreateUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(CreateUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateUserDefinedTransformerResponse
 */
export class CreateUserDefinedTransformerResponse extends Message<CreateUserDefinedTransformerResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<CreateUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserDefinedTransformerResponse | PlainMessage<CreateUserDefinedTransformerResponse> | undefined, b: CreateUserDefinedTransformerResponse | PlainMessage<CreateUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(CreateUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteUserDefinedTransformerRequest
 */
export class DeleteUserDefinedTransformerRequest extends Message<DeleteUserDefinedTransformerRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  constructor(data?: PartialMessage<DeleteUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserDefinedTransformerRequest | PlainMessage<DeleteUserDefinedTransformerRequest> | undefined, b: DeleteUserDefinedTransformerRequest | PlainMessage<DeleteUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteUserDefinedTransformerResponse
 */
export class DeleteUserDefinedTransformerResponse extends Message<DeleteUserDefinedTransformerResponse> {
  constructor(data?: PartialMessage<DeleteUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserDefinedTransformerResponse | PlainMessage<DeleteUserDefinedTransformerResponse> | undefined, b: DeleteUserDefinedTransformerResponse | PlainMessage<DeleteUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(DeleteUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateUserDefinedTransformerRequest
 */
export class UpdateUserDefinedTransformerRequest extends Message<UpdateUserDefinedTransformerRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig transformer_config = 4;
   */
  transformerConfig?: TransformerConfig;

  constructor(data?: PartialMessage<UpdateUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "transformer_config", kind: "message", T: TransformerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDefinedTransformerRequest | PlainMessage<UpdateUserDefinedTransformerRequest> | undefined, b: UpdateUserDefinedTransformerRequest | PlainMessage<UpdateUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateUserDefinedTransformerResponse
 */
export class UpdateUserDefinedTransformerResponse extends Message<UpdateUserDefinedTransformerResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<UpdateUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDefinedTransformerResponse | PlainMessage<UpdateUserDefinedTransformerResponse> | undefined, b: UpdateUserDefinedTransformerResponse | PlainMessage<UpdateUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsTransformerNameAvailableRequest
 */
export class IsTransformerNameAvailableRequest extends Message<IsTransformerNameAvailableRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string transformer_name = 2;
   */
  transformerName = "";

  constructor(data?: PartialMessage<IsTransformerNameAvailableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsTransformerNameAvailableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "transformer_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IsTransformerNameAvailableRequest | PlainMessage<IsTransformerNameAvailableRequest> | undefined, b: IsTransformerNameAvailableRequest | PlainMessage<IsTransformerNameAvailableRequest> | undefined): boolean {
    return proto3.util.equals(IsTransformerNameAvailableRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsTransformerNameAvailableResponse
 */
export class IsTransformerNameAvailableResponse extends Message<IsTransformerNameAvailableResponse> {
  /**
   * @generated from field: bool is_available = 1;
   */
  isAvailable = false;

  constructor(data?: PartialMessage<IsTransformerNameAvailableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsTransformerNameAvailableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IsTransformerNameAvailableResponse | PlainMessage<IsTransformerNameAvailableResponse> | undefined, b: IsTransformerNameAvailableResponse | PlainMessage<IsTransformerNameAvailableResponse> | undefined): boolean {
    return proto3.util.equals(IsTransformerNameAvailableResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UserDefinedTransformer
 */
export class UserDefinedTransformer extends Message<UserDefinedTransformer> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * This property is readonly and is calculated based off the origin system transformer
   *
   * @generated from field: mgmt.v1alpha1.TransformerDataType data_type = 5;
   */
  dataType = TransformerDataType.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.TransformerSource source = 6;
   */
  source = TransformerSource.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig config = 7;
   */
  config?: TransformerConfig;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string account_id = 10;
   */
  accountId = "";

  /**
   * @generated from field: repeated mgmt.v1alpha1.TransformerDataType data_types = 11;
   */
  dataTypes: TransformerDataType[] = [];

  constructor(data?: PartialMessage<UserDefinedTransformer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UserDefinedTransformer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data_type", kind: "enum", T: proto3.getEnumType(TransformerDataType) },
    { no: 6, name: "source", kind: "enum", T: proto3.getEnumType(TransformerSource) },
    { no: 7, name: "config", kind: "message", T: TransformerConfig },
    { no: 8, name: "created_at", kind: "message", T: Timestamp },
    { no: 9, name: "updated_at", kind: "message", T: Timestamp },
    { no: 10, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "data_types", kind: "enum", T: proto3.getEnumType(TransformerDataType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromJsonString(jsonString, options);
  }

  static equals(a: UserDefinedTransformer | PlainMessage<UserDefinedTransformer> | undefined, b: UserDefinedTransformer | PlainMessage<UserDefinedTransformer> | undefined): boolean {
    return proto3.util.equals(UserDefinedTransformer, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.SystemTransformer
 */
export class SystemTransformer extends Message<SystemTransformer> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerDataType data_type = 3;
   */
  dataType = TransformerDataType.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.TransformerSource source = 4;
   */
  source = TransformerSource.UNSPECIFIED;

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig config = 5;
   */
  config?: TransformerConfig;

  /**
   * @generated from field: repeated mgmt.v1alpha1.TransformerDataType data_types = 6;
   */
  dataTypes: TransformerDataType[] = [];

  /**
   * @generated from field: repeated mgmt.v1alpha1.SupportedJobType supported_job_types = 7;
   */
  supportedJobTypes: SupportedJobType[] = [];

  constructor(data?: PartialMessage<SystemTransformer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.SystemTransformer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data_type", kind: "enum", T: proto3.getEnumType(TransformerDataType) },
    { no: 4, name: "source", kind: "enum", T: proto3.getEnumType(TransformerSource) },
    { no: 5, name: "config", kind: "message", T: TransformerConfig },
    { no: 6, name: "data_types", kind: "enum", T: proto3.getEnumType(TransformerDataType), repeated: true },
    { no: 7, name: "supported_job_types", kind: "enum", T: proto3.getEnumType(SupportedJobType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemTransformer {
    return new SystemTransformer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemTransformer {
    return new SystemTransformer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemTransformer {
    return new SystemTransformer().fromJsonString(jsonString, options);
  }

  static equals(a: SystemTransformer | PlainMessage<SystemTransformer> | undefined, b: SystemTransformer | PlainMessage<SystemTransformer> | undefined): boolean {
    return proto3.util.equals(SystemTransformer, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformerConfig
 */
export class TransformerConfig extends Message<TransformerConfig> {
  /**
   * @generated from oneof mgmt.v1alpha1.TransformerConfig.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateEmail generate_email_config = 1;
     */
    value: GenerateEmail;
    case: "generateEmailConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformEmail transform_email_config = 2;
     */
    value: TransformEmail;
    case: "transformEmailConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateBool generate_bool_config = 3;
     */
    value: GenerateBool;
    case: "generateBoolConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateCardNumber generate_card_number_config = 4;
     */
    value: GenerateCardNumber;
    case: "generateCardNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateCity generate_city_config = 5;
     */
    value: GenerateCity;
    case: "generateCityConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateE164PhoneNumber generate_e164_phone_number_config = 6;
     */
    value: GenerateE164PhoneNumber;
    case: "generateE164PhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFirstName generate_first_name_config = 7;
     */
    value: GenerateFirstName;
    case: "generateFirstNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFloat64 generate_float64_config = 8;
     */
    value: GenerateFloat64;
    case: "generateFloat64Config";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFullAddress generate_full_address_config = 9;
     */
    value: GenerateFullAddress;
    case: "generateFullAddressConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFullName generate_full_name_config = 10;
     */
    value: GenerateFullName;
    case: "generateFullNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateGender generate_gender_config = 11;
     */
    value: GenerateGender;
    case: "generateGenderConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateInt64PhoneNumber generate_int64_phone_number_config = 12;
     */
    value: GenerateInt64PhoneNumber;
    case: "generateInt64PhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateInt64 generate_int64_config = 13;
     */
    value: GenerateInt64;
    case: "generateInt64Config";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateLastName generate_last_name_config = 14;
     */
    value: GenerateLastName;
    case: "generateLastNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateSha256Hash generate_sha256hash_config = 15;
     */
    value: GenerateSha256Hash;
    case: "generateSha256hashConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateSSN generate_ssn_config = 16;
     */
    value: GenerateSSN;
    case: "generateSsnConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateState generate_state_config = 17;
     */
    value: GenerateState;
    case: "generateStateConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateStreetAddress generate_street_address_config = 18;
     */
    value: GenerateStreetAddress;
    case: "generateStreetAddressConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateStringPhoneNumber generate_string_phone_number_config = 19;
     */
    value: GenerateStringPhoneNumber;
    case: "generateStringPhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateString generate_string_config = 20;
     */
    value: GenerateString;
    case: "generateStringConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUnixTimestamp generate_unixtimestamp_config = 21;
     */
    value: GenerateUnixTimestamp;
    case: "generateUnixtimestampConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUsername generate_username_config = 22;
     */
    value: GenerateUsername;
    case: "generateUsernameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUtcTimestamp generate_utctimestamp_config = 23;
     */
    value: GenerateUtcTimestamp;
    case: "generateUtctimestampConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUuid generate_uuid_config = 24;
     */
    value: GenerateUuid;
    case: "generateUuidConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateZipcode generate_zipcode_config = 25;
     */
    value: GenerateZipcode;
    case: "generateZipcodeConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformE164PhoneNumber transform_e164_phone_number_config = 26;
     */
    value: TransformE164PhoneNumber;
    case: "transformE164PhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFirstName transform_first_name_config = 27;
     */
    value: TransformFirstName;
    case: "transformFirstNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFloat64 transform_float64_config = 28;
     */
    value: TransformFloat64;
    case: "transformFloat64Config";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFullName transform_full_name_config = 29;
     */
    value: TransformFullName;
    case: "transformFullNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformInt64PhoneNumber transform_int64_phone_number_config = 30;
     */
    value: TransformInt64PhoneNumber;
    case: "transformInt64PhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformInt64 transform_int64_config = 31;
     */
    value: TransformInt64;
    case: "transformInt64Config";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformLastName transform_last_name_config = 32;
     */
    value: TransformLastName;
    case: "transformLastNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformPhoneNumber transform_phone_number_config = 33;
     */
    value: TransformPhoneNumber;
    case: "transformPhoneNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformString transform_string_config = 34;
     */
    value: TransformString;
    case: "transformStringConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.Passthrough passthrough_config = 35;
     */
    value: Passthrough;
    case: "passthroughConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.Null nullconfig = 36;
     */
    value: Null;
    case: "nullconfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.UserDefinedTransformerConfig user_defined_transformer_config = 37;
     */
    value: UserDefinedTransformerConfig;
    case: "userDefinedTransformerConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateDefault generate_default_config = 38;
     */
    value: GenerateDefault;
    case: "generateDefaultConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformJavascript transform_javascript_config = 39;
     */
    value: TransformJavascript;
    case: "transformJavascriptConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateCategorical generate_categorical_config = 40;
     */
    value: GenerateCategorical;
    case: "generateCategoricalConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformCharacterScramble transform_character_scramble_config = 41;
     */
    value: TransformCharacterScramble;
    case: "transformCharacterScrambleConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateJavascript generate_javascript_config = 42;
     */
    value: GenerateJavascript;
    case: "generateJavascriptConfig";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TransformerConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformerConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generate_email_config", kind: "message", T: GenerateEmail, oneof: "config" },
    { no: 2, name: "transform_email_config", kind: "message", T: TransformEmail, oneof: "config" },
    { no: 3, name: "generate_bool_config", kind: "message", T: GenerateBool, oneof: "config" },
    { no: 4, name: "generate_card_number_config", kind: "message", T: GenerateCardNumber, oneof: "config" },
    { no: 5, name: "generate_city_config", kind: "message", T: GenerateCity, oneof: "config" },
    { no: 6, name: "generate_e164_phone_number_config", kind: "message", T: GenerateE164PhoneNumber, oneof: "config" },
    { no: 7, name: "generate_first_name_config", kind: "message", T: GenerateFirstName, oneof: "config" },
    { no: 8, name: "generate_float64_config", kind: "message", T: GenerateFloat64, oneof: "config" },
    { no: 9, name: "generate_full_address_config", kind: "message", T: GenerateFullAddress, oneof: "config" },
    { no: 10, name: "generate_full_name_config", kind: "message", T: GenerateFullName, oneof: "config" },
    { no: 11, name: "generate_gender_config", kind: "message", T: GenerateGender, oneof: "config" },
    { no: 12, name: "generate_int64_phone_number_config", kind: "message", T: GenerateInt64PhoneNumber, oneof: "config" },
    { no: 13, name: "generate_int64_config", kind: "message", T: GenerateInt64, oneof: "config" },
    { no: 14, name: "generate_last_name_config", kind: "message", T: GenerateLastName, oneof: "config" },
    { no: 15, name: "generate_sha256hash_config", kind: "message", T: GenerateSha256Hash, oneof: "config" },
    { no: 16, name: "generate_ssn_config", kind: "message", T: GenerateSSN, oneof: "config" },
    { no: 17, name: "generate_state_config", kind: "message", T: GenerateState, oneof: "config" },
    { no: 18, name: "generate_street_address_config", kind: "message", T: GenerateStreetAddress, oneof: "config" },
    { no: 19, name: "generate_string_phone_number_config", kind: "message", T: GenerateStringPhoneNumber, oneof: "config" },
    { no: 20, name: "generate_string_config", kind: "message", T: GenerateString, oneof: "config" },
    { no: 21, name: "generate_unixtimestamp_config", kind: "message", T: GenerateUnixTimestamp, oneof: "config" },
    { no: 22, name: "generate_username_config", kind: "message", T: GenerateUsername, oneof: "config" },
    { no: 23, name: "generate_utctimestamp_config", kind: "message", T: GenerateUtcTimestamp, oneof: "config" },
    { no: 24, name: "generate_uuid_config", kind: "message", T: GenerateUuid, oneof: "config" },
    { no: 25, name: "generate_zipcode_config", kind: "message", T: GenerateZipcode, oneof: "config" },
    { no: 26, name: "transform_e164_phone_number_config", kind: "message", T: TransformE164PhoneNumber, oneof: "config" },
    { no: 27, name: "transform_first_name_config", kind: "message", T: TransformFirstName, oneof: "config" },
    { no: 28, name: "transform_float64_config", kind: "message", T: TransformFloat64, oneof: "config" },
    { no: 29, name: "transform_full_name_config", kind: "message", T: TransformFullName, oneof: "config" },
    { no: 30, name: "transform_int64_phone_number_config", kind: "message", T: TransformInt64PhoneNumber, oneof: "config" },
    { no: 31, name: "transform_int64_config", kind: "message", T: TransformInt64, oneof: "config" },
    { no: 32, name: "transform_last_name_config", kind: "message", T: TransformLastName, oneof: "config" },
    { no: 33, name: "transform_phone_number_config", kind: "message", T: TransformPhoneNumber, oneof: "config" },
    { no: 34, name: "transform_string_config", kind: "message", T: TransformString, oneof: "config" },
    { no: 35, name: "passthrough_config", kind: "message", T: Passthrough, oneof: "config" },
    { no: 36, name: "nullconfig", kind: "message", T: Null, oneof: "config" },
    { no: 37, name: "user_defined_transformer_config", kind: "message", T: UserDefinedTransformerConfig, oneof: "config" },
    { no: 38, name: "generate_default_config", kind: "message", T: GenerateDefault, oneof: "config" },
    { no: 39, name: "transform_javascript_config", kind: "message", T: TransformJavascript, oneof: "config" },
    { no: 40, name: "generate_categorical_config", kind: "message", T: GenerateCategorical, oneof: "config" },
    { no: 41, name: "transform_character_scramble_config", kind: "message", T: TransformCharacterScramble, oneof: "config" },
    { no: 42, name: "generate_javascript_config", kind: "message", T: GenerateJavascript, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformerConfig {
    return new TransformerConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformerConfig {
    return new TransformerConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformerConfig {
    return new TransformerConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TransformerConfig | PlainMessage<TransformerConfig> | undefined, b: TransformerConfig | PlainMessage<TransformerConfig> | undefined): boolean {
    return proto3.util.equals(TransformerConfig, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateEmail
 */
export class GenerateEmail extends Message<GenerateEmail> {
  /**
   * Optionally specify the type of email to generate. The types specified determine the contents on the left side of the @.
   *
   * @generated from field: optional mgmt.v1alpha1.GenerateEmailType email_type = 1;
   */
  emailType?: GenerateEmailType;

  constructor(data?: PartialMessage<GenerateEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email_type", kind: "enum", T: proto3.getEnumType(GenerateEmailType), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateEmail {
    return new GenerateEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateEmail {
    return new GenerateEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateEmail {
    return new GenerateEmail().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateEmail | PlainMessage<GenerateEmail> | undefined, b: GenerateEmail | PlainMessage<GenerateEmail> | undefined): boolean {
    return proto3.util.equals(GenerateEmail, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformEmail
 */
export class TransformEmail extends Message<TransformEmail> {
  /**
   * Whether or not to preserve the original domain, barring what has been specified in the excluded_domains property.
   *
   * @generated from field: bool preserve_domain = 1;
   */
  preserveDomain = false;

  /**
   * Whether or not to preserve the original length of the email. This causes the transformed email to retain the original length.
   *
   * @generated from field: bool preserve_length = 2;
   */
  preserveLength = false;

  /**
   * A lsit of email domains that should be excluded. This changes based on the preserve_domain flag. See the docs for more details.
   *
   * @generated from field: repeated string excluded_domains = 3;
   */
  excludedDomains: string[] = [];

  /**
   * Optionally specify the type of email to generate. The types specified determine the contents on the left side of the @.
   *
   * @generated from field: optional mgmt.v1alpha1.GenerateEmailType email_type = 4;
   */
  emailType?: GenerateEmailType;

  /**
   * Optionally specify an action in the result of an invalid email. An invalid email is one that does not conform to RFC 5322.
   *
   * @generated from field: optional mgmt.v1alpha1.InvalidEmailAction invalid_email_action = 5;
   */
  invalidEmailAction?: InvalidEmailAction;

  constructor(data?: PartialMessage<TransformEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "excluded_domains", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "email_type", kind: "enum", T: proto3.getEnumType(GenerateEmailType), opt: true },
    { no: 5, name: "invalid_email_action", kind: "enum", T: proto3.getEnumType(InvalidEmailAction), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformEmail {
    return new TransformEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformEmail {
    return new TransformEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformEmail {
    return new TransformEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TransformEmail | PlainMessage<TransformEmail> | undefined, b: TransformEmail | PlainMessage<TransformEmail> | undefined): boolean {
    return proto3.util.equals(TransformEmail, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateBool
 */
export class GenerateBool extends Message<GenerateBool> {
  constructor(data?: PartialMessage<GenerateBool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateBool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateBool {
    return new GenerateBool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateBool {
    return new GenerateBool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateBool {
    return new GenerateBool().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateBool | PlainMessage<GenerateBool> | undefined, b: GenerateBool | PlainMessage<GenerateBool> | undefined): boolean {
    return proto3.util.equals(GenerateBool, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateCardNumber
 */
export class GenerateCardNumber extends Message<GenerateCardNumber> {
  /**
   * @generated from field: bool valid_luhn = 1;
   */
  validLuhn = false;

  constructor(data?: PartialMessage<GenerateCardNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateCardNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid_luhn", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateCardNumber | PlainMessage<GenerateCardNumber> | undefined, b: GenerateCardNumber | PlainMessage<GenerateCardNumber> | undefined): boolean {
    return proto3.util.equals(GenerateCardNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateCity
 */
export class GenerateCity extends Message<GenerateCity> {
  constructor(data?: PartialMessage<GenerateCity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateCity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateCity {
    return new GenerateCity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateCity {
    return new GenerateCity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateCity {
    return new GenerateCity().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateCity | PlainMessage<GenerateCity> | undefined, b: GenerateCity | PlainMessage<GenerateCity> | undefined): boolean {
    return proto3.util.equals(GenerateCity, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateDefault
 */
export class GenerateDefault extends Message<GenerateDefault> {
  constructor(data?: PartialMessage<GenerateDefault>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateDefault";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateDefault {
    return new GenerateDefault().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateDefault {
    return new GenerateDefault().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateDefault {
    return new GenerateDefault().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateDefault | PlainMessage<GenerateDefault> | undefined, b: GenerateDefault | PlainMessage<GenerateDefault> | undefined): boolean {
    return proto3.util.equals(GenerateDefault, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateE164PhoneNumber
 */
export class GenerateE164PhoneNumber extends Message<GenerateE164PhoneNumber> {
  /**
   * @generated from field: int64 min = 1;
   */
  min = protoInt64.zero;

  /**
   * @generated from field: int64 max = 2;
   */
  max = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateE164PhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateE164PhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "max", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateE164PhoneNumber {
    return new GenerateE164PhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateE164PhoneNumber {
    return new GenerateE164PhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateE164PhoneNumber {
    return new GenerateE164PhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateE164PhoneNumber | PlainMessage<GenerateE164PhoneNumber> | undefined, b: GenerateE164PhoneNumber | PlainMessage<GenerateE164PhoneNumber> | undefined): boolean {
    return proto3.util.equals(GenerateE164PhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFirstName
 */
export class GenerateFirstName extends Message<GenerateFirstName> {
  constructor(data?: PartialMessage<GenerateFirstName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFirstName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirstName | PlainMessage<GenerateFirstName> | undefined, b: GenerateFirstName | PlainMessage<GenerateFirstName> | undefined): boolean {
    return proto3.util.equals(GenerateFirstName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFloat64
 */
export class GenerateFloat64 extends Message<GenerateFloat64> {
  /**
   * @generated from field: bool randomize_sign = 1;
   */
  randomizeSign = false;

  /**
   * @generated from field: double min = 2;
   */
  min = 0;

  /**
   * @generated from field: double max = 3;
   */
  max = 0;

  /**
   * @generated from field: int64 precision = 4;
   */
  precision = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateFloat64>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFloat64";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "randomize_sign", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "min", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "max", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "precision", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFloat64 {
    return new GenerateFloat64().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFloat64 {
    return new GenerateFloat64().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFloat64 {
    return new GenerateFloat64().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFloat64 | PlainMessage<GenerateFloat64> | undefined, b: GenerateFloat64 | PlainMessage<GenerateFloat64> | undefined): boolean {
    return proto3.util.equals(GenerateFloat64, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFullAddress
 */
export class GenerateFullAddress extends Message<GenerateFullAddress> {
  constructor(data?: PartialMessage<GenerateFullAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFullAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFullAddress | PlainMessage<GenerateFullAddress> | undefined, b: GenerateFullAddress | PlainMessage<GenerateFullAddress> | undefined): boolean {
    return proto3.util.equals(GenerateFullAddress, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFullName
 */
export class GenerateFullName extends Message<GenerateFullName> {
  constructor(data?: PartialMessage<GenerateFullName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFullName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFullName {
    return new GenerateFullName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFullName {
    return new GenerateFullName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFullName {
    return new GenerateFullName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFullName | PlainMessage<GenerateFullName> | undefined, b: GenerateFullName | PlainMessage<GenerateFullName> | undefined): boolean {
    return proto3.util.equals(GenerateFullName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateGender
 */
export class GenerateGender extends Message<GenerateGender> {
  /**
   * @generated from field: bool abbreviate = 1;
   */
  abbreviate = false;

  constructor(data?: PartialMessage<GenerateGender>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateGender";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "abbreviate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateGender {
    return new GenerateGender().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateGender {
    return new GenerateGender().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateGender {
    return new GenerateGender().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateGender | PlainMessage<GenerateGender> | undefined, b: GenerateGender | PlainMessage<GenerateGender> | undefined): boolean {
    return proto3.util.equals(GenerateGender, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateInt64PhoneNumber
 */
export class GenerateInt64PhoneNumber extends Message<GenerateInt64PhoneNumber> {
  constructor(data?: PartialMessage<GenerateInt64PhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateInt64PhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInt64PhoneNumber {
    return new GenerateInt64PhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInt64PhoneNumber {
    return new GenerateInt64PhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInt64PhoneNumber {
    return new GenerateInt64PhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInt64PhoneNumber | PlainMessage<GenerateInt64PhoneNumber> | undefined, b: GenerateInt64PhoneNumber | PlainMessage<GenerateInt64PhoneNumber> | undefined): boolean {
    return proto3.util.equals(GenerateInt64PhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateInt64
 */
export class GenerateInt64 extends Message<GenerateInt64> {
  /**
   * @generated from field: bool randomize_sign = 1;
   */
  randomizeSign = false;

  /**
   * @generated from field: int64 min = 2;
   */
  min = protoInt64.zero;

  /**
   * @generated from field: int64 max = 3;
   */
  max = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateInt64>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateInt64";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "randomize_sign", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "min", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "max", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInt64 {
    return new GenerateInt64().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInt64 {
    return new GenerateInt64().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInt64 {
    return new GenerateInt64().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInt64 | PlainMessage<GenerateInt64> | undefined, b: GenerateInt64 | PlainMessage<GenerateInt64> | undefined): boolean {
    return proto3.util.equals(GenerateInt64, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateLastName
 */
export class GenerateLastName extends Message<GenerateLastName> {
  constructor(data?: PartialMessage<GenerateLastName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateLastName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateLastName {
    return new GenerateLastName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateLastName {
    return new GenerateLastName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateLastName {
    return new GenerateLastName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateLastName | PlainMessage<GenerateLastName> | undefined, b: GenerateLastName | PlainMessage<GenerateLastName> | undefined): boolean {
    return proto3.util.equals(GenerateLastName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateSha256Hash
 */
export class GenerateSha256Hash extends Message<GenerateSha256Hash> {
  constructor(data?: PartialMessage<GenerateSha256Hash>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateSha256Hash";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateSha256Hash | PlainMessage<GenerateSha256Hash> | undefined, b: GenerateSha256Hash | PlainMessage<GenerateSha256Hash> | undefined): boolean {
    return proto3.util.equals(GenerateSha256Hash, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateSSN
 */
export class GenerateSSN extends Message<GenerateSSN> {
  constructor(data?: PartialMessage<GenerateSSN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateSSN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateSSN {
    return new GenerateSSN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateSSN {
    return new GenerateSSN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateSSN {
    return new GenerateSSN().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateSSN | PlainMessage<GenerateSSN> | undefined, b: GenerateSSN | PlainMessage<GenerateSSN> | undefined): boolean {
    return proto3.util.equals(GenerateSSN, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateState
 */
export class GenerateState extends Message<GenerateState> {
  constructor(data?: PartialMessage<GenerateState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateState {
    return new GenerateState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateState {
    return new GenerateState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateState {
    return new GenerateState().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateState | PlainMessage<GenerateState> | undefined, b: GenerateState | PlainMessage<GenerateState> | undefined): boolean {
    return proto3.util.equals(GenerateState, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateStreetAddress
 */
export class GenerateStreetAddress extends Message<GenerateStreetAddress> {
  constructor(data?: PartialMessage<GenerateStreetAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateStreetAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateStreetAddress | PlainMessage<GenerateStreetAddress> | undefined, b: GenerateStreetAddress | PlainMessage<GenerateStreetAddress> | undefined): boolean {
    return proto3.util.equals(GenerateStreetAddress, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateStringPhoneNumber
 */
export class GenerateStringPhoneNumber extends Message<GenerateStringPhoneNumber> {
  /**
   * @generated from field: int64 min = 2;
   */
  min = protoInt64.zero;

  /**
   * @generated from field: int64 max = 3;
   */
  max = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateStringPhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateStringPhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "min", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "max", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateStringPhoneNumber {
    return new GenerateStringPhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateStringPhoneNumber {
    return new GenerateStringPhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateStringPhoneNumber {
    return new GenerateStringPhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateStringPhoneNumber | PlainMessage<GenerateStringPhoneNumber> | undefined, b: GenerateStringPhoneNumber | PlainMessage<GenerateStringPhoneNumber> | undefined): boolean {
    return proto3.util.equals(GenerateStringPhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateString
 */
export class GenerateString extends Message<GenerateString> {
  /**
   * @generated from field: int64 min = 1;
   */
  min = protoInt64.zero;

  /**
   * @generated from field: int64 max = 2;
   */
  max = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "max", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateString {
    return new GenerateString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateString {
    return new GenerateString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateString {
    return new GenerateString().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateString | PlainMessage<GenerateString> | undefined, b: GenerateString | PlainMessage<GenerateString> | undefined): boolean {
    return proto3.util.equals(GenerateString, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUnixTimestamp
 */
export class GenerateUnixTimestamp extends Message<GenerateUnixTimestamp> {
  constructor(data?: PartialMessage<GenerateUnixTimestamp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUnixTimestamp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUnixTimestamp | PlainMessage<GenerateUnixTimestamp> | undefined, b: GenerateUnixTimestamp | PlainMessage<GenerateUnixTimestamp> | undefined): boolean {
    return proto3.util.equals(GenerateUnixTimestamp, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUsername
 */
export class GenerateUsername extends Message<GenerateUsername> {
  constructor(data?: PartialMessage<GenerateUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUsername {
    return new GenerateUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUsername {
    return new GenerateUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUsername {
    return new GenerateUsername().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUsername | PlainMessage<GenerateUsername> | undefined, b: GenerateUsername | PlainMessage<GenerateUsername> | undefined): boolean {
    return proto3.util.equals(GenerateUsername, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUtcTimestamp
 */
export class GenerateUtcTimestamp extends Message<GenerateUtcTimestamp> {
  constructor(data?: PartialMessage<GenerateUtcTimestamp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUtcTimestamp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUtcTimestamp | PlainMessage<GenerateUtcTimestamp> | undefined, b: GenerateUtcTimestamp | PlainMessage<GenerateUtcTimestamp> | undefined): boolean {
    return proto3.util.equals(GenerateUtcTimestamp, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUuid
 */
export class GenerateUuid extends Message<GenerateUuid> {
  /**
   * @generated from field: bool include_hyphens = 1;
   */
  includeHyphens = false;

  constructor(data?: PartialMessage<GenerateUuid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUuid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "include_hyphens", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUuid {
    return new GenerateUuid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUuid {
    return new GenerateUuid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUuid {
    return new GenerateUuid().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUuid | PlainMessage<GenerateUuid> | undefined, b: GenerateUuid | PlainMessage<GenerateUuid> | undefined): boolean {
    return proto3.util.equals(GenerateUuid, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateZipcode
 */
export class GenerateZipcode extends Message<GenerateZipcode> {
  constructor(data?: PartialMessage<GenerateZipcode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateZipcode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateZipcode | PlainMessage<GenerateZipcode> | undefined, b: GenerateZipcode | PlainMessage<GenerateZipcode> | undefined): boolean {
    return proto3.util.equals(GenerateZipcode, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformE164PhoneNumber
 */
export class TransformE164PhoneNumber extends Message<TransformE164PhoneNumber> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformE164PhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformE164PhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformE164PhoneNumber {
    return new TransformE164PhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformE164PhoneNumber {
    return new TransformE164PhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformE164PhoneNumber {
    return new TransformE164PhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: TransformE164PhoneNumber | PlainMessage<TransformE164PhoneNumber> | undefined, b: TransformE164PhoneNumber | PlainMessage<TransformE164PhoneNumber> | undefined): boolean {
    return proto3.util.equals(TransformE164PhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFirstName
 */
export class TransformFirstName extends Message<TransformFirstName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformFirstName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFirstName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFirstName {
    return new TransformFirstName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFirstName {
    return new TransformFirstName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFirstName {
    return new TransformFirstName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFirstName | PlainMessage<TransformFirstName> | undefined, b: TransformFirstName | PlainMessage<TransformFirstName> | undefined): boolean {
    return proto3.util.equals(TransformFirstName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFloat64
 */
export class TransformFloat64 extends Message<TransformFloat64> {
  /**
   * @generated from field: double randomization_range_min = 1;
   */
  randomizationRangeMin = 0;

  /**
   * @generated from field: double randomization_range_max = 2;
   */
  randomizationRangeMax = 0;

  constructor(data?: PartialMessage<TransformFloat64>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFloat64";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "randomization_range_min", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "randomization_range_max", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFloat64 {
    return new TransformFloat64().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFloat64 {
    return new TransformFloat64().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFloat64 {
    return new TransformFloat64().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFloat64 | PlainMessage<TransformFloat64> | undefined, b: TransformFloat64 | PlainMessage<TransformFloat64> | undefined): boolean {
    return proto3.util.equals(TransformFloat64, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFullName
 */
export class TransformFullName extends Message<TransformFullName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformFullName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFullName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFullName {
    return new TransformFullName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFullName {
    return new TransformFullName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFullName {
    return new TransformFullName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFullName | PlainMessage<TransformFullName> | undefined, b: TransformFullName | PlainMessage<TransformFullName> | undefined): boolean {
    return proto3.util.equals(TransformFullName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformInt64PhoneNumber
 */
export class TransformInt64PhoneNumber extends Message<TransformInt64PhoneNumber> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformInt64PhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformInt64PhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformInt64PhoneNumber {
    return new TransformInt64PhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformInt64PhoneNumber {
    return new TransformInt64PhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformInt64PhoneNumber {
    return new TransformInt64PhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: TransformInt64PhoneNumber | PlainMessage<TransformInt64PhoneNumber> | undefined, b: TransformInt64PhoneNumber | PlainMessage<TransformInt64PhoneNumber> | undefined): boolean {
    return proto3.util.equals(TransformInt64PhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformInt64
 */
export class TransformInt64 extends Message<TransformInt64> {
  /**
   * @generated from field: int64 randomization_range_min = 1;
   */
  randomizationRangeMin = protoInt64.zero;

  /**
   * @generated from field: int64 randomization_range_max = 2;
   */
  randomizationRangeMax = protoInt64.zero;

  constructor(data?: PartialMessage<TransformInt64>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformInt64";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "randomization_range_min", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "randomization_range_max", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformInt64 {
    return new TransformInt64().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformInt64 {
    return new TransformInt64().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformInt64 {
    return new TransformInt64().fromJsonString(jsonString, options);
  }

  static equals(a: TransformInt64 | PlainMessage<TransformInt64> | undefined, b: TransformInt64 | PlainMessage<TransformInt64> | undefined): boolean {
    return proto3.util.equals(TransformInt64, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformLastName
 */
export class TransformLastName extends Message<TransformLastName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformLastName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformLastName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformLastName {
    return new TransformLastName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformLastName {
    return new TransformLastName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformLastName {
    return new TransformLastName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformLastName | PlainMessage<TransformLastName> | undefined, b: TransformLastName | PlainMessage<TransformLastName> | undefined): boolean {
    return proto3.util.equals(TransformLastName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformPhoneNumber
 */
export class TransformPhoneNumber extends Message<TransformPhoneNumber> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformPhoneNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformPhoneNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformPhoneNumber {
    return new TransformPhoneNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformPhoneNumber {
    return new TransformPhoneNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformPhoneNumber {
    return new TransformPhoneNumber().fromJsonString(jsonString, options);
  }

  static equals(a: TransformPhoneNumber | PlainMessage<TransformPhoneNumber> | undefined, b: TransformPhoneNumber | PlainMessage<TransformPhoneNumber> | undefined): boolean {
    return proto3.util.equals(TransformPhoneNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformString
 */
export class TransformString extends Message<TransformString> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformString {
    return new TransformString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformString {
    return new TransformString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformString {
    return new TransformString().fromJsonString(jsonString, options);
  }

  static equals(a: TransformString | PlainMessage<TransformString> | undefined, b: TransformString | PlainMessage<TransformString> | undefined): boolean {
    return proto3.util.equals(TransformString, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Passthrough
 */
export class Passthrough extends Message<Passthrough> {
  constructor(data?: PartialMessage<Passthrough>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Passthrough";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Passthrough {
    return new Passthrough().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Passthrough {
    return new Passthrough().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Passthrough {
    return new Passthrough().fromJsonString(jsonString, options);
  }

  static equals(a: Passthrough | PlainMessage<Passthrough> | undefined, b: Passthrough | PlainMessage<Passthrough> | undefined): boolean {
    return proto3.util.equals(Passthrough, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Null
 */
export class Null extends Message<Null> {
  constructor(data?: PartialMessage<Null>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Null";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Null {
    return new Null().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Null {
    return new Null().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Null {
    return new Null().fromJsonString(jsonString, options);
  }

  static equals(a: Null | PlainMessage<Null> | undefined, b: Null | PlainMessage<Null> | undefined): boolean {
    return proto3.util.equals(Null, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformJavascript
 */
export class TransformJavascript extends Message<TransformJavascript> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<TransformJavascript>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformJavascript";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformJavascript {
    return new TransformJavascript().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformJavascript {
    return new TransformJavascript().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformJavascript {
    return new TransformJavascript().fromJsonString(jsonString, options);
  }

  static equals(a: TransformJavascript | PlainMessage<TransformJavascript> | undefined, b: TransformJavascript | PlainMessage<TransformJavascript> | undefined): boolean {
    return proto3.util.equals(TransformJavascript, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UserDefinedTransformerConfig
 */
export class UserDefinedTransformerConfig extends Message<UserDefinedTransformerConfig> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UserDefinedTransformerConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UserDefinedTransformerConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromJsonString(jsonString, options);
  }

  static equals(a: UserDefinedTransformerConfig | PlainMessage<UserDefinedTransformerConfig> | undefined, b: UserDefinedTransformerConfig | PlainMessage<UserDefinedTransformerConfig> | undefined): boolean {
    return proto3.util.equals(UserDefinedTransformerConfig, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.ValidateUserJavascriptCodeRequest
 */
export class ValidateUserJavascriptCodeRequest extends Message<ValidateUserJavascriptCodeRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  constructor(data?: PartialMessage<ValidateUserJavascriptCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.ValidateUserJavascriptCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateUserJavascriptCodeRequest {
    return new ValidateUserJavascriptCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateUserJavascriptCodeRequest {
    return new ValidateUserJavascriptCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateUserJavascriptCodeRequest {
    return new ValidateUserJavascriptCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateUserJavascriptCodeRequest | PlainMessage<ValidateUserJavascriptCodeRequest> | undefined, b: ValidateUserJavascriptCodeRequest | PlainMessage<ValidateUserJavascriptCodeRequest> | undefined): boolean {
    return proto3.util.equals(ValidateUserJavascriptCodeRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.ValidateUserJavascriptCodeResponse
 */
export class ValidateUserJavascriptCodeResponse extends Message<ValidateUserJavascriptCodeResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  constructor(data?: PartialMessage<ValidateUserJavascriptCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.ValidateUserJavascriptCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateUserJavascriptCodeResponse {
    return new ValidateUserJavascriptCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateUserJavascriptCodeResponse {
    return new ValidateUserJavascriptCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateUserJavascriptCodeResponse {
    return new ValidateUserJavascriptCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateUserJavascriptCodeResponse | PlainMessage<ValidateUserJavascriptCodeResponse> | undefined, b: ValidateUserJavascriptCodeResponse | PlainMessage<ValidateUserJavascriptCodeResponse> | undefined): boolean {
    return proto3.util.equals(ValidateUserJavascriptCodeResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateCategorical
 */
export class GenerateCategorical extends Message<GenerateCategorical> {
  /**
   * @generated from field: string categories = 1;
   */
  categories = "";

  constructor(data?: PartialMessage<GenerateCategorical>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateCategorical";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "categories", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateCategorical {
    return new GenerateCategorical().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateCategorical {
    return new GenerateCategorical().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateCategorical {
    return new GenerateCategorical().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateCategorical | PlainMessage<GenerateCategorical> | undefined, b: GenerateCategorical | PlainMessage<GenerateCategorical> | undefined): boolean {
    return proto3.util.equals(GenerateCategorical, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformCharacterScramble
 */
export class TransformCharacterScramble extends Message<TransformCharacterScramble> {
  /**
   * a user provided regular expression that they wish to validate if it compiles in GO
   *
   * @generated from field: optional string user_provided_regex = 1;
   */
  userProvidedRegex?: string;

  constructor(data?: PartialMessage<TransformCharacterScramble>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformCharacterScramble";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_provided_regex", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformCharacterScramble {
    return new TransformCharacterScramble().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformCharacterScramble {
    return new TransformCharacterScramble().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformCharacterScramble {
    return new TransformCharacterScramble().fromJsonString(jsonString, options);
  }

  static equals(a: TransformCharacterScramble | PlainMessage<TransformCharacterScramble> | undefined, b: TransformCharacterScramble | PlainMessage<TransformCharacterScramble> | undefined): boolean {
    return proto3.util.equals(TransformCharacterScramble, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateJavascript
 */
export class GenerateJavascript extends Message<GenerateJavascript> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<GenerateJavascript>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateJavascript";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateJavascript {
    return new GenerateJavascript().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateJavascript {
    return new GenerateJavascript().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateJavascript {
    return new GenerateJavascript().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateJavascript | PlainMessage<GenerateJavascript> | undefined, b: GenerateJavascript | PlainMessage<GenerateJavascript> | undefined): boolean {
    return proto3.util.equals(GenerateJavascript, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.ValidateUserRegexCodeRequest
 */
export class ValidateUserRegexCodeRequest extends Message<ValidateUserRegexCodeRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string user_provided_regex = 2;
   */
  userProvidedRegex = "";

  constructor(data?: PartialMessage<ValidateUserRegexCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.ValidateUserRegexCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_provided_regex", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateUserRegexCodeRequest {
    return new ValidateUserRegexCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateUserRegexCodeRequest {
    return new ValidateUserRegexCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateUserRegexCodeRequest {
    return new ValidateUserRegexCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateUserRegexCodeRequest | PlainMessage<ValidateUserRegexCodeRequest> | undefined, b: ValidateUserRegexCodeRequest | PlainMessage<ValidateUserRegexCodeRequest> | undefined): boolean {
    return proto3.util.equals(ValidateUserRegexCodeRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.ValidateUserRegexCodeResponse
 */
export class ValidateUserRegexCodeResponse extends Message<ValidateUserRegexCodeResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  constructor(data?: PartialMessage<ValidateUserRegexCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.ValidateUserRegexCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateUserRegexCodeResponse {
    return new ValidateUserRegexCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateUserRegexCodeResponse {
    return new ValidateUserRegexCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateUserRegexCodeResponse {
    return new ValidateUserRegexCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateUserRegexCodeResponse | PlainMessage<ValidateUserRegexCodeResponse> | undefined, b: ValidateUserRegexCodeResponse | PlainMessage<ValidateUserRegexCodeResponse> | undefined): boolean {
    return proto3.util.equals(ValidateUserRegexCodeResponse, a, b);
  }
}

