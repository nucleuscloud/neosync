// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/transformer.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformersRequest
 */
export class GetSystemTransformersRequest extends Message<GetSystemTransformersRequest> {
  constructor(data?: PartialMessage<GetSystemTransformersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformersRequest {
    return new GetSystemTransformersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformersRequest | PlainMessage<GetSystemTransformersRequest> | undefined, b: GetSystemTransformersRequest | PlainMessage<GetSystemTransformersRequest> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformersRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetSystemTransformersResponse
 */
export class GetSystemTransformersResponse extends Message<GetSystemTransformersResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.SystemTransformer transformers = 1;
   */
  transformers: SystemTransformer[] = [];

  constructor(data?: PartialMessage<GetSystemTransformersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetSystemTransformersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformers", kind: "message", T: SystemTransformer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSystemTransformersResponse {
    return new GetSystemTransformersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSystemTransformersResponse | PlainMessage<GetSystemTransformersResponse> | undefined, b: GetSystemTransformersResponse | PlainMessage<GetSystemTransformersResponse> | undefined): boolean {
    return proto3.util.equals(GetSystemTransformersResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformersRequest
 */
export class GetUserDefinedTransformersRequest extends Message<GetUserDefinedTransformersRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  constructor(data?: PartialMessage<GetUserDefinedTransformersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersRequest {
    return new GetUserDefinedTransformersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformersRequest | PlainMessage<GetUserDefinedTransformersRequest> | undefined, b: GetUserDefinedTransformersRequest | PlainMessage<GetUserDefinedTransformersRequest> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformersRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformersResponse
 */
export class GetUserDefinedTransformersResponse extends Message<GetUserDefinedTransformersResponse> {
  /**
   * @generated from field: repeated mgmt.v1alpha1.UserDefinedTransformer transformers = 1;
   */
  transformers: UserDefinedTransformer[] = [];

  constructor(data?: PartialMessage<GetUserDefinedTransformersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformers", kind: "message", T: UserDefinedTransformer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformersResponse {
    return new GetUserDefinedTransformersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformersResponse | PlainMessage<GetUserDefinedTransformersResponse> | undefined, b: GetUserDefinedTransformersResponse | PlainMessage<GetUserDefinedTransformersResponse> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformersResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformerByIdRequest
 */
export class GetUserDefinedTransformerByIdRequest extends Message<GetUserDefinedTransformerByIdRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  constructor(data?: PartialMessage<GetUserDefinedTransformerByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformerByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdRequest {
    return new GetUserDefinedTransformerByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformerByIdRequest | PlainMessage<GetUserDefinedTransformerByIdRequest> | undefined, b: GetUserDefinedTransformerByIdRequest | PlainMessage<GetUserDefinedTransformerByIdRequest> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformerByIdRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GetUserDefinedTransformerByIdResponse
 */
export class GetUserDefinedTransformerByIdResponse extends Message<GetUserDefinedTransformerByIdResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<GetUserDefinedTransformerByIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GetUserDefinedTransformerByIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserDefinedTransformerByIdResponse {
    return new GetUserDefinedTransformerByIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserDefinedTransformerByIdResponse | PlainMessage<GetUserDefinedTransformerByIdResponse> | undefined, b: GetUserDefinedTransformerByIdResponse | PlainMessage<GetUserDefinedTransformerByIdResponse> | undefined): boolean {
    return proto3.util.equals(GetUserDefinedTransformerByIdResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateUserDefinedTransformerRequest
 */
export class CreateUserDefinedTransformerRequest extends Message<CreateUserDefinedTransformerRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string type = 4;
   */
  type = "";

  /**
   * @generated from field: string source = 5;
   */
  source = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig transformer_config = 6;
   */
  transformerConfig?: TransformerConfig;

  constructor(data?: PartialMessage<CreateUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "transformer_config", kind: "message", T: TransformerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerRequest {
    return new CreateUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserDefinedTransformerRequest | PlainMessage<CreateUserDefinedTransformerRequest> | undefined, b: CreateUserDefinedTransformerRequest | PlainMessage<CreateUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(CreateUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.CreateUserDefinedTransformerResponse
 */
export class CreateUserDefinedTransformerResponse extends Message<CreateUserDefinedTransformerResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<CreateUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.CreateUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserDefinedTransformerResponse {
    return new CreateUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserDefinedTransformerResponse | PlainMessage<CreateUserDefinedTransformerResponse> | undefined, b: CreateUserDefinedTransformerResponse | PlainMessage<CreateUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(CreateUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteUserDefinedTransformerRequest
 */
export class DeleteUserDefinedTransformerRequest extends Message<DeleteUserDefinedTransformerRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  constructor(data?: PartialMessage<DeleteUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerRequest {
    return new DeleteUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserDefinedTransformerRequest | PlainMessage<DeleteUserDefinedTransformerRequest> | undefined, b: DeleteUserDefinedTransformerRequest | PlainMessage<DeleteUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.DeleteUserDefinedTransformerResponse
 */
export class DeleteUserDefinedTransformerResponse extends Message<DeleteUserDefinedTransformerResponse> {
  constructor(data?: PartialMessage<DeleteUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.DeleteUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserDefinedTransformerResponse {
    return new DeleteUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserDefinedTransformerResponse | PlainMessage<DeleteUserDefinedTransformerResponse> | undefined, b: DeleteUserDefinedTransformerResponse | PlainMessage<DeleteUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(DeleteUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateUserDefinedTransformerRequest
 */
export class UpdateUserDefinedTransformerRequest extends Message<UpdateUserDefinedTransformerRequest> {
  /**
   * @generated from field: string transformer_id = 1;
   */
  transformerId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig transformer_config = 4;
   */
  transformerConfig?: TransformerConfig;

  constructor(data?: PartialMessage<UpdateUserDefinedTransformerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateUserDefinedTransformerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "transformer_config", kind: "message", T: TransformerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerRequest {
    return new UpdateUserDefinedTransformerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDefinedTransformerRequest | PlainMessage<UpdateUserDefinedTransformerRequest> | undefined, b: UpdateUserDefinedTransformerRequest | PlainMessage<UpdateUserDefinedTransformerRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserDefinedTransformerRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UpdateUserDefinedTransformerResponse
 */
export class UpdateUserDefinedTransformerResponse extends Message<UpdateUserDefinedTransformerResponse> {
  /**
   * @generated from field: mgmt.v1alpha1.UserDefinedTransformer transformer = 1;
   */
  transformer?: UserDefinedTransformer;

  constructor(data?: PartialMessage<UpdateUserDefinedTransformerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UpdateUserDefinedTransformerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transformer", kind: "message", T: UserDefinedTransformer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDefinedTransformerResponse {
    return new UpdateUserDefinedTransformerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDefinedTransformerResponse | PlainMessage<UpdateUserDefinedTransformerResponse> | undefined, b: UpdateUserDefinedTransformerResponse | PlainMessage<UpdateUserDefinedTransformerResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserDefinedTransformerResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsTransformerNameAvailableRequest
 */
export class IsTransformerNameAvailableRequest extends Message<IsTransformerNameAvailableRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string transformer_name = 2;
   */
  transformerName = "";

  constructor(data?: PartialMessage<IsTransformerNameAvailableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsTransformerNameAvailableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "transformer_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableRequest {
    return new IsTransformerNameAvailableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IsTransformerNameAvailableRequest | PlainMessage<IsTransformerNameAvailableRequest> | undefined, b: IsTransformerNameAvailableRequest | PlainMessage<IsTransformerNameAvailableRequest> | undefined): boolean {
    return proto3.util.equals(IsTransformerNameAvailableRequest, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.IsTransformerNameAvailableResponse
 */
export class IsTransformerNameAvailableResponse extends Message<IsTransformerNameAvailableResponse> {
  /**
   * @generated from field: bool is_available = 1;
   */
  isAvailable = false;

  constructor(data?: PartialMessage<IsTransformerNameAvailableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.IsTransformerNameAvailableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsTransformerNameAvailableResponse {
    return new IsTransformerNameAvailableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IsTransformerNameAvailableResponse | PlainMessage<IsTransformerNameAvailableResponse> | undefined, b: IsTransformerNameAvailableResponse | PlainMessage<IsTransformerNameAvailableResponse> | undefined): boolean {
    return proto3.util.equals(IsTransformerNameAvailableResponse, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UserDefinedTransformer
 */
export class UserDefinedTransformer extends Message<UserDefinedTransformer> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string data_type = 5;
   */
  dataType = "";

  /**
   * @generated from field: string source = 6;
   */
  source = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig config = 7;
   */
  config?: TransformerConfig;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string account_id = 10;
   */
  accountId = "";

  constructor(data?: PartialMessage<UserDefinedTransformer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UserDefinedTransformer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "config", kind: "message", T: TransformerConfig },
    { no: 8, name: "created_at", kind: "message", T: Timestamp },
    { no: 9, name: "updated_at", kind: "message", T: Timestamp },
    { no: 10, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserDefinedTransformer {
    return new UserDefinedTransformer().fromJsonString(jsonString, options);
  }

  static equals(a: UserDefinedTransformer | PlainMessage<UserDefinedTransformer> | undefined, b: UserDefinedTransformer | PlainMessage<UserDefinedTransformer> | undefined): boolean {
    return proto3.util.equals(UserDefinedTransformer, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.SystemTransformer
 */
export class SystemTransformer extends Message<SystemTransformer> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string data_type = 5;
   */
  dataType = "";

  /**
   * @generated from field: string source = 6;
   */
  source = "";

  /**
   * @generated from field: mgmt.v1alpha1.TransformerConfig config = 7;
   */
  config?: TransformerConfig;

  constructor(data?: PartialMessage<SystemTransformer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.SystemTransformer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "config", kind: "message", T: TransformerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemTransformer {
    return new SystemTransformer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemTransformer {
    return new SystemTransformer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemTransformer {
    return new SystemTransformer().fromJsonString(jsonString, options);
  }

  static equals(a: SystemTransformer | PlainMessage<SystemTransformer> | undefined, b: SystemTransformer | PlainMessage<SystemTransformer> | undefined): boolean {
    return proto3.util.equals(SystemTransformer, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformerConfig
 */
export class TransformerConfig extends Message<TransformerConfig> {
  /**
   * @generated from oneof mgmt.v1alpha1.TransformerConfig.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateEmail generate_email_config = 1;
     */
    value: GenerateEmail;
    case: "generateEmailConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateRealisticEmail generate_realistic_email_config = 2;
     */
    value: GenerateRealisticEmail;
    case: "generateRealisticEmailConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformEmail transform_email_config = 3;
     */
    value: TransformEmail;
    case: "transformEmailConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateBool generate_bool_config = 4;
     */
    value: GenerateBool;
    case: "generateBoolConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateCardNumber generate_card_number_config = 5;
     */
    value: GenerateCardNumber;
    case: "generateCardNumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateCity generate_city_config = 6;
     */
    value: GenerateCity;
    case: "generateCityConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateE164Number generate_e164_number_config = 7;
     */
    value: GenerateE164Number;
    case: "generateE164NumberConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFirstName generate_first_name_config = 8;
     */
    value: GenerateFirstName;
    case: "generateFirstNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFloat generate_float_config = 9;
     */
    value: GenerateFloat;
    case: "generateFloatConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFullAddress generate_full_address_config = 10;
     */
    value: GenerateFullAddress;
    case: "generateFullAddressConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateFullName generate_full_name_config = 11;
     */
    value: GenerateFullName;
    case: "generateFullNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateGender generate_gender_config = 12;
     */
    value: GenerateGender;
    case: "generateGenderConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateInt64Phone generate_int64_phone_config = 13;
     */
    value: GenerateInt64Phone;
    case: "generateInt64PhoneConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateInt generate_int_config = 14;
     */
    value: GenerateInt;
    case: "generateIntConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateLastName generate_last_name_config = 15;
     */
    value: GenerateLastName;
    case: "generateLastNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateSha256Hash generate_sha256hash_config = 16;
     */
    value: GenerateSha256Hash;
    case: "generateSha256hashConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateSSN generate_ssn_config = 17;
     */
    value: GenerateSSN;
    case: "generateSsnConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateState generate_state_config = 18;
     */
    value: GenerateState;
    case: "generateStateConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateStreetAddress generate_street_address_config = 19;
     */
    value: GenerateStreetAddress;
    case: "generateStreetAddressConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateStringPhone generate_string_phone_config = 20;
     */
    value: GenerateStringPhone;
    case: "generateStringPhoneConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateString generate_string_config = 21;
     */
    value: GenerateString;
    case: "generateStringConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUnixTimestamp generate_unixtimestamp_config = 22;
     */
    value: GenerateUnixTimestamp;
    case: "generateUnixtimestampConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUsername generate_username_config = 23;
     */
    value: GenerateUsername;
    case: "generateUsernameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUtcTimestamp generate_utctimestamp_config = 24;
     */
    value: GenerateUtcTimestamp;
    case: "generateUtctimestampConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateUuid generate_uuid_config = 25;
     */
    value: GenerateUuid;
    case: "generateUuidConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateZipcode generate_zipcode_config = 26;
     */
    value: GenerateZipcode;
    case: "generateZipcodeConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformE164Phone transform_e164_phone_config = 27;
     */
    value: TransformE164Phone;
    case: "transformE164PhoneConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFirstName transform_first_name_config = 28;
     */
    value: TransformFirstName;
    case: "transformFirstNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFloat transform_float_config = 29;
     */
    value: TransformFloat;
    case: "transformFloatConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformFullName transform_full_name_config = 30;
     */
    value: TransformFullName;
    case: "transformFullNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformIntPhone transform_int_phone_config = 31;
     */
    value: TransformIntPhone;
    case: "transformIntPhoneConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformInt transform_int_config = 32;
     */
    value: TransformInt;
    case: "transformIntConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformLastName transform_last_name_config = 33;
     */
    value: TransformLastName;
    case: "transformLastNameConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformPhone transform_phone_config = 34;
     */
    value: TransformPhone;
    case: "transformPhoneConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.TransformString transform_string_config = 35;
     */
    value: TransformString;
    case: "transformStringConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.Passthrough passthrough_config = 36;
     */
    value: Passthrough;
    case: "passthroughConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.Null nullconfig = 37;
     */
    value: Null;
    case: "nullconfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.UserDefinedTransformerConfig user_defined_transformer_config = 38;
     */
    value: UserDefinedTransformerConfig;
    case: "userDefinedTransformerConfig";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateDefault generate_default_config = 39;
     */
    value: GenerateDefault;
    case: "generateDefaultConfig";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TransformerConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformerConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "generate_email_config", kind: "message", T: GenerateEmail, oneof: "config" },
    { no: 2, name: "generate_realistic_email_config", kind: "message", T: GenerateRealisticEmail, oneof: "config" },
    { no: 3, name: "transform_email_config", kind: "message", T: TransformEmail, oneof: "config" },
    { no: 4, name: "generate_bool_config", kind: "message", T: GenerateBool, oneof: "config" },
    { no: 5, name: "generate_card_number_config", kind: "message", T: GenerateCardNumber, oneof: "config" },
    { no: 6, name: "generate_city_config", kind: "message", T: GenerateCity, oneof: "config" },
    { no: 7, name: "generate_e164_number_config", kind: "message", T: GenerateE164Number, oneof: "config" },
    { no: 8, name: "generate_first_name_config", kind: "message", T: GenerateFirstName, oneof: "config" },
    { no: 9, name: "generate_float_config", kind: "message", T: GenerateFloat, oneof: "config" },
    { no: 10, name: "generate_full_address_config", kind: "message", T: GenerateFullAddress, oneof: "config" },
    { no: 11, name: "generate_full_name_config", kind: "message", T: GenerateFullName, oneof: "config" },
    { no: 12, name: "generate_gender_config", kind: "message", T: GenerateGender, oneof: "config" },
    { no: 13, name: "generate_int64_phone_config", kind: "message", T: GenerateInt64Phone, oneof: "config" },
    { no: 14, name: "generate_int_config", kind: "message", T: GenerateInt, oneof: "config" },
    { no: 15, name: "generate_last_name_config", kind: "message", T: GenerateLastName, oneof: "config" },
    { no: 16, name: "generate_sha256hash_config", kind: "message", T: GenerateSha256Hash, oneof: "config" },
    { no: 17, name: "generate_ssn_config", kind: "message", T: GenerateSSN, oneof: "config" },
    { no: 18, name: "generate_state_config", kind: "message", T: GenerateState, oneof: "config" },
    { no: 19, name: "generate_street_address_config", kind: "message", T: GenerateStreetAddress, oneof: "config" },
    { no: 20, name: "generate_string_phone_config", kind: "message", T: GenerateStringPhone, oneof: "config" },
    { no: 21, name: "generate_string_config", kind: "message", T: GenerateString, oneof: "config" },
    { no: 22, name: "generate_unixtimestamp_config", kind: "message", T: GenerateUnixTimestamp, oneof: "config" },
    { no: 23, name: "generate_username_config", kind: "message", T: GenerateUsername, oneof: "config" },
    { no: 24, name: "generate_utctimestamp_config", kind: "message", T: GenerateUtcTimestamp, oneof: "config" },
    { no: 25, name: "generate_uuid_config", kind: "message", T: GenerateUuid, oneof: "config" },
    { no: 26, name: "generate_zipcode_config", kind: "message", T: GenerateZipcode, oneof: "config" },
    { no: 27, name: "transform_e164_phone_config", kind: "message", T: TransformE164Phone, oneof: "config" },
    { no: 28, name: "transform_first_name_config", kind: "message", T: TransformFirstName, oneof: "config" },
    { no: 29, name: "transform_float_config", kind: "message", T: TransformFloat, oneof: "config" },
    { no: 30, name: "transform_full_name_config", kind: "message", T: TransformFullName, oneof: "config" },
    { no: 31, name: "transform_int_phone_config", kind: "message", T: TransformIntPhone, oneof: "config" },
    { no: 32, name: "transform_int_config", kind: "message", T: TransformInt, oneof: "config" },
    { no: 33, name: "transform_last_name_config", kind: "message", T: TransformLastName, oneof: "config" },
    { no: 34, name: "transform_phone_config", kind: "message", T: TransformPhone, oneof: "config" },
    { no: 35, name: "transform_string_config", kind: "message", T: TransformString, oneof: "config" },
    { no: 36, name: "passthrough_config", kind: "message", T: Passthrough, oneof: "config" },
    { no: 37, name: "nullconfig", kind: "message", T: Null, oneof: "config" },
    { no: 38, name: "user_defined_transformer_config", kind: "message", T: UserDefinedTransformerConfig, oneof: "config" },
    { no: 39, name: "generate_default_config", kind: "message", T: GenerateDefault, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformerConfig {
    return new TransformerConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformerConfig {
    return new TransformerConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformerConfig {
    return new TransformerConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TransformerConfig | PlainMessage<TransformerConfig> | undefined, b: TransformerConfig | PlainMessage<TransformerConfig> | undefined): boolean {
    return proto3.util.equals(TransformerConfig, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateEmail
 */
export class GenerateEmail extends Message<GenerateEmail> {
  constructor(data?: PartialMessage<GenerateEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateEmail {
    return new GenerateEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateEmail {
    return new GenerateEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateEmail {
    return new GenerateEmail().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateEmail | PlainMessage<GenerateEmail> | undefined, b: GenerateEmail | PlainMessage<GenerateEmail> | undefined): boolean {
    return proto3.util.equals(GenerateEmail, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateRealisticEmail
 */
export class GenerateRealisticEmail extends Message<GenerateRealisticEmail> {
  constructor(data?: PartialMessage<GenerateRealisticEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateRealisticEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateRealisticEmail {
    return new GenerateRealisticEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateRealisticEmail {
    return new GenerateRealisticEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateRealisticEmail {
    return new GenerateRealisticEmail().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateRealisticEmail | PlainMessage<GenerateRealisticEmail> | undefined, b: GenerateRealisticEmail | PlainMessage<GenerateRealisticEmail> | undefined): boolean {
    return proto3.util.equals(GenerateRealisticEmail, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformEmail
 */
export class TransformEmail extends Message<TransformEmail> {
  /**
   * @generated from field: bool preserve_domain = 1;
   */
  preserveDomain = false;

  /**
   * @generated from field: bool preserve_length = 2;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_domain", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformEmail {
    return new TransformEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformEmail {
    return new TransformEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformEmail {
    return new TransformEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TransformEmail | PlainMessage<TransformEmail> | undefined, b: TransformEmail | PlainMessage<TransformEmail> | undefined): boolean {
    return proto3.util.equals(TransformEmail, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateBool
 */
export class GenerateBool extends Message<GenerateBool> {
  constructor(data?: PartialMessage<GenerateBool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateBool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateBool {
    return new GenerateBool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateBool {
    return new GenerateBool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateBool {
    return new GenerateBool().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateBool | PlainMessage<GenerateBool> | undefined, b: GenerateBool | PlainMessage<GenerateBool> | undefined): boolean {
    return proto3.util.equals(GenerateBool, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateCardNumber
 */
export class GenerateCardNumber extends Message<GenerateCardNumber> {
  /**
   * @generated from field: bool valid_luhn = 1;
   */
  validLuhn = false;

  constructor(data?: PartialMessage<GenerateCardNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateCardNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid_luhn", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateCardNumber {
    return new GenerateCardNumber().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateCardNumber | PlainMessage<GenerateCardNumber> | undefined, b: GenerateCardNumber | PlainMessage<GenerateCardNumber> | undefined): boolean {
    return proto3.util.equals(GenerateCardNumber, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateCity
 */
export class GenerateCity extends Message<GenerateCity> {
  constructor(data?: PartialMessage<GenerateCity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateCity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateCity {
    return new GenerateCity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateCity {
    return new GenerateCity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateCity {
    return new GenerateCity().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateCity | PlainMessage<GenerateCity> | undefined, b: GenerateCity | PlainMessage<GenerateCity> | undefined): boolean {
    return proto3.util.equals(GenerateCity, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateDefault
 */
export class GenerateDefault extends Message<GenerateDefault> {
  constructor(data?: PartialMessage<GenerateDefault>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateDefault";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateDefault {
    return new GenerateDefault().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateDefault {
    return new GenerateDefault().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateDefault {
    return new GenerateDefault().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateDefault | PlainMessage<GenerateDefault> | undefined, b: GenerateDefault | PlainMessage<GenerateDefault> | undefined): boolean {
    return proto3.util.equals(GenerateDefault, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateE164Number
 */
export class GenerateE164Number extends Message<GenerateE164Number> {
  /**
   * @generated from field: int64 length = 1;
   */
  length = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateE164Number>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateE164Number";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateE164Number {
    return new GenerateE164Number().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateE164Number {
    return new GenerateE164Number().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateE164Number {
    return new GenerateE164Number().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateE164Number | PlainMessage<GenerateE164Number> | undefined, b: GenerateE164Number | PlainMessage<GenerateE164Number> | undefined): boolean {
    return proto3.util.equals(GenerateE164Number, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFirstName
 */
export class GenerateFirstName extends Message<GenerateFirstName> {
  constructor(data?: PartialMessage<GenerateFirstName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFirstName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirstName {
    return new GenerateFirstName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirstName | PlainMessage<GenerateFirstName> | undefined, b: GenerateFirstName | PlainMessage<GenerateFirstName> | undefined): boolean {
    return proto3.util.equals(GenerateFirstName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFloat
 */
export class GenerateFloat extends Message<GenerateFloat> {
  /**
   * @generated from field: string sign = 1;
   */
  sign = "";

  /**
   * @generated from field: int64 digits_before_decimal = 2;
   */
  digitsBeforeDecimal = protoInt64.zero;

  /**
   * @generated from field: int64 digits_after_decimal = 3;
   */
  digitsAfterDecimal = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateFloat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFloat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digits_before_decimal", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "digits_after_decimal", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFloat {
    return new GenerateFloat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFloat {
    return new GenerateFloat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFloat {
    return new GenerateFloat().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFloat | PlainMessage<GenerateFloat> | undefined, b: GenerateFloat | PlainMessage<GenerateFloat> | undefined): boolean {
    return proto3.util.equals(GenerateFloat, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFullAddress
 */
export class GenerateFullAddress extends Message<GenerateFullAddress> {
  constructor(data?: PartialMessage<GenerateFullAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFullAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFullAddress {
    return new GenerateFullAddress().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFullAddress | PlainMessage<GenerateFullAddress> | undefined, b: GenerateFullAddress | PlainMessage<GenerateFullAddress> | undefined): boolean {
    return proto3.util.equals(GenerateFullAddress, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateFullName
 */
export class GenerateFullName extends Message<GenerateFullName> {
  constructor(data?: PartialMessage<GenerateFullName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateFullName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFullName {
    return new GenerateFullName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFullName {
    return new GenerateFullName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFullName {
    return new GenerateFullName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFullName | PlainMessage<GenerateFullName> | undefined, b: GenerateFullName | PlainMessage<GenerateFullName> | undefined): boolean {
    return proto3.util.equals(GenerateFullName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateGender
 */
export class GenerateGender extends Message<GenerateGender> {
  /**
   * @generated from field: bool abbreviate = 1;
   */
  abbreviate = false;

  constructor(data?: PartialMessage<GenerateGender>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateGender";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "abbreviate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateGender {
    return new GenerateGender().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateGender {
    return new GenerateGender().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateGender {
    return new GenerateGender().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateGender | PlainMessage<GenerateGender> | undefined, b: GenerateGender | PlainMessage<GenerateGender> | undefined): boolean {
    return proto3.util.equals(GenerateGender, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateInt64Phone
 */
export class GenerateInt64Phone extends Message<GenerateInt64Phone> {
  constructor(data?: PartialMessage<GenerateInt64Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateInt64Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInt64Phone {
    return new GenerateInt64Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInt64Phone {
    return new GenerateInt64Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInt64Phone {
    return new GenerateInt64Phone().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInt64Phone | PlainMessage<GenerateInt64Phone> | undefined, b: GenerateInt64Phone | PlainMessage<GenerateInt64Phone> | undefined): boolean {
    return proto3.util.equals(GenerateInt64Phone, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateInt
 */
export class GenerateInt extends Message<GenerateInt> {
  /**
   * @generated from field: int64 length = 1;
   */
  length = protoInt64.zero;

  /**
   * @generated from field: string sign = 2;
   */
  sign = "";

  constructor(data?: PartialMessage<GenerateInt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateInt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInt {
    return new GenerateInt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInt {
    return new GenerateInt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInt {
    return new GenerateInt().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInt | PlainMessage<GenerateInt> | undefined, b: GenerateInt | PlainMessage<GenerateInt> | undefined): boolean {
    return proto3.util.equals(GenerateInt, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateLastName
 */
export class GenerateLastName extends Message<GenerateLastName> {
  constructor(data?: PartialMessage<GenerateLastName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateLastName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateLastName {
    return new GenerateLastName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateLastName {
    return new GenerateLastName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateLastName {
    return new GenerateLastName().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateLastName | PlainMessage<GenerateLastName> | undefined, b: GenerateLastName | PlainMessage<GenerateLastName> | undefined): boolean {
    return proto3.util.equals(GenerateLastName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateSha256Hash
 */
export class GenerateSha256Hash extends Message<GenerateSha256Hash> {
  constructor(data?: PartialMessage<GenerateSha256Hash>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateSha256Hash";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateSha256Hash {
    return new GenerateSha256Hash().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateSha256Hash | PlainMessage<GenerateSha256Hash> | undefined, b: GenerateSha256Hash | PlainMessage<GenerateSha256Hash> | undefined): boolean {
    return proto3.util.equals(GenerateSha256Hash, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateSSN
 */
export class GenerateSSN extends Message<GenerateSSN> {
  constructor(data?: PartialMessage<GenerateSSN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateSSN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateSSN {
    return new GenerateSSN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateSSN {
    return new GenerateSSN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateSSN {
    return new GenerateSSN().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateSSN | PlainMessage<GenerateSSN> | undefined, b: GenerateSSN | PlainMessage<GenerateSSN> | undefined): boolean {
    return proto3.util.equals(GenerateSSN, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateState
 */
export class GenerateState extends Message<GenerateState> {
  constructor(data?: PartialMessage<GenerateState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateState {
    return new GenerateState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateState {
    return new GenerateState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateState {
    return new GenerateState().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateState | PlainMessage<GenerateState> | undefined, b: GenerateState | PlainMessage<GenerateState> | undefined): boolean {
    return proto3.util.equals(GenerateState, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateStreetAddress
 */
export class GenerateStreetAddress extends Message<GenerateStreetAddress> {
  constructor(data?: PartialMessage<GenerateStreetAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateStreetAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateStreetAddress {
    return new GenerateStreetAddress().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateStreetAddress | PlainMessage<GenerateStreetAddress> | undefined, b: GenerateStreetAddress | PlainMessage<GenerateStreetAddress> | undefined): boolean {
    return proto3.util.equals(GenerateStreetAddress, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateStringPhone
 */
export class GenerateStringPhone extends Message<GenerateStringPhone> {
  /**
   * @generated from field: bool include_hyphens = 2;
   */
  includeHyphens = false;

  constructor(data?: PartialMessage<GenerateStringPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateStringPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "include_hyphens", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateStringPhone {
    return new GenerateStringPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateStringPhone {
    return new GenerateStringPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateStringPhone {
    return new GenerateStringPhone().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateStringPhone | PlainMessage<GenerateStringPhone> | undefined, b: GenerateStringPhone | PlainMessage<GenerateStringPhone> | undefined): boolean {
    return proto3.util.equals(GenerateStringPhone, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateString
 */
export class GenerateString extends Message<GenerateString> {
  /**
   * @generated from field: int64 length = 1;
   */
  length = protoInt64.zero;

  constructor(data?: PartialMessage<GenerateString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateString {
    return new GenerateString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateString {
    return new GenerateString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateString {
    return new GenerateString().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateString | PlainMessage<GenerateString> | undefined, b: GenerateString | PlainMessage<GenerateString> | undefined): boolean {
    return proto3.util.equals(GenerateString, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUnixTimestamp
 */
export class GenerateUnixTimestamp extends Message<GenerateUnixTimestamp> {
  constructor(data?: PartialMessage<GenerateUnixTimestamp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUnixTimestamp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUnixTimestamp {
    return new GenerateUnixTimestamp().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUnixTimestamp | PlainMessage<GenerateUnixTimestamp> | undefined, b: GenerateUnixTimestamp | PlainMessage<GenerateUnixTimestamp> | undefined): boolean {
    return proto3.util.equals(GenerateUnixTimestamp, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUsername
 */
export class GenerateUsername extends Message<GenerateUsername> {
  constructor(data?: PartialMessage<GenerateUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUsername {
    return new GenerateUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUsername {
    return new GenerateUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUsername {
    return new GenerateUsername().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUsername | PlainMessage<GenerateUsername> | undefined, b: GenerateUsername | PlainMessage<GenerateUsername> | undefined): boolean {
    return proto3.util.equals(GenerateUsername, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUtcTimestamp
 */
export class GenerateUtcTimestamp extends Message<GenerateUtcTimestamp> {
  constructor(data?: PartialMessage<GenerateUtcTimestamp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUtcTimestamp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUtcTimestamp {
    return new GenerateUtcTimestamp().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUtcTimestamp | PlainMessage<GenerateUtcTimestamp> | undefined, b: GenerateUtcTimestamp | PlainMessage<GenerateUtcTimestamp> | undefined): boolean {
    return proto3.util.equals(GenerateUtcTimestamp, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateUuid
 */
export class GenerateUuid extends Message<GenerateUuid> {
  /**
   * @generated from field: bool include_hyphens = 1;
   */
  includeHyphens = false;

  constructor(data?: PartialMessage<GenerateUuid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateUuid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "include_hyphens", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateUuid {
    return new GenerateUuid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateUuid {
    return new GenerateUuid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateUuid {
    return new GenerateUuid().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateUuid | PlainMessage<GenerateUuid> | undefined, b: GenerateUuid | PlainMessage<GenerateUuid> | undefined): boolean {
    return proto3.util.equals(GenerateUuid, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.GenerateZipcode
 */
export class GenerateZipcode extends Message<GenerateZipcode> {
  constructor(data?: PartialMessage<GenerateZipcode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.GenerateZipcode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateZipcode {
    return new GenerateZipcode().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateZipcode | PlainMessage<GenerateZipcode> | undefined, b: GenerateZipcode | PlainMessage<GenerateZipcode> | undefined): boolean {
    return proto3.util.equals(GenerateZipcode, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformE164Phone
 */
export class TransformE164Phone extends Message<TransformE164Phone> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformE164Phone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformE164Phone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformE164Phone {
    return new TransformE164Phone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformE164Phone {
    return new TransformE164Phone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformE164Phone {
    return new TransformE164Phone().fromJsonString(jsonString, options);
  }

  static equals(a: TransformE164Phone | PlainMessage<TransformE164Phone> | undefined, b: TransformE164Phone | PlainMessage<TransformE164Phone> | undefined): boolean {
    return proto3.util.equals(TransformE164Phone, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFirstName
 */
export class TransformFirstName extends Message<TransformFirstName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformFirstName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFirstName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFirstName {
    return new TransformFirstName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFirstName {
    return new TransformFirstName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFirstName {
    return new TransformFirstName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFirstName | PlainMessage<TransformFirstName> | undefined, b: TransformFirstName | PlainMessage<TransformFirstName> | undefined): boolean {
    return proto3.util.equals(TransformFirstName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFloat
 */
export class TransformFloat extends Message<TransformFloat> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  /**
   * @generated from field: bool preserve_sign = 2;
   */
  preserveSign = false;

  constructor(data?: PartialMessage<TransformFloat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFloat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "preserve_sign", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFloat {
    return new TransformFloat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFloat {
    return new TransformFloat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFloat {
    return new TransformFloat().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFloat | PlainMessage<TransformFloat> | undefined, b: TransformFloat | PlainMessage<TransformFloat> | undefined): boolean {
    return proto3.util.equals(TransformFloat, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformFullName
 */
export class TransformFullName extends Message<TransformFullName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformFullName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformFullName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformFullName {
    return new TransformFullName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformFullName {
    return new TransformFullName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformFullName {
    return new TransformFullName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformFullName | PlainMessage<TransformFullName> | undefined, b: TransformFullName | PlainMessage<TransformFullName> | undefined): boolean {
    return proto3.util.equals(TransformFullName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformIntPhone
 */
export class TransformIntPhone extends Message<TransformIntPhone> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformIntPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformIntPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformIntPhone {
    return new TransformIntPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformIntPhone {
    return new TransformIntPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformIntPhone {
    return new TransformIntPhone().fromJsonString(jsonString, options);
  }

  static equals(a: TransformIntPhone | PlainMessage<TransformIntPhone> | undefined, b: TransformIntPhone | PlainMessage<TransformIntPhone> | undefined): boolean {
    return proto3.util.equals(TransformIntPhone, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformInt
 */
export class TransformInt extends Message<TransformInt> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  /**
   * @generated from field: bool preserve_sign = 2;
   */
  preserveSign = false;

  constructor(data?: PartialMessage<TransformInt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformInt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "preserve_sign", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformInt {
    return new TransformInt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformInt {
    return new TransformInt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformInt {
    return new TransformInt().fromJsonString(jsonString, options);
  }

  static equals(a: TransformInt | PlainMessage<TransformInt> | undefined, b: TransformInt | PlainMessage<TransformInt> | undefined): boolean {
    return proto3.util.equals(TransformInt, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformLastName
 */
export class TransformLastName extends Message<TransformLastName> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformLastName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformLastName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformLastName {
    return new TransformLastName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformLastName {
    return new TransformLastName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformLastName {
    return new TransformLastName().fromJsonString(jsonString, options);
  }

  static equals(a: TransformLastName | PlainMessage<TransformLastName> | undefined, b: TransformLastName | PlainMessage<TransformLastName> | undefined): boolean {
    return proto3.util.equals(TransformLastName, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformPhone
 */
export class TransformPhone extends Message<TransformPhone> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  /**
   * @generated from field: bool include_hyphens = 2;
   */
  includeHyphens = false;

  constructor(data?: PartialMessage<TransformPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "include_hyphens", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformPhone {
    return new TransformPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformPhone {
    return new TransformPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformPhone {
    return new TransformPhone().fromJsonString(jsonString, options);
  }

  static equals(a: TransformPhone | PlainMessage<TransformPhone> | undefined, b: TransformPhone | PlainMessage<TransformPhone> | undefined): boolean {
    return proto3.util.equals(TransformPhone, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.TransformString
 */
export class TransformString extends Message<TransformString> {
  /**
   * @generated from field: bool preserve_length = 1;
   */
  preserveLength = false;

  constructor(data?: PartialMessage<TransformString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.TransformString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "preserve_length", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformString {
    return new TransformString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformString {
    return new TransformString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformString {
    return new TransformString().fromJsonString(jsonString, options);
  }

  static equals(a: TransformString | PlainMessage<TransformString> | undefined, b: TransformString | PlainMessage<TransformString> | undefined): boolean {
    return proto3.util.equals(TransformString, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Passthrough
 */
export class Passthrough extends Message<Passthrough> {
  constructor(data?: PartialMessage<Passthrough>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Passthrough";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Passthrough {
    return new Passthrough().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Passthrough {
    return new Passthrough().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Passthrough {
    return new Passthrough().fromJsonString(jsonString, options);
  }

  static equals(a: Passthrough | PlainMessage<Passthrough> | undefined, b: Passthrough | PlainMessage<Passthrough> | undefined): boolean {
    return proto3.util.equals(Passthrough, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.Null
 */
export class Null extends Message<Null> {
  constructor(data?: PartialMessage<Null>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.Null";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Null {
    return new Null().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Null {
    return new Null().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Null {
    return new Null().fromJsonString(jsonString, options);
  }

  static equals(a: Null | PlainMessage<Null> | undefined, b: Null | PlainMessage<Null> | undefined): boolean {
    return proto3.util.equals(Null, a, b);
  }
}

/**
 * @generated from message mgmt.v1alpha1.UserDefinedTransformerConfig
 */
export class UserDefinedTransformerConfig extends Message<UserDefinedTransformerConfig> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UserDefinedTransformerConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "mgmt.v1alpha1.UserDefinedTransformerConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserDefinedTransformerConfig {
    return new UserDefinedTransformerConfig().fromJsonString(jsonString, options);
  }

  static equals(a: UserDefinedTransformerConfig | PlainMessage<UserDefinedTransformerConfig> | undefined, b: UserDefinedTransformerConfig | PlainMessage<UserDefinedTransformerConfig> | undefined): boolean {
    return proto3.util.equals(UserDefinedTransformerConfig, a, b);
  }
}

