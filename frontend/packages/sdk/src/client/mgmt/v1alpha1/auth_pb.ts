// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/auth.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mgmt/v1alpha1/auth.proto.
 */
export const file_mgmt_v1alpha1_auth: GenFile = /*@__PURE__*/
  fileDesc("ChhtZ210L3YxYWxwaGExL2F1dGgucHJvdG8SDW1nbXQudjFhbHBoYTEiRwoPTG9naW5DbGlSZXF1ZXN0EhUKBGNvZGUYASABKAlCB7pIBHICEAESHQoMcmVkaXJlY3RfdXJpGAIgASgJQge6SARyAhABIkQKEExvZ2luQ2xpUmVzcG9uc2USMAoMYWNjZXNzX3Rva2VuGAEgASgLMhoubWdtdC52MWFscGhhMS5BY2Nlc3NUb2tlbiIWChRHZXRBdXRoU3RhdHVzUmVxdWVzdCIrChVHZXRBdXRoU3RhdHVzUmVzcG9uc2USEgoKaXNfZW5hYmxlZBgBIAEoCCKsAQoLQWNjZXNzVG9rZW4SFAoMYWNjZXNzX3Rva2VuGAEgASgJEhoKDXJlZnJlc2hfdG9rZW4YAiABKAlIAIgBARISCgpleHBpcmVzX2luGAMgASgDEg0KBXNjb3BlGAQgASgJEhUKCGlkX3Rva2VuGAUgASgJSAGIAQESEgoKdG9rZW5fdHlwZRgGIAEoCUIQCg5fcmVmcmVzaF90b2tlbkILCglfaWRfdG9rZW4iZwoWR2V0QXV0aG9yaXplVXJsUmVxdWVzdBIWCgVzdGF0ZRgBIAEoCUIHukgEcgIQARIdCgxyZWRpcmVjdF91cmkYAiABKAlCB7pIBHICEAESFgoFc2NvcGUYAyABKAlCB7pIBHICEAEiJgoXR2V0QXV0aG9yaXplVXJsUmVzcG9uc2USCwoDdXJsGAEgASgJIjMKEVJlZnJlc2hDbGlSZXF1ZXN0Eh4KDXJlZnJlc2hfdG9rZW4YASABKAlCB7pIBHICEAEiRgoSUmVmcmVzaENsaVJlc3BvbnNlEjAKDGFjY2Vzc190b2tlbhgBIAEoCzIaLm1nbXQudjFhbHBoYTEuQWNjZXNzVG9rZW4iEwoRQ2hlY2tUb2tlblJlcXVlc3QiFAoSQ2hlY2tUb2tlblJlc3BvbnNlMs4DCgtBdXRoU2VydmljZRJNCghMb2dpbkNsaRIeLm1nbXQudjFhbHBoYTEuTG9naW5DbGlSZXF1ZXN0Gh8ubWdtdC52MWFscGhhMS5Mb2dpbkNsaVJlc3BvbnNlIgASUwoKUmVmcmVzaENsaRIgLm1nbXQudjFhbHBoYTEuUmVmcmVzaENsaVJlcXVlc3QaIS5tZ210LnYxYWxwaGExLlJlZnJlc2hDbGlSZXNwb25zZSIAElMKCkNoZWNrVG9rZW4SIC5tZ210LnYxYWxwaGExLkNoZWNrVG9rZW5SZXF1ZXN0GiEubWdtdC52MWFscGhhMS5DaGVja1Rva2VuUmVzcG9uc2UiABJlCg9HZXRBdXRob3JpemVVcmwSJS5tZ210LnYxYWxwaGExLkdldEF1dGhvcml6ZVVybFJlcXVlc3QaJi5tZ210LnYxYWxwaGExLkdldEF1dGhvcml6ZVVybFJlc3BvbnNlIgOQAgESXwoNR2V0QXV0aFN0YXR1cxIjLm1nbXQudjFhbHBoYTEuR2V0QXV0aFN0YXR1c1JlcXVlc3QaJC5tZ210LnYxYWxwaGExLkdldEF1dGhTdGF0dXNSZXNwb25zZSIDkAIBQsUBChFjb20ubWdtdC52MWFscGhhMUIJQXV0aFByb3RvUAFaUGdpdGh1Yi5jb20vbnVjbGV1c2Nsb3VkL25lb3N5bmMvYmFja2VuZC9nZW4vZ28vcHJvdG9zL21nbXQvdjFhbHBoYTE7bWdtdHYxYWxwaGExogIDTVhYqgINTWdtdC5WMWFscGhhMcoCDU1nbXRcVjFhbHBoYTHiAhlNZ210XFYxYWxwaGExXEdQQk1ldGFkYXRh6gIOTWdtdDo6VjFhbHBoYTFiBnByb3RvMw", [file_buf_validate_validate]);

/**
 * @generated from message mgmt.v1alpha1.LoginCliRequest
 */
export type LoginCliRequest = Message<"mgmt.v1alpha1.LoginCliRequest"> & {
  /**
   * The oauth code
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * The oauth redirect uri that the client uses during the oauth request
   *
   * @generated from field: string redirect_uri = 2;
   */
  redirectUri: string;
};

/**
 * Describes the message mgmt.v1alpha1.LoginCliRequest.
 * Use `create(LoginCliRequestSchema)` to create a new message.
 */
export const LoginCliRequestSchema: GenMessage<LoginCliRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 0);

/**
 * @generated from message mgmt.v1alpha1.LoginCliResponse
 */
export type LoginCliResponse = Message<"mgmt.v1alpha1.LoginCliResponse"> & {
  /**
   * The access token that is returned on successful login
   *
   * @generated from field: mgmt.v1alpha1.AccessToken access_token = 1;
   */
  accessToken?: AccessToken;
};

/**
 * Describes the message mgmt.v1alpha1.LoginCliResponse.
 * Use `create(LoginCliResponseSchema)` to create a new message.
 */
export const LoginCliResponseSchema: GenMessage<LoginCliResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 1);

/**
 * @generated from message mgmt.v1alpha1.GetAuthStatusRequest
 */
export type GetAuthStatusRequest = Message<"mgmt.v1alpha1.GetAuthStatusRequest"> & {
};

/**
 * Describes the message mgmt.v1alpha1.GetAuthStatusRequest.
 * Use `create(GetAuthStatusRequestSchema)` to create a new message.
 */
export const GetAuthStatusRequestSchema: GenMessage<GetAuthStatusRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 2);

/**
 * @generated from message mgmt.v1alpha1.GetAuthStatusResponse
 */
export type GetAuthStatusResponse = Message<"mgmt.v1alpha1.GetAuthStatusResponse"> & {
  /**
   * Whether or not the server has authentication enabled.
   * This tells the client if it is expected to send access tokens.
   *
   * @generated from field: bool is_enabled = 1;
   */
  isEnabled: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.GetAuthStatusResponse.
 * Use `create(GetAuthStatusResponseSchema)` to create a new message.
 */
export const GetAuthStatusResponseSchema: GenMessage<GetAuthStatusResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 3);

/**
 * A decoded representation of an Access token from the backing auth server
 *
 * @generated from message mgmt.v1alpha1.AccessToken
 */
export type AccessToken = Message<"mgmt.v1alpha1.AccessToken"> & {
  /**
   * The access token that will be provided in subsequent requests to provide authenticated access to the Api
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * Token that can be used to retrieve a refreshed access token.
   * Will not be provided if the offline_access scope is not provided in the initial login flow.
   *
   * @generated from field: optional string refresh_token = 2;
   */
  refreshToken?: string;

  /**
   * Relative time in seconds that the access token will expire. Combine with the current time to get the expires_at time.
   *
   * @generated from field: int64 expires_in = 3;
   */
  expiresIn: bigint;

  /**
   * The scopes that the access token have
   *
   * @generated from field: string scope = 4;
   */
  scope: string;

  /**
   * The identity token of the authenticated user
   *
   * @generated from field: optional string id_token = 5;
   */
  idToken?: string;

  /**
   * The token type. For JWTs, this will be `Bearer`
   *
   * @generated from field: string token_type = 6;
   */
  tokenType: string;
};

/**
 * Describes the message mgmt.v1alpha1.AccessToken.
 * Use `create(AccessTokenSchema)` to create a new message.
 */
export const AccessTokenSchema: GenMessage<AccessToken> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 4);

/**
 * @generated from message mgmt.v1alpha1.GetAuthorizeUrlRequest
 */
export type GetAuthorizeUrlRequest = Message<"mgmt.v1alpha1.GetAuthorizeUrlRequest"> & {
  /**
   * The state that's generated by the client that is passed along to prevent tampering
   *
   * @generated from field: string state = 1;
   */
  state: string;

  /**
   * The redirect uri that the client will be redirected back to during the auth request
   *
   * @generated from field: string redirect_uri = 2;
   */
  redirectUri: string;

  /**
   * The scopes the client is requesting as a part of the oauth login request
   *
   * @generated from field: string scope = 3;
   */
  scope: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetAuthorizeUrlRequest.
 * Use `create(GetAuthorizeUrlRequestSchema)` to create a new message.
 */
export const GetAuthorizeUrlRequestSchema: GenMessage<GetAuthorizeUrlRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 5);

/**
 * @generated from message mgmt.v1alpha1.GetAuthorizeUrlResponse
 */
export type GetAuthorizeUrlResponse = Message<"mgmt.v1alpha1.GetAuthorizeUrlResponse"> & {
  /**
   * The generated url that is the client will be redirected to during the Oauth flow
   *
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetAuthorizeUrlResponse.
 * Use `create(GetAuthorizeUrlResponseSchema)` to create a new message.
 */
export const GetAuthorizeUrlResponseSchema: GenMessage<GetAuthorizeUrlResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 6);

/**
 * @generated from message mgmt.v1alpha1.RefreshCliRequest
 */
export type RefreshCliRequest = Message<"mgmt.v1alpha1.RefreshCliRequest"> & {
  /**
   * The token used to retrieve a new access token.
   *
   * @generated from field: string refresh_token = 1;
   */
  refreshToken: string;
};

/**
 * Describes the message mgmt.v1alpha1.RefreshCliRequest.
 * Use `create(RefreshCliRequestSchema)` to create a new message.
 */
export const RefreshCliRequestSchema: GenMessage<RefreshCliRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 7);

/**
 * @generated from message mgmt.v1alpha1.RefreshCliResponse
 */
export type RefreshCliResponse = Message<"mgmt.v1alpha1.RefreshCliResponse"> & {
  /**
   * The access token that is returned on successful refresh
   *
   * @generated from field: mgmt.v1alpha1.AccessToken access_token = 1;
   */
  accessToken?: AccessToken;
};

/**
 * Describes the message mgmt.v1alpha1.RefreshCliResponse.
 * Use `create(RefreshCliResponseSchema)` to create a new message.
 */
export const RefreshCliResponseSchema: GenMessage<RefreshCliResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 8);

/**
 * @generated from message mgmt.v1alpha1.CheckTokenRequest
 */
export type CheckTokenRequest = Message<"mgmt.v1alpha1.CheckTokenRequest"> & {
};

/**
 * Describes the message mgmt.v1alpha1.CheckTokenRequest.
 * Use `create(CheckTokenRequestSchema)` to create a new message.
 */
export const CheckTokenRequestSchema: GenMessage<CheckTokenRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 9);

/**
 * @generated from message mgmt.v1alpha1.CheckTokenResponse
 */
export type CheckTokenResponse = Message<"mgmt.v1alpha1.CheckTokenResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.CheckTokenResponse.
 * Use `create(CheckTokenResponseSchema)` to create a new message.
 */
export const CheckTokenResponseSchema: GenMessage<CheckTokenResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_auth, 10);

/**
 * Service that handles generic Authentication for Neosync
 * Today this is mostly used by the CLI to receive authentication information
 *
 * @generated from service mgmt.v1alpha1.AuthService
 */
export const AuthService: GenService<{
  /**
   * Used by the CLI to login to Neosync with OAuth.
   *
   * @generated from rpc mgmt.v1alpha1.AuthService.LoginCli
   */
  loginCli: {
    methodKind: "unary";
    input: typeof LoginCliRequestSchema;
    output: typeof LoginCliResponseSchema;
  },
  /**
   * Used by the CLI to refresh an expired Neosync accesss token.
   * This should only be used if an access token was previously retrieved from the `LoginCli` or `RefreshCli` methods.
   *
   * @generated from rpc mgmt.v1alpha1.AuthService.RefreshCli
   */
  refreshCli: {
    methodKind: "unary";
    input: typeof RefreshCliRequestSchema;
    output: typeof RefreshCliResponseSchema;
  },
  /**
   * Empty endpoint to simply check if the provided access token is valid
   *
   * @generated from rpc mgmt.v1alpha1.AuthService.CheckToken
   */
  checkToken: {
    methodKind: "unary";
    input: typeof CheckTokenRequestSchema;
    output: typeof CheckTokenResponseSchema;
  },
  /**
   * Used by the CLI to retrieve an Authorize URL for use with OAuth login.
   *
   * @generated from rpc mgmt.v1alpha1.AuthService.GetAuthorizeUrl
   */
  getAuthorizeUrl: {
    methodKind: "unary";
    input: typeof GetAuthorizeUrlRequestSchema;
    output: typeof GetAuthorizeUrlResponseSchema;
  },
  /**
   * Returns the auth status of the API server. Whether or not the backend has authentication enabled.
   * This is used by clients to make decisions on whether or not they should send access tokens to the API.
   *
   * @generated from rpc mgmt.v1alpha1.AuthService.GetAuthStatus
   */
  getAuthStatus: {
    methodKind: "unary";
    input: typeof GetAuthStatusRequestSchema;
    output: typeof GetAuthStatusResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mgmt_v1alpha1_auth, 0);

