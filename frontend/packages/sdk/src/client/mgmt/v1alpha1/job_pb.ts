// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/job.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.js";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { DatabaseColumn } from "./connection_data_pb.js";
import { file_mgmt_v1alpha1_connection_data } from "./connection_data_pb.js";
import type { TransformerConfig } from "./transformer_pb.js";
import { file_mgmt_v1alpha1_transformer } from "./transformer_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mgmt/v1alpha1/job.proto.
 */
export const file_mgmt_v1alpha1_job: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_protobuf_timestamp, file_mgmt_v1alpha1_connection_data, file_mgmt_v1alpha1_transformer]);

/**
 * @generated from message mgmt.v1alpha1.GetJobsRequest
 */
export type GetJobsRequest = Message<"mgmt.v1alpha1.GetJobsRequest"> & {
  /**
   * The unique identifier of the account to get jobs for
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobsRequest.
 * Use `create(GetJobsRequestSchema)` to create a new message.
 */
export const GetJobsRequestSchema: GenMessage<GetJobsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 0);

/**
 * @generated from message mgmt.v1alpha1.GetJobsResponse
 */
export type GetJobsResponse = Message<"mgmt.v1alpha1.GetJobsResponse"> & {
  /**
   * The list of jobs
   *
   * @generated from field: repeated mgmt.v1alpha1.Job jobs = 1;
   */
  jobs: Job[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobsResponse.
 * Use `create(GetJobsResponseSchema)` to create a new message.
 */
export const GetJobsResponseSchema: GenMessage<GetJobsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 1);

/**
 * @generated from message mgmt.v1alpha1.JobSource
 */
export type JobSource = Message<"mgmt.v1alpha1.JobSource"> & {
  /**
   * The source options to use for the job
   *
   * @generated from field: mgmt.v1alpha1.JobSourceOptions options = 1;
   */
  options?: JobSourceOptions;
};

/**
 * Describes the message mgmt.v1alpha1.JobSource.
 * Use `create(JobSourceSchema)` to create a new message.
 */
export const JobSourceSchema: GenMessage<JobSource> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 2);

/**
 * @generated from message mgmt.v1alpha1.JobSourceOptions
 */
export type JobSourceOptions = Message<"mgmt.v1alpha1.JobSourceOptions"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobSourceOptions.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions postgres = 1;
     */
    value: PostgresSourceConnectionOptions;
    case: "postgres";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.AwsS3SourceConnectionOptions aws_s3 = 2;
     */
    value: AwsS3SourceConnectionOptions;
    case: "awsS3";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions mysql = 3;
     */
    value: MysqlSourceConnectionOptions;
    case: "mysql";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.GenerateSourceOptions generate = 4;
     */
    value: GenerateSourceOptions;
    case: "generate";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.AiGenerateSourceOptions ai_generate = 5;
     */
    value: AiGenerateSourceOptions;
    case: "aiGenerate";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.MongoDBSourceConnectionOptions mongodb = 6;
     */
    value: MongoDBSourceConnectionOptions;
    case: "mongodb";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.DynamoDBSourceConnectionOptions dynamodb = 7;
     */
    value: DynamoDBSourceConnectionOptions;
    case: "dynamodb";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions mssql = 8;
     */
    value: MssqlSourceConnectionOptions;
    case: "mssql";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobSourceOptions.
 * Use `create(JobSourceOptionsSchema)` to create a new message.
 */
export const JobSourceOptionsSchema: GenMessage<JobSourceOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 3);

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestination
 */
export type CreateJobDestination = Message<"mgmt.v1alpha1.CreateJobDestination"> & {
  /**
   * The connection id to use for the job destination
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * The destination options to use for the job destination
   *
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 2;
   */
  options?: JobDestinationOptions;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobDestination.
 * Use `create(CreateJobDestinationSchema)` to create a new message.
 */
export const CreateJobDestinationSchema: GenMessage<CreateJobDestination> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 4);

/**
 * @generated from message mgmt.v1alpha1.JobDestination
 */
export type JobDestination = Message<"mgmt.v1alpha1.JobDestination"> & {
  /**
   * The connection id to use for the job destination
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * The destination options to use for the job destination
   *
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 2;
   */
  options?: JobDestinationOptions;

  /**
   * The unique identifier of the job destination
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message mgmt.v1alpha1.JobDestination.
 * Use `create(JobDestinationSchema)` to create a new message.
 */
export const JobDestinationSchema: GenMessage<JobDestination> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 5);

/**
 * @generated from message mgmt.v1alpha1.AiGenerateSourceOptions
 */
export type AiGenerateSourceOptions = Message<"mgmt.v1alpha1.AiGenerateSourceOptions"> & {
  /**
   * The connection id that corresponds with an AI-based Neosync connection
   *
   * @generated from field: string ai_connection_id = 1;
   */
  aiConnectionId: string;

  /**
   * The list of schemas (and their tables) along with any configuration options that will be used to generate data for.
   *
   * @generated from field: repeated mgmt.v1alpha1.AiGenerateSourceSchemaOption schemas = 2;
   */
  schemas: AiGenerateSourceSchemaOption[];

  /**
   * An optional connection id that will be used as the basis for the shape of data to be generated.
   *
   * @generated from field: optional string fk_source_connection_id = 3;
   */
  fkSourceConnectionId?: string;

  /**
   * The name of the model to use
   *
   * @generated from field: string model_name = 4;
   */
  modelName: string;

  /**
   * Optionally provide a user prompt to give more context to the schema
   *
   * @generated from field: optional string user_prompt = 5;
   */
  userPrompt?: string;

  /**
   * The batch size that will be used to generate X number of records. This is global and will be applied to all tables configured.
   *
   * @generated from field: optional int64 generate_batch_size = 6;
   */
  generateBatchSize?: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.AiGenerateSourceOptions.
 * Use `create(AiGenerateSourceOptionsSchema)` to create a new message.
 */
export const AiGenerateSourceOptionsSchema: GenMessage<AiGenerateSourceOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 6);

/**
 * @generated from message mgmt.v1alpha1.AiGenerateSourceSchemaOption
 */
export type AiGenerateSourceSchemaOption = Message<"mgmt.v1alpha1.AiGenerateSourceSchemaOption"> & {
  /**
   * The dataabase schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The list of tables (and their configuration) that reside within the schema to receive generated data
   *
   * @generated from field: repeated mgmt.v1alpha1.AiGenerateSourceTableOption tables = 2;
   */
  tables: AiGenerateSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.AiGenerateSourceSchemaOption.
 * Use `create(AiGenerateSourceSchemaOptionSchema)` to create a new message.
 */
export const AiGenerateSourceSchemaOptionSchema: GenMessage<AiGenerateSourceSchemaOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 7);

/**
 * @generated from message mgmt.v1alpha1.AiGenerateSourceTableOption
 */
export type AiGenerateSourceTableOption = Message<"mgmt.v1alpha1.AiGenerateSourceTableOption"> & {
  /**
   * The table that will be used to generate data for
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * The total number of records to be generated.
   *
   * @generated from field: int64 row_count = 2;
   */
  rowCount: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.AiGenerateSourceTableOption.
 * Use `create(AiGenerateSourceTableOptionSchema)` to create a new message.
 */
export const AiGenerateSourceTableOptionSchema: GenMessage<AiGenerateSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 8);

/**
 * @generated from message mgmt.v1alpha1.GenerateSourceOptions
 */
export type GenerateSourceOptions = Message<"mgmt.v1alpha1.GenerateSourceOptions"> & {
  /**
   * The list of schemas (and their tables) along with any configuration options that will be used to generate data for.
   *
   * @generated from field: repeated mgmt.v1alpha1.GenerateSourceSchemaOption schemas = 1;
   */
  schemas: GenerateSourceSchemaOption[];

  /**
   * An optional connection id that will be used as the basis for the shape of data to be generated.
   *
   * @generated from field: optional string fk_source_connection_id = 3;
   */
  fkSourceConnectionId?: string;
};

/**
 * Describes the message mgmt.v1alpha1.GenerateSourceOptions.
 * Use `create(GenerateSourceOptionsSchema)` to create a new message.
 */
export const GenerateSourceOptionsSchema: GenMessage<GenerateSourceOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 9);

/**
 * @generated from message mgmt.v1alpha1.GenerateSourceSchemaOption
 */
export type GenerateSourceSchemaOption = Message<"mgmt.v1alpha1.GenerateSourceSchemaOption"> & {
  /**
   * The database schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The list of tables (and their configuration) that reside within the schema to receive generated data
   *
   * @generated from field: repeated mgmt.v1alpha1.GenerateSourceTableOption tables = 2;
   */
  tables: GenerateSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.GenerateSourceSchemaOption.
 * Use `create(GenerateSourceSchemaOptionSchema)` to create a new message.
 */
export const GenerateSourceSchemaOptionSchema: GenMessage<GenerateSourceSchemaOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 10);

/**
 * @generated from message mgmt.v1alpha1.GenerateSourceTableOption
 */
export type GenerateSourceTableOption = Message<"mgmt.v1alpha1.GenerateSourceTableOption"> & {
  /**
   * The table that will be used to generate data for.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * The total number of records to be generated.
   *
   * @generated from field: int64 row_count = 2;
   */
  rowCount: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.GenerateSourceTableOption.
 * Use `create(GenerateSourceTableOptionSchema)` to create a new message.
 */
export const GenerateSourceTableOptionSchema: GenMessage<GenerateSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 11);

/**
 * MongoDB connection options for a job source
 *
 * @generated from message mgmt.v1alpha1.MongoDBSourceConnectionOptions
 */
export type MongoDBSourceConnectionOptions = Message<"mgmt.v1alpha1.MongoDBSourceConnectionOptions"> & {
  /**
   * The unique connection id to a mongo connection configuration
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;
};

/**
 * Describes the message mgmt.v1alpha1.MongoDBSourceConnectionOptions.
 * Use `create(MongoDBSourceConnectionOptionsSchema)` to create a new message.
 */
export const MongoDBSourceConnectionOptionsSchema: GenMessage<MongoDBSourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 12);

/**
 * DynamoDB connection options for a job source
 *
 * @generated from message mgmt.v1alpha1.DynamoDBSourceConnectionOptions
 */
export type DynamoDBSourceConnectionOptions = Message<"mgmt.v1alpha1.DynamoDBSourceConnectionOptions"> & {
  /**
   * The unique connection id to a dynamodb connection configuration
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * List of table option configurations for any mapped source table.
   * Any table listed in this must also be present as a job mapping table to be applied.
   *
   * @generated from field: repeated mgmt.v1alpha1.DynamoDBSourceTableOption tables = 2;
   */
  tables: DynamoDBSourceTableOption[];

  /**
   * Default transformations for any unmapped keys
   *
   * @generated from field: mgmt.v1alpha1.DynamoDBSourceUnmappedTransformConfig unmapped_transforms = 3;
   */
  unmappedTransforms?: DynamoDBSourceUnmappedTransformConfig;

  /**
   * Enforces strong read consistency
   * False: Eventually Consistent Reads, True: Strongly Consistent Reads
   * https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html
   *
   * @generated from field: bool enable_consistent_read = 4;
   */
  enableConsistentRead: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBSourceConnectionOptions.
 * Use `create(DynamoDBSourceConnectionOptionsSchema)` to create a new message.
 */
export const DynamoDBSourceConnectionOptionsSchema: GenMessage<DynamoDBSourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 13);

/**
 * @generated from message mgmt.v1alpha1.DynamoDBSourceUnmappedTransformConfig
 */
export type DynamoDBSourceUnmappedTransformConfig = Message<"mgmt.v1alpha1.DynamoDBSourceUnmappedTransformConfig"> & {
  /**
   * Byte
   *
   * @generated from field: mgmt.v1alpha1.JobMappingTransformer b = 1;
   */
  b?: JobMappingTransformer;

  /**
   * Boolean
   *
   * @generated from field: mgmt.v1alpha1.JobMappingTransformer boolean = 2;
   */
  boolean?: JobMappingTransformer;

  /**
   * Number
   *
   * @generated from field: mgmt.v1alpha1.JobMappingTransformer n = 4;
   */
  n?: JobMappingTransformer;

  /**
   * String
   *
   * @generated from field: mgmt.v1alpha1.JobMappingTransformer s = 6;
   */
  s?: JobMappingTransformer;
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBSourceUnmappedTransformConfig.
 * Use `create(DynamoDBSourceUnmappedTransformConfigSchema)` to create a new message.
 */
export const DynamoDBSourceUnmappedTransformConfigSchema: GenMessage<DynamoDBSourceUnmappedTransformConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 14);

/**
 * @generated from message mgmt.v1alpha1.DynamoDBSourceTableOption
 */
export type DynamoDBSourceTableOption = Message<"mgmt.v1alpha1.DynamoDBSourceTableOption"> & {
  /**
   * The table that this configuration will be applied to
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * An optional PartiQL query that may be used for subsetting the DynamoDB table.
   * This is not a parameterized query and must be valid. Intended to be everything after the WHERE keyword.
   *
   * @generated from field: optional string where_clause = 2;
   */
  whereClause?: string;
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBSourceTableOption.
 * Use `create(DynamoDBSourceTableOptionSchema)` to create a new message.
 */
export const DynamoDBSourceTableOptionSchema: GenMessage<DynamoDBSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 15);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions
 */
export type PostgresSourceConnectionOptions = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions"> & {
  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.PostgresSourceSchemaOption schemas = 2;
   */
  schemas: PostgresSourceSchemaOption[];

  /**
   * The unique connection id to a postgres connection configuration
   *
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;

  /**
   * Whether to subset the table by foreign key constraints
   *
   * @generated from field: bool subset_by_foreign_key_constraints = 4;
   */
  subsetByForeignKeyConstraints: boolean;

  /**
   * Provide a strategy of what to do in the event Neosync encounters an unmapped column for the job's mapped tables.
   *
   * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy new_column_addition_strategy = 5;
   */
  newColumnAdditionStrategy?: PostgresSourceConnectionOptions_NewColumnAdditionStrategy;

  /**
   * Provide a strategy of what to do in the event Neosync encounters a column that is removed from the source table.
   *
   * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy column_removal_strategy = 6;
   */
  columnRemovalStrategy?: PostgresSourceConnectionOptions_ColumnRemovalStrategy;
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.
 * Use `create(PostgresSourceConnectionOptionsSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptionsSchema: GenMessage<PostgresSourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy
 */
export type PostgresSourceConnectionOptions_NewColumnAdditionStrategy = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a new column is detected.
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob halt_job = 1;
     */
    value: PostgresSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * automatically handle unmapped columns. It handles this by using the DBs default/nullable values.
     * If this doesn't exist, will fall back to configuring generators for supported datatypes.
     * If none of the criteria above can be met, the job run will fail to prevent leaking of PII.
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap auto_map = 2;
     */
    value: PostgresSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap;
    case: "autoMap";
  } | {
    /**
     * pass the new column through as is.
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough passthrough = 3;
     */
    value: PostgresSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough;
    case: "passthrough";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.
 * Use `create(PostgresSourceConnectionOptions_NewColumnAdditionStrategySchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_NewColumnAdditionStrategySchema: GenMessage<PostgresSourceConnectionOptions_NewColumnAdditionStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 0);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob
 */
export type PostgresSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob.
 * Use `create(PostgresSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema: GenMessage<PostgresSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 0, 0);

/**
 * Configuration for the AutoMap strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap
 */
export type PostgresSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap.
 * Use `create(PostgresSourceConnectionOptions_NewColumnAdditionStrategy_AutoMapSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_NewColumnAdditionStrategy_AutoMapSchema: GenMessage<PostgresSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 0, 1);

/**
 * Configuration for the Passthrough strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough
 */
export type PostgresSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough.
 * Use `create(PostgresSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema: GenMessage<PostgresSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 0, 2);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy
 */
export type PostgresSourceConnectionOptions_ColumnRemovalStrategy = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.HaltJob halt_job = 1;
     */
    value: PostgresSourceConnectionOptions_ColumnRemovalStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * continue job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob continue_job = 2;
     */
    value: PostgresSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob;
    case: "continueJob";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.
 * Use `create(PostgresSourceConnectionOptions_ColumnRemovalStrategySchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_ColumnRemovalStrategySchema: GenMessage<PostgresSourceConnectionOptions_ColumnRemovalStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 1);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.HaltJob
 */
export type PostgresSourceConnectionOptions_ColumnRemovalStrategy_HaltJob = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.HaltJob.
 * Use `create(PostgresSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema: GenMessage<PostgresSourceConnectionOptions_ColumnRemovalStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 1, 0);

/**
 * Configuration for the ContinueJob strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob
 */
export type PostgresSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob = Message<"mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob.
 * Use `create(PostgresSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema)` to create a new message.
 */
export const PostgresSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema: GenMessage<PostgresSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 16, 1, 1);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceSchemaOption
 */
export type PostgresSourceSchemaOption = Message<"mgmt.v1alpha1.PostgresSourceSchemaOption"> & {
  /**
   * The database schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The list of tables (and their configuration) that reside within the schema
   *
   * @generated from field: repeated mgmt.v1alpha1.PostgresSourceTableOption tables = 2;
   */
  tables: PostgresSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceSchemaOption.
 * Use `create(PostgresSourceSchemaOptionSchema)` to create a new message.
 */
export const PostgresSourceSchemaOptionSchema: GenMessage<PostgresSourceSchemaOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 17);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceTableOption
 */
export type PostgresSourceTableOption = Message<"mgmt.v1alpha1.PostgresSourceTableOption"> & {
  /**
   * The table that will be used subset the data for.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * This is not a parameterized query and must be valid. Intended to be everything after the WHERE keyword.
   * Is used to subset the table.
   *
   * @generated from field: optional string where_clause = 2;
   */
  whereClause?: string;
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceTableOption.
 * Use `create(PostgresSourceTableOptionSchema)` to create a new message.
 */
export const PostgresSourceTableOptionSchema: GenMessage<PostgresSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 18);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions
 */
export type MysqlSourceConnectionOptions = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions"> & {
  /**
   * Whether to halt the job if a new column is added
   * Deprecated: Use new_column_addition_strategy instead
   *
   * @generated from field: bool halt_on_new_column_addition = 1 [deprecated = true];
   * @deprecated
   */
  haltOnNewColumnAddition: boolean;

  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.MysqlSourceSchemaOption schemas = 2;
   */
  schemas: MysqlSourceSchemaOption[];

  /**
   * The unique connection id to a mysql connection configuration
   *
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;

  /**
   * Whether to subset the table by foreign key constraints
   *
   * @generated from field: bool subset_by_foreign_key_constraints = 4;
   */
  subsetByForeignKeyConstraints: boolean;

  /**
   * Provide a strategy of what to do in the event Neosync encounters a column that is removed from the source table.
   *
   * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy column_removal_strategy = 5;
   */
  columnRemovalStrategy?: MysqlSourceConnectionOptions_ColumnRemovalStrategy;

  /**
   * Provide a strategy of what to do in the event Neosync encounters an unmapped column for the job's mapped tables.
   *
   * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy new_column_addition_strategy = 6;
   */
  newColumnAdditionStrategy?: MysqlSourceConnectionOptions_NewColumnAdditionStrategy;
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.
 * Use `create(MysqlSourceConnectionOptionsSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptionsSchema: GenMessage<MysqlSourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy
 */
export type MysqlSourceConnectionOptions_ColumnRemovalStrategy = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob halt_job = 1;
     */
    value: MysqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * continue job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob continue_job = 2;
     */
    value: MysqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob;
    case: "continueJob";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.
 * Use `create(MysqlSourceConnectionOptions_ColumnRemovalStrategySchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_ColumnRemovalStrategySchema: GenMessage<MysqlSourceConnectionOptions_ColumnRemovalStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 0);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob
 */
export type MysqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob.
 * Use `create(MysqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema: GenMessage<MysqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 0, 0);

/**
 * Configuration for the ContinueJob strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob
 */
export type MysqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob.
 * Use `create(MysqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema: GenMessage<MysqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 0, 1);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy
 */
export type MysqlSourceConnectionOptions_NewColumnAdditionStrategy = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a new column is detected.
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob halt_job = 1;
     */
    value: MysqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * automatically handle unmapped columns. It handles this by using the DBs default/nullable values.
     * If this doesn't exist, will fall back to configuring generators for supported datatypes.
     * If none of the criteria above can be met, the job run will fail to prevent leaking of PII.
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap auto_map = 2;
     */
    value: MysqlSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap;
    case: "autoMap";
  } | {
    /**
     * pass the new column through as is.
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough passthrough = 3;
     */
    value: MysqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough;
    case: "passthrough";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.
 * Use `create(MysqlSourceConnectionOptions_NewColumnAdditionStrategySchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_NewColumnAdditionStrategySchema: GenMessage<MysqlSourceConnectionOptions_NewColumnAdditionStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 1);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob
 */
export type MysqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob.
 * Use `create(MysqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema: GenMessage<MysqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 1, 0);

/**
 * Configuration for the AutoMap strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap
 */
export type MysqlSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.AutoMap.
 * Use `create(MysqlSourceConnectionOptions_NewColumnAdditionStrategy_AutoMapSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_NewColumnAdditionStrategy_AutoMapSchema: GenMessage<MysqlSourceConnectionOptions_NewColumnAdditionStrategy_AutoMap> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 1, 1);

/**
 * Configuration for the Passthrough strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough
 */
export type MysqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough = Message<"mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough.
 * Use `create(MysqlSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema)` to create a new message.
 */
export const MysqlSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema: GenMessage<MysqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 19, 1, 2);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceSchemaOption
 */
export type MysqlSourceSchemaOption = Message<"mgmt.v1alpha1.MysqlSourceSchemaOption"> & {
  /**
   * The database schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The list of tables (and their configuration) that reside within the schema
   *
   * @generated from field: repeated mgmt.v1alpha1.MysqlSourceTableOption tables = 2;
   */
  tables: MysqlSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceSchemaOption.
 * Use `create(MysqlSourceSchemaOptionSchema)` to create a new message.
 */
export const MysqlSourceSchemaOptionSchema: GenMessage<MysqlSourceSchemaOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 20);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceTableOption
 */
export type MysqlSourceTableOption = Message<"mgmt.v1alpha1.MysqlSourceTableOption"> & {
  /**
   * The table that will be used to subset the data for.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * This is not a parameterized query and must be valid. Intended to be everything after the WHERE keyword.
   * Is used to subset the table.
   *
   * @generated from field: optional string where_clause = 2;
   */
  whereClause?: string;
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceTableOption.
 * Use `create(MysqlSourceTableOptionSchema)` to create a new message.
 */
export const MysqlSourceTableOptionSchema: GenMessage<MysqlSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 21);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions
 */
export type MssqlSourceConnectionOptions = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions"> & {
  /**
   * Whether to halt the job if a new column is added
   * Deprecated: Use new_column_addition_strategy instead
   *
   * @generated from field: bool halt_on_new_column_addition = 1 [deprecated = true];
   * @deprecated
   */
  haltOnNewColumnAddition: boolean;

  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.MssqlSourceSchemaOption schemas = 2;
   */
  schemas: MssqlSourceSchemaOption[];

  /**
   * The unique connection id to a mssql connection configuration
   *
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;

  /**
   * Whether to subset the table by foreign key constraints
   *
   * @generated from field: bool subset_by_foreign_key_constraints = 4;
   */
  subsetByForeignKeyConstraints: boolean;

  /**
   * Provide a strategy of what to do in the event Neosync encounters a column that is removed from the source table.
   *
   * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy column_removal_strategy = 5;
   */
  columnRemovalStrategy?: MssqlSourceConnectionOptions_ColumnRemovalStrategy;

  /**
   * Provide a strategy of what to do in the event Neosync encounters an unmapped column for the job's mapped tables.
   *
   * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy new_column_addition_strategy = 6;
   */
  newColumnAdditionStrategy?: MssqlSourceConnectionOptions_NewColumnAdditionStrategy;
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.
 * Use `create(MssqlSourceConnectionOptionsSchema)` to create a new message.
 */
export const MssqlSourceConnectionOptionsSchema: GenMessage<MssqlSourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy
 */
export type MssqlSourceConnectionOptions_ColumnRemovalStrategy = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob halt_job = 1;
     */
    value: MssqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * continue job if a column is removed
     *
     * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob continue_job = 2;
     */
    value: MssqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob;
    case: "continueJob";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.
 * Use `create(MssqlSourceConnectionOptions_ColumnRemovalStrategySchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_ColumnRemovalStrategySchema: GenMessage<MssqlSourceConnectionOptions_ColumnRemovalStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 0);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob
 */
export type MssqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.HaltJob.
 * Use `create(MssqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJobSchema: GenMessage<MssqlSourceConnectionOptions_ColumnRemovalStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 0, 0);

/**
 * Configuration for the ContinueJob strategy
 *
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob
 */
export type MssqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.ColumnRemovalStrategy.ContinueJob.
 * Use `create(MssqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJobSchema: GenMessage<MssqlSourceConnectionOptions_ColumnRemovalStrategy_ContinueJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 0, 1);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy
 */
export type MssqlSourceConnectionOptions_NewColumnAdditionStrategy = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.strategy
   */
  strategy: {
    /**
     * halt job if a new column is detected.
     *
     * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob halt_job = 1;
     */
    value: MssqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob;
    case: "haltJob";
  } | {
    /**
     * pass the new column through as is.
     *
     * @generated from field: mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough passthrough = 2;
     */
    value: MssqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough;
    case: "passthrough";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.
 * Use `create(MssqlSourceConnectionOptions_NewColumnAdditionStrategySchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_NewColumnAdditionStrategySchema: GenMessage<MssqlSourceConnectionOptions_NewColumnAdditionStrategy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 1);

/**
 * Configuration for the HaltJob strategy
 *
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob
 */
export type MssqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.HaltJob.
 * Use `create(MssqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJobSchema: GenMessage<MssqlSourceConnectionOptions_NewColumnAdditionStrategy_HaltJob> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 1, 0);

/**
 * Configuration for the Passthrough strategy
 *
 * @generated from message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough
 */
export type MssqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough = Message<"mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceConnectionOptions.NewColumnAdditionStrategy.Passthrough.
 * Use `create(MssqlSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema)` to create a new message.
 */
export const MssqlSourceConnectionOptions_NewColumnAdditionStrategy_PassthroughSchema: GenMessage<MssqlSourceConnectionOptions_NewColumnAdditionStrategy_Passthrough> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 22, 1, 1);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceSchemaOption
 */
export type MssqlSourceSchemaOption = Message<"mgmt.v1alpha1.MssqlSourceSchemaOption"> & {
  /**
   * The database schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The list of tables (and their configuration) that reside within the schema
   *
   * @generated from field: repeated mgmt.v1alpha1.MssqlSourceTableOption tables = 2;
   */
  tables: MssqlSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceSchemaOption.
 * Use `create(MssqlSourceSchemaOptionSchema)` to create a new message.
 */
export const MssqlSourceSchemaOptionSchema: GenMessage<MssqlSourceSchemaOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 23);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceTableOption
 */
export type MssqlSourceTableOption = Message<"mgmt.v1alpha1.MssqlSourceTableOption"> & {
  /**
   * The table that will be used to subset the data for.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * This is not a parameterized query and must be valid. Intended to be everything after the WHERE keyword.
   * Is used to subset the table.
   *
   * @generated from field: optional string where_clause = 2;
   */
  whereClause?: string;
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceTableOption.
 * Use `create(MssqlSourceTableOptionSchema)` to create a new message.
 */
export const MssqlSourceTableOptionSchema: GenMessage<MssqlSourceTableOption> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 24);

/**
 * @generated from message mgmt.v1alpha1.AwsS3SourceConnectionOptions
 */
export type AwsS3SourceConnectionOptions = Message<"mgmt.v1alpha1.AwsS3SourceConnectionOptions"> & {
  /**
   * The unique connection id to a aws s3 connection configuration
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;
};

/**
 * Describes the message mgmt.v1alpha1.AwsS3SourceConnectionOptions.
 * Use `create(AwsS3SourceConnectionOptionsSchema)` to create a new message.
 */
export const AwsS3SourceConnectionOptionsSchema: GenMessage<AwsS3SourceConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 25);

/**
 * @generated from message mgmt.v1alpha1.JobDestinationOptions
 */
export type JobDestinationOptions = Message<"mgmt.v1alpha1.JobDestinationOptions"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobDestinationOptions.config
   */
  config: {
    /**
     * @generated from field: mgmt.v1alpha1.PostgresDestinationConnectionOptions postgres_options = 1;
     */
    value: PostgresDestinationConnectionOptions;
    case: "postgresOptions";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.AwsS3DestinationConnectionOptions aws_s3_options = 2;
     */
    value: AwsS3DestinationConnectionOptions;
    case: "awsS3Options";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.MysqlDestinationConnectionOptions mysql_options = 3;
     */
    value: MysqlDestinationConnectionOptions;
    case: "mysqlOptions";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.MongoDBDestinationConnectionOptions mongodb_options = 4;
     */
    value: MongoDBDestinationConnectionOptions;
    case: "mongodbOptions";
  } | {
    /**
     * Destination Connecton options for Google Cloud Storage
     *
     * @generated from field: mgmt.v1alpha1.GcpCloudStorageDestinationConnectionOptions gcp_cloudstorage_options = 5;
     */
    value: GcpCloudStorageDestinationConnectionOptions;
    case: "gcpCloudstorageOptions";
  } | {
    /**
     * Destination Connection options for DynamoDB
     *
     * @generated from field: mgmt.v1alpha1.DynamoDBDestinationConnectionOptions dynamodb_options = 6;
     */
    value: DynamoDBDestinationConnectionOptions;
    case: "dynamodbOptions";
  } | {
    /**
     * Destination Connection options for Microsoft SQL Server
     *
     * @generated from field: mgmt.v1alpha1.MssqlDestinationConnectionOptions mssql_options = 7;
     */
    value: MssqlDestinationConnectionOptions;
    case: "mssqlOptions";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobDestinationOptions.
 * Use `create(JobDestinationOptionsSchema)` to create a new message.
 */
export const JobDestinationOptionsSchema: GenMessage<JobDestinationOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 26);

/**
 * @generated from message mgmt.v1alpha1.MongoDBDestinationConnectionOptions
 */
export type MongoDBDestinationConnectionOptions = Message<"mgmt.v1alpha1.MongoDBDestinationConnectionOptions"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MongoDBDestinationConnectionOptions.
 * Use `create(MongoDBDestinationConnectionOptionsSchema)` to create a new message.
 */
export const MongoDBDestinationConnectionOptionsSchema: GenMessage<MongoDBDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 27);

/**
 * Configuration for Google Cloud Storage Destination Connection Job Options
 *
 * @generated from message mgmt.v1alpha1.GcpCloudStorageDestinationConnectionOptions
 */
export type GcpCloudStorageDestinationConnectionOptions = Message<"mgmt.v1alpha1.GcpCloudStorageDestinationConnectionOptions"> & {
};

/**
 * Describes the message mgmt.v1alpha1.GcpCloudStorageDestinationConnectionOptions.
 * Use `create(GcpCloudStorageDestinationConnectionOptionsSchema)` to create a new message.
 */
export const GcpCloudStorageDestinationConnectionOptionsSchema: GenMessage<GcpCloudStorageDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 28);

/**
 * Configuration for DynamoDB Destination Connection Job Options
 *
 * @generated from message mgmt.v1alpha1.DynamoDBDestinationConnectionOptions
 */
export type DynamoDBDestinationConnectionOptions = Message<"mgmt.v1alpha1.DynamoDBDestinationConnectionOptions"> & {
  /**
   * List of table mappings when piping data from a dynamoDB table to another dynamoDB table
   *
   * @generated from field: repeated mgmt.v1alpha1.DynamoDBDestinationTableMapping table_mappings = 1;
   */
  tableMappings: DynamoDBDestinationTableMapping[];
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBDestinationConnectionOptions.
 * Use `create(DynamoDBDestinationConnectionOptionsSchema)` to create a new message.
 */
export const DynamoDBDestinationConnectionOptionsSchema: GenMessage<DynamoDBDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 29);

/**
 * Configuration for mapping a source table to a destination table for DynamoDB
 *
 * @generated from message mgmt.v1alpha1.DynamoDBDestinationTableMapping
 */
export type DynamoDBDestinationTableMapping = Message<"mgmt.v1alpha1.DynamoDBDestinationTableMapping"> & {
  /**
   * The name of the incoming source table
   *
   * @generated from field: string source_table = 1;
   */
  sourceTable: string;

  /**
   * The name of the outgoing destination table
   *
   * @generated from field: string destination_table = 2;
   */
  destinationTable: string;
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBDestinationTableMapping.
 * Use `create(DynamoDBDestinationTableMappingSchema)` to create a new message.
 */
export const DynamoDBDestinationTableMappingSchema: GenMessage<DynamoDBDestinationTableMapping> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 30);

/**
 * @generated from message mgmt.v1alpha1.PostgresDestinationConnectionOptions
 */
export type PostgresDestinationConnectionOptions = Message<"mgmt.v1alpha1.PostgresDestinationConnectionOptions"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: mgmt.v1alpha1.PostgresTruncateTableConfig truncate_table = 1;
   */
  truncateTable?: PostgresTruncateTableConfig;

  /**
   * Whether to initialize the table schema before inserting data
   *
   * @generated from field: bool init_table_schema = 2;
   */
  initTableSchema: boolean;

  /**
   * The configuration for handling conflicts when inserting data
   *
   * @generated from field: mgmt.v1alpha1.PostgresOnConflictConfig on_conflict = 3;
   */
  onConflict?: PostgresOnConflictConfig;

  /**
   * Whether to skip records that violate foreign key constraints
   *
   * @generated from field: bool skip_foreign_key_violations = 4;
   */
  skipForeignKeyViolations: boolean;

  /**
   * Configure batching options to handle how much data is sent to your database at once.
   *
   * @generated from field: mgmt.v1alpha1.BatchConfig batch = 5;
   */
  batch?: BatchConfig;

  /**
   * Determines the maximum number of parallel batched inserts.
   *
   * @generated from field: optional uint32 max_in_flight = 6;
   */
  maxInFlight?: number;
};

/**
 * Describes the message mgmt.v1alpha1.PostgresDestinationConnectionOptions.
 * Use `create(PostgresDestinationConnectionOptionsSchema)` to create a new message.
 */
export const PostgresDestinationConnectionOptionsSchema: GenMessage<PostgresDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 31);

/**
 * @generated from message mgmt.v1alpha1.PostgresOnConflictConfig
 */
export type PostgresOnConflictConfig = Message<"mgmt.v1alpha1.PostgresOnConflictConfig"> & {
  /**
   * @deprecated - Use strategy nothing instead
   *
   * @generated from field: bool do_nothing = 1 [deprecated = true];
   * @deprecated
   */
  doNothing: boolean;

  /**
   * @generated from oneof mgmt.v1alpha1.PostgresOnConflictConfig.strategy
   */
  strategy: {
    /**
     * Do nothing when a conflict occurs
     *
     * @generated from field: mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictDoNothing nothing = 2;
     */
    value: PostgresOnConflictConfig_PostgresOnConflictDoNothing;
    case: "nothing";
  } | {
    /**
     * Update columns when a conflict occurs
     *
     * @generated from field: mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictUpdate update = 3;
     */
    value: PostgresOnConflictConfig_PostgresOnConflictUpdate;
    case: "update";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.PostgresOnConflictConfig.
 * Use `create(PostgresOnConflictConfigSchema)` to create a new message.
 */
export const PostgresOnConflictConfigSchema: GenMessage<PostgresOnConflictConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 32);

/**
 * Do nothing strategy
 *
 * @generated from message mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictDoNothing
 */
export type PostgresOnConflictConfig_PostgresOnConflictDoNothing = Message<"mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictDoNothing"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictDoNothing.
 * Use `create(PostgresOnConflictConfig_PostgresOnConflictDoNothingSchema)` to create a new message.
 */
export const PostgresOnConflictConfig_PostgresOnConflictDoNothingSchema: GenMessage<PostgresOnConflictConfig_PostgresOnConflictDoNothing> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 32, 0);

/**
 * Update strategy
 *
 * // List of table-specific update configurations
 * repeated PostgresOnConflictSchemaUpdate schemas = 1;
 *
 * @generated from message mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictUpdate
 */
export type PostgresOnConflictConfig_PostgresOnConflictUpdate = Message<"mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictUpdate"> & {
};

/**
 * Describes the message mgmt.v1alpha1.PostgresOnConflictConfig.PostgresOnConflictUpdate.
 * Use `create(PostgresOnConflictConfig_PostgresOnConflictUpdateSchema)` to create a new message.
 */
export const PostgresOnConflictConfig_PostgresOnConflictUpdateSchema: GenMessage<PostgresOnConflictConfig_PostgresOnConflictUpdate> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 32, 1);

/**
 * @generated from message mgmt.v1alpha1.PostgresTruncateTableConfig
 */
export type PostgresTruncateTableConfig = Message<"mgmt.v1alpha1.PostgresTruncateTableConfig"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: bool truncate_before_insert = 1;
   */
  truncateBeforeInsert: boolean;

  /**
   * Whether to cascade the truncate to child tables
   *
   * @generated from field: bool cascade = 2;
   */
  cascade: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.PostgresTruncateTableConfig.
 * Use `create(PostgresTruncateTableConfigSchema)` to create a new message.
 */
export const PostgresTruncateTableConfigSchema: GenMessage<PostgresTruncateTableConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 33);

/**
 * @generated from message mgmt.v1alpha1.MysqlDestinationConnectionOptions
 */
export type MysqlDestinationConnectionOptions = Message<"mgmt.v1alpha1.MysqlDestinationConnectionOptions"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: mgmt.v1alpha1.MysqlTruncateTableConfig truncate_table = 1;
   */
  truncateTable?: MysqlTruncateTableConfig;

  /**
   * Whether to initialize the table schema before inserting data
   *
   * @generated from field: bool init_table_schema = 2;
   */
  initTableSchema: boolean;

  /**
   * The configuration for handling conflicts when inserting data
   *
   * @generated from field: mgmt.v1alpha1.MysqlOnConflictConfig on_conflict = 3;
   */
  onConflict?: MysqlOnConflictConfig;

  /**
   * Insert all valid records, skipping any that violate foreign key constraints.
   *
   * @generated from field: bool skip_foreign_key_violations = 4;
   */
  skipForeignKeyViolations: boolean;

  /**
   * Configure batching options to handle how much data is sent to your database at once.
   *
   * @generated from field: mgmt.v1alpha1.BatchConfig batch = 5;
   */
  batch?: BatchConfig;

  /**
   * Determines the maximum number of parallel batched inserts.
   *
   * @generated from field: optional uint32 max_in_flight = 6;
   */
  maxInFlight?: number;
};

/**
 * Describes the message mgmt.v1alpha1.MysqlDestinationConnectionOptions.
 * Use `create(MysqlDestinationConnectionOptionsSchema)` to create a new message.
 */
export const MysqlDestinationConnectionOptionsSchema: GenMessage<MysqlDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 34);

/**
 * @generated from message mgmt.v1alpha1.MysqlTruncateTableConfig
 */
export type MysqlTruncateTableConfig = Message<"mgmt.v1alpha1.MysqlTruncateTableConfig"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: bool truncate_before_insert = 1;
   */
  truncateBeforeInsert: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.MysqlTruncateTableConfig.
 * Use `create(MysqlTruncateTableConfigSchema)` to create a new message.
 */
export const MysqlTruncateTableConfigSchema: GenMessage<MysqlTruncateTableConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 35);

/**
 * @generated from message mgmt.v1alpha1.MysqlOnConflictConfig
 */
export type MysqlOnConflictConfig = Message<"mgmt.v1alpha1.MysqlOnConflictConfig"> & {
  /**
   * @deprecated - Use strategy nothing instead
   *
   * @generated from field: bool do_nothing = 1;
   */
  doNothing: boolean;

  /**
   * @generated from oneof mgmt.v1alpha1.MysqlOnConflictConfig.strategy
   */
  strategy: {
    /**
     * Do nothing when a conflict occurs
     *
     * @generated from field: mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictDoNothing nothing = 2;
     */
    value: MysqlOnConflictConfig_MysqlOnConflictDoNothing;
    case: "nothing";
  } | {
    /**
     * Update columns when a conflict occurs
     *
     * @generated from field: mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictUpdate update = 3;
     */
    value: MysqlOnConflictConfig_MysqlOnConflictUpdate;
    case: "update";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.MysqlOnConflictConfig.
 * Use `create(MysqlOnConflictConfigSchema)` to create a new message.
 */
export const MysqlOnConflictConfigSchema: GenMessage<MysqlOnConflictConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 36);

/**
 * Do nothing strategy
 *
 * @generated from message mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictDoNothing
 */
export type MysqlOnConflictConfig_MysqlOnConflictDoNothing = Message<"mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictDoNothing"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictDoNothing.
 * Use `create(MysqlOnConflictConfig_MysqlOnConflictDoNothingSchema)` to create a new message.
 */
export const MysqlOnConflictConfig_MysqlOnConflictDoNothingSchema: GenMessage<MysqlOnConflictConfig_MysqlOnConflictDoNothing> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 36, 0);

/**
 * Update strategy
 *
 * // List of table-specific update configurations
 * repeated MysqlOnConflictSchemaUpdate schemas = 1;
 *
 * @generated from message mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictUpdate
 */
export type MysqlOnConflictConfig_MysqlOnConflictUpdate = Message<"mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictUpdate"> & {
};

/**
 * Describes the message mgmt.v1alpha1.MysqlOnConflictConfig.MysqlOnConflictUpdate.
 * Use `create(MysqlOnConflictConfig_MysqlOnConflictUpdateSchema)` to create a new message.
 */
export const MysqlOnConflictConfig_MysqlOnConflictUpdateSchema: GenMessage<MysqlOnConflictConfig_MysqlOnConflictUpdate> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 36, 1);

/**
 * @generated from message mgmt.v1alpha1.MssqlDestinationConnectionOptions
 */
export type MssqlDestinationConnectionOptions = Message<"mgmt.v1alpha1.MssqlDestinationConnectionOptions"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: mgmt.v1alpha1.MssqlTruncateTableConfig truncate_table = 1;
   */
  truncateTable?: MssqlTruncateTableConfig;

  /**
   * Whether to initialize the table schema before inserting data
   *
   * @generated from field: bool init_table_schema = 2;
   */
  initTableSchema: boolean;

  /**
   * The configuration for handling conflicts when inserting data
   *
   * @generated from field: mgmt.v1alpha1.MssqlOnConflictConfig on_conflict = 3;
   */
  onConflict?: MssqlOnConflictConfig;

  /**
   * Insert all valid records, skipping any that violate foreign key constraints.
   *
   * @generated from field: bool skip_foreign_key_violations = 4;
   */
  skipForeignKeyViolations: boolean;

  /**
   * Configure batching options to handle how much data is sent to your database at once.
   *
   * @generated from field: mgmt.v1alpha1.BatchConfig batch = 5;
   */
  batch?: BatchConfig;

  /**
   * Determines the maximum number of parallel batched inserts.
   *
   * @generated from field: optional uint32 max_in_flight = 6;
   */
  maxInFlight?: number;
};

/**
 * Describes the message mgmt.v1alpha1.MssqlDestinationConnectionOptions.
 * Use `create(MssqlDestinationConnectionOptionsSchema)` to create a new message.
 */
export const MssqlDestinationConnectionOptionsSchema: GenMessage<MssqlDestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 37);

/**
 * @generated from message mgmt.v1alpha1.MssqlTruncateTableConfig
 */
export type MssqlTruncateTableConfig = Message<"mgmt.v1alpha1.MssqlTruncateTableConfig"> & {
  /**
   * Whether to truncate the table before inserting data
   *
   * @generated from field: bool truncate_before_insert = 1;
   */
  truncateBeforeInsert: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.MssqlTruncateTableConfig.
 * Use `create(MssqlTruncateTableConfigSchema)` to create a new message.
 */
export const MssqlTruncateTableConfigSchema: GenMessage<MssqlTruncateTableConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 38);

/**
 * @generated from message mgmt.v1alpha1.MssqlOnConflictConfig
 */
export type MssqlOnConflictConfig = Message<"mgmt.v1alpha1.MssqlOnConflictConfig"> & {
  /**
   * Whether to do nothing when a conflict occurs
   *
   * @generated from field: bool do_nothing = 1;
   */
  doNothing: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.MssqlOnConflictConfig.
 * Use `create(MssqlOnConflictConfigSchema)` to create a new message.
 */
export const MssqlOnConflictConfigSchema: GenMessage<MssqlOnConflictConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 39);

/**
 * @generated from message mgmt.v1alpha1.AwsS3DestinationConnectionOptions
 */
export type AwsS3DestinationConnectionOptions = Message<"mgmt.v1alpha1.AwsS3DestinationConnectionOptions"> & {
  /**
   * The storage class that will be used when objects are written to S3
   *
   * @generated from field: mgmt.v1alpha1.AwsS3DestinationConnectionOptions.StorageClass storage_class = 1;
   */
  storageClass: AwsS3DestinationConnectionOptions_StorageClass;

  /**
   * The maximum number of batched messages to have in flight at a given time. Increase this to improve throughput.
   *
   * @generated from field: optional uint32 max_in_flight = 2;
   */
  maxInFlight?: number;

  /**
   * The maximum period (duration string) to wait on an upload before abandoning it and reattempting.
   *
   * @generated from field: optional string timeout = 3;
   */
  timeout?: string;

  /**
   * Configure batching options to more efficiently store records in S3
   *
   * @generated from field: mgmt.v1alpha1.BatchConfig batch = 4;
   */
  batch?: BatchConfig;
};

/**
 * Describes the message mgmt.v1alpha1.AwsS3DestinationConnectionOptions.
 * Use `create(AwsS3DestinationConnectionOptionsSchema)` to create a new message.
 */
export const AwsS3DestinationConnectionOptionsSchema: GenMessage<AwsS3DestinationConnectionOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 40);

/**
 * @generated from enum mgmt.v1alpha1.AwsS3DestinationConnectionOptions.StorageClass
 */
export enum AwsS3DestinationConnectionOptions_StorageClass {
  /**
   * @generated from enum value: STORAGE_CLASS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STORAGE_CLASS_STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * @generated from enum value: STORAGE_CLASS_REDUCED_REDUNDANCY = 2;
   */
  REDUCED_REDUNDANCY = 2,

  /**
   * @generated from enum value: STORAGE_CLASS_GLACIER = 3;
   */
  GLACIER = 3,

  /**
   * @generated from enum value: STORAGE_CLASS_STANDARD_IA = 4;
   */
  STANDARD_IA = 4,

  /**
   * @generated from enum value: STORAGE_CLASS_ONEZONE_IA = 5;
   */
  ONEZONE_IA = 5,

  /**
   * @generated from enum value: STORAGE_CLASS_INTELLIGENT_TIERING = 6;
   */
  INTELLIGENT_TIERING = 6,

  /**
   * @generated from enum value: STORAGE_CLASS_DEEP_ARCHIVE = 7;
   */
  DEEP_ARCHIVE = 7,
}

/**
 * Describes the enum mgmt.v1alpha1.AwsS3DestinationConnectionOptions.StorageClass.
 */
export const AwsS3DestinationConnectionOptions_StorageClassSchema: GenEnum<AwsS3DestinationConnectionOptions_StorageClass> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 40, 0);

/**
 * @generated from message mgmt.v1alpha1.BatchConfig
 */
export type BatchConfig = Message<"mgmt.v1alpha1.BatchConfig"> & {
  /**
   * The max allowed in a batch before it is flushed. 0 to disable.
   *
   * @generated from field: optional uint32 count = 1;
   */
  count?: number;

  /**
   * A duration string in which an incomplete batch should be flushed regardless of the count.
   * Examples are 1s, 1m, 500ms
   *
   * @generated from field: optional string period = 2;
   */
  period?: string;
};

/**
 * Describes the message mgmt.v1alpha1.BatchConfig.
 * Use `create(BatchConfigSchema)` to create a new message.
 */
export const BatchConfigSchema: GenMessage<BatchConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 41);

/**
 * @generated from message mgmt.v1alpha1.CreateJobRequest
 */
export type CreateJobRequest = Message<"mgmt.v1alpha1.CreateJobRequest"> & {
  /**
   * The unique account identifier that this job will be associated with
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The unique, friendly name of the job. This is unique per account
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;

  /**
   * Optionally provide a cron schedule. Goes into effect if the job status is set to enabled
   *
   * @generated from field: optional string cron_schedule = 3;
   */
  cronSchedule?: string;

  /**
   * The list of mappings that will be used to transform the data
   *
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 4;
   */
  mappings: JobMapping[];

  /**
   * The source connection configuration
   *
   * @generated from field: mgmt.v1alpha1.JobSource source = 5;
   */
  source?: JobSource;

  /**
   * The list of destinations that will be used to store the data
   *
   * @generated from field: repeated mgmt.v1alpha1.CreateJobDestination destinations = 6;
   */
  destinations: CreateJobDestination[];

  /**
   * Initially trigger a run of this job regardless of its status or cron schedule
   *
   * @generated from field: bool initiate_job_run = 7;
   */
  initiateJobRun: boolean;

  /**
   * Specify timeouts and other workflow options for the underlying temporal workflow
   *
   * @generated from field: mgmt.v1alpha1.WorkflowOptions workflow_options = 8;
   */
  workflowOptions?: WorkflowOptions;

  /**
   * Specify timeout and retry options for data synchronization activities
   * Data sync activities are any piece of work that involves actually synchronizing data from a source to a destination
   * For the data sync and generate jobs, this will be applied per table
   *
   * @generated from field: mgmt.v1alpha1.ActivityOptions sync_options = 9;
   */
  syncOptions?: ActivityOptions;

  /**
   * The list of virtual foreign keys that will be used to further constrain the data ontop of the database defined constraints
   *
   * @generated from field: repeated mgmt.v1alpha1.VirtualForeignConstraint virtual_foreign_keys = 10;
   */
  virtualForeignKeys: VirtualForeignConstraint[];

  /**
   * The type of job to create
   *
   * @generated from field: optional mgmt.v1alpha1.JobTypeConfig job_type = 11;
   */
  jobType?: JobTypeConfig;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobRequest.
 * Use `create(CreateJobRequestSchema)` to create a new message.
 */
export const CreateJobRequestSchema: GenMessage<CreateJobRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 42);

/**
 * Specifies the job type along with any specific configuration for that job type
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig
 */
export type JobTypeConfig = Message<"mgmt.v1alpha1.JobTypeConfig"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobTypeConfig.job_type
   */
  jobType: {
    /**
     * This is the default if no job type is specified
     *
     * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypeSync sync = 1;
     */
    value: JobTypeConfig_JobTypeSync;
    case: "sync";
  } | {
    /**
     * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect pii_detect = 2;
     */
    value: JobTypeConfig_JobTypePiiDetect;
    case: "piiDetect";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.
 * Use `create(JobTypeConfigSchema)` to create a new message.
 */
export const JobTypeConfigSchema: GenMessage<JobTypeConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43);

/**
 * The configuration for a data sync job
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypeSync
 */
export type JobTypeConfig_JobTypeSync = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypeSync"> & {
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypeSync.
 * Use `create(JobTypeConfig_JobTypeSyncSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypeSyncSchema: GenMessage<JobTypeConfig_JobTypeSync> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 0);

/**
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect
 */
export type JobTypeConfig_JobTypePiiDetect = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect"> & {
  /**
   * The configuration for data sampling
   *
   * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.DataSampling data_sampling = 1;
   */
  dataSampling?: JobTypeConfig_JobTypePiiDetect_DataSampling;

  /**
   * The configuration for filtering tables to scan
   *
   * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableScanFilter table_scan_filter = 2;
   */
  tableScanFilter?: JobTypeConfig_JobTypePiiDetect_TableScanFilter;

  /**
   * The user prompt to use for PII detection to help influence the LLM
   *
   * @generated from field: optional string user_prompt = 3;
   */
  userPrompt?: string;

  /**
   * The configuration for incremental PII detection
   *
   * @generated from field: optional mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.Incremental incremental = 4;
   */
  incremental?: JobTypeConfig_JobTypePiiDetect_Incremental;
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.
 * Use `create(JobTypeConfig_JobTypePiiDetectSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetectSchema: GenMessage<JobTypeConfig_JobTypePiiDetect> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1);

/**
 * The configuration for incremental PII detection
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.Incremental
 */
export type JobTypeConfig_JobTypePiiDetect_Incremental = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.Incremental"> & {
  /**
   * Whether to enable incremental PII detection
   *
   * @generated from field: bool is_enabled = 1;
   */
  isEnabled: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.Incremental.
 * Use `create(JobTypeConfig_JobTypePiiDetect_IncrementalSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_IncrementalSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_Incremental> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 0);

/**
 * The configuration for data sampling
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.DataSampling
 */
export type JobTypeConfig_JobTypePiiDetect_DataSampling = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.DataSampling"> & {
  /**
   * Whether to enable data sampling
   *
   * @generated from field: bool is_enabled = 1;
   */
  isEnabled: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.DataSampling.
 * Use `create(JobTypeConfig_JobTypePiiDetect_DataSamplingSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_DataSamplingSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_DataSampling> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 1);

/**
 * Filter configuration for table scanning
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableScanFilter
 */
export type JobTypeConfig_JobTypePiiDetect_TableScanFilter = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableScanFilter"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableScanFilter.mode
   */
  mode: {
    /**
     * Include all tables (default behavior)
     *
     * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.IncludeAll include_all = 1;
     */
    value: JobTypeConfig_JobTypePiiDetect_IncludeAll;
    case: "includeAll";
  } | {
    /**
     * Only include specified tables/schemas
     *
     * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TablePatterns include = 2;
     */
    value: JobTypeConfig_JobTypePiiDetect_TablePatterns;
    case: "include";
  } | {
    /**
     * Include all except specified tables/schemas
     *
     * @generated from field: mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TablePatterns exclude = 3;
     */
    value: JobTypeConfig_JobTypePiiDetect_TablePatterns;
    case: "exclude";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableScanFilter.
 * Use `create(JobTypeConfig_JobTypePiiDetect_TableScanFilterSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_TableScanFilterSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_TableScanFilter> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 2);

/**
 * Configuration to include all tables
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.IncludeAll
 */
export type JobTypeConfig_JobTypePiiDetect_IncludeAll = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.IncludeAll"> & {
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.IncludeAll.
 * Use `create(JobTypeConfig_JobTypePiiDetect_IncludeAllSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_IncludeAllSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_IncludeAll> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 3);

/**
 * Patterns for matching tables and schemas
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TablePatterns
 */
export type JobTypeConfig_JobTypePiiDetect_TablePatterns = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TablePatterns"> & {
  /**
   * Match entire schemas
   *
   * @generated from field: repeated string schemas = 1;
   */
  schemas: string[];

  /**
   * Match specific tables within schemas
   *
   * @generated from field: repeated mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableIdentifier tables = 2;
   */
  tables: JobTypeConfig_JobTypePiiDetect_TableIdentifier[];
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TablePatterns.
 * Use `create(JobTypeConfig_JobTypePiiDetect_TablePatternsSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_TablePatternsSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_TablePatterns> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 4);

/**
 * Identifier for a specific table
 *
 * @generated from message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableIdentifier
 */
export type JobTypeConfig_JobTypePiiDetect_TableIdentifier = Message<"mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableIdentifier"> & {
  /**
   * The schema name
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table name
   *
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message mgmt.v1alpha1.JobTypeConfig.JobTypePiiDetect.TableIdentifier.
 * Use `create(JobTypeConfig_JobTypePiiDetect_TableIdentifierSchema)` to create a new message.
 */
export const JobTypeConfig_JobTypePiiDetect_TableIdentifierSchema: GenMessage<JobTypeConfig_JobTypePiiDetect_TableIdentifier> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 43, 1, 5);

/**
 * Config that contains various timeouts that are configured in the underlying temporal workflow
 * More options will come in the future as needed
 *
 * @generated from message mgmt.v1alpha1.WorkflowOptions
 */
export type WorkflowOptions = Message<"mgmt.v1alpha1.WorkflowOptions"> & {
  /**
   * The timeout for a single workflow run.
   * Measured in seconds
   *
   * @generated from field: optional int64 run_timeout = 8;
   */
  runTimeout?: bigint;
};

/**
 * Describes the message mgmt.v1alpha1.WorkflowOptions.
 * Use `create(WorkflowOptionsSchema)` to create a new message.
 */
export const WorkflowOptionsSchema: GenMessage<WorkflowOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 44);

/**
 * Config that contains various timeouts that are configured in the underlying temporal workflow(s) and activities
 *
 * @generated from message mgmt.v1alpha1.ActivityOptions
 */
export type ActivityOptions = Message<"mgmt.v1alpha1.ActivityOptions"> & {
  /**
   * Total time that a workflow is willing to wait for an activity to complete, including retries.
   * Measured in seconds
   *
   * @generated from field: optional int64 schedule_to_close_timeout = 1;
   */
  scheduleToCloseTimeout?: bigint;

  /**
   * Max time of a single Temporal Activity execution attempt.
   * This timeout should be as short as the longest psosible execution of any activity (e.g. table sync).
   * Important to know that this is per retry attempt. Defaults to the schedule to close timeout if not provided.
   * Measured in seconds
   *
   * @generated from field: optional int64 start_to_close_timeout = 2;
   */
  startToCloseTimeout?: bigint;

  /**
   * Optionally define a retry policy for the activity
   * If max attempts is not set, the activity will retry indefinitely until the start to close timeout lapses
   *
   * @generated from field: mgmt.v1alpha1.RetryPolicy retry_policy = 3;
   */
  retryPolicy?: RetryPolicy;
};

/**
 * Describes the message mgmt.v1alpha1.ActivityOptions.
 * Use `create(ActivityOptionsSchema)` to create a new message.
 */
export const ActivityOptionsSchema: GenMessage<ActivityOptions> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 45);

/**
 * Defines the retry policy for an activity
 *
 * @generated from message mgmt.v1alpha1.RetryPolicy
 */
export type RetryPolicy = Message<"mgmt.v1alpha1.RetryPolicy"> & {
  /**
   * Maximum number of attempts. When exceeded the retries stop even if not expired yet.
   * If not set or set to 0, it means unlimited, and rely on activity ScheduleToCloseTimeout to stop.
   *
   * @generated from field: optional int32 maximum_attempts = 1;
   */
  maximumAttempts?: number;
};

/**
 * Describes the message mgmt.v1alpha1.RetryPolicy.
 * Use `create(RetryPolicySchema)` to create a new message.
 */
export const RetryPolicySchema: GenMessage<RetryPolicy> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 46);

/**
 * @generated from message mgmt.v1alpha1.CreateJobResponse
 */
export type CreateJobResponse = Message<"mgmt.v1alpha1.CreateJobResponse"> & {
  /**
   * The job that was created
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobResponse.
 * Use `create(CreateJobResponseSchema)` to create a new message.
 */
export const CreateJobResponseSchema: GenMessage<CreateJobResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 47);

/**
 * @generated from message mgmt.v1alpha1.JobMappingTransformer
 */
export type JobMappingTransformer = Message<"mgmt.v1alpha1.JobMappingTransformer"> & {
  /**
   * The transformer configuration
   *
   * @generated from field: mgmt.v1alpha1.TransformerConfig config = 3;
   */
  config?: TransformerConfig;
};

/**
 * Describes the message mgmt.v1alpha1.JobMappingTransformer.
 * Use `create(JobMappingTransformerSchema)` to create a new message.
 */
export const JobMappingTransformerSchema: GenMessage<JobMappingTransformer> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 48);

/**
 * @generated from message mgmt.v1alpha1.JobMapping
 */
export type JobMapping = Message<"mgmt.v1alpha1.JobMapping"> & {
  /**
   * The database schema
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The database table.
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The column in the configured schema.table
   *
   * @generated from field: string column = 3;
   */
  column: string;

  /**
   * The transformer configuration that will be applied to each cell in the column
   *
   * @generated from field: mgmt.v1alpha1.JobMappingTransformer transformer = 5;
   */
  transformer?: JobMappingTransformer;
};

/**
 * Describes the message mgmt.v1alpha1.JobMapping.
 * Use `create(JobMappingSchema)` to create a new message.
 */
export const JobMappingSchema: GenMessage<JobMapping> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 49);

/**
 * @generated from message mgmt.v1alpha1.GetJobRequest
 */
export type GetJobRequest = Message<"mgmt.v1alpha1.GetJobRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 50);

/**
 * @generated from message mgmt.v1alpha1.GetJobResponse
 */
export type GetJobResponse = Message<"mgmt.v1alpha1.GetJobResponse"> & {
  /**
   * The job that was retrieved
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export const GetJobResponseSchema: GenMessage<GetJobResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 51);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobScheduleRequest
 */
export type UpdateJobScheduleRequest = Message<"mgmt.v1alpha1.UpdateJobScheduleRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The new cron schedule
   *
   * @generated from field: optional string cron_schedule = 2;
   */
  cronSchedule?: string;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobScheduleRequest.
 * Use `create(UpdateJobScheduleRequestSchema)` to create a new message.
 */
export const UpdateJobScheduleRequestSchema: GenMessage<UpdateJobScheduleRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 52);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobScheduleResponse
 */
export type UpdateJobScheduleResponse = Message<"mgmt.v1alpha1.UpdateJobScheduleResponse"> & {
  /**
   * The job that was updated
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobScheduleResponse.
 * Use `create(UpdateJobScheduleResponseSchema)` to create a new message.
 */
export const UpdateJobScheduleResponseSchema: GenMessage<UpdateJobScheduleResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 53);

/**
 * @generated from message mgmt.v1alpha1.PauseJobRequest
 */
export type PauseJobRequest = Message<"mgmt.v1alpha1.PauseJobRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Whether to pause or unpause the job
   *
   * @generated from field: bool pause = 2;
   */
  pause: boolean;

  /**
   * An optional note to be associated with the pause
   *
   * @generated from field: optional string note = 3;
   */
  note?: string;
};

/**
 * Describes the message mgmt.v1alpha1.PauseJobRequest.
 * Use `create(PauseJobRequestSchema)` to create a new message.
 */
export const PauseJobRequestSchema: GenMessage<PauseJobRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 54);

/**
 * @generated from message mgmt.v1alpha1.PauseJobResponse
 */
export type PauseJobResponse = Message<"mgmt.v1alpha1.PauseJobResponse"> & {
  /**
   * The job that was updated
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.PauseJobResponse.
 * Use `create(PauseJobResponseSchema)` to create a new message.
 */
export const PauseJobResponseSchema: GenMessage<PauseJobResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 55);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobSourceConnectionRequest
 */
export type UpdateJobSourceConnectionRequest = Message<"mgmt.v1alpha1.UpdateJobSourceConnectionRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The new source connection configuration
   *
   * @generated from field: mgmt.v1alpha1.JobSource source = 2;
   */
  source?: JobSource;

  /**
   * The new list of mappings that will be used to transform the data
   *
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 3;
   */
  mappings: JobMapping[];

  /**
   * The new list of virtual foreign keys that will be used to further constrain the data ontop of the database defined constraints
   *
   * @generated from field: repeated mgmt.v1alpha1.VirtualForeignConstraint virtual_foreign_keys = 4;
   */
  virtualForeignKeys: VirtualForeignConstraint[];

  /**
   * The new job type configuration
   *
   * @generated from field: mgmt.v1alpha1.JobTypeConfig job_type = 5;
   */
  jobType?: JobTypeConfig;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobSourceConnectionRequest.
 * Use `create(UpdateJobSourceConnectionRequestSchema)` to create a new message.
 */
export const UpdateJobSourceConnectionRequestSchema: GenMessage<UpdateJobSourceConnectionRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 56);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobSourceConnectionResponse
 */
export type UpdateJobSourceConnectionResponse = Message<"mgmt.v1alpha1.UpdateJobSourceConnectionResponse"> & {
  /**
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobSourceConnectionResponse.
 * Use `create(UpdateJobSourceConnectionResponseSchema)` to create a new message.
 */
export const UpdateJobSourceConnectionResponseSchema: GenMessage<UpdateJobSourceConnectionResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 57);

/**
 * @generated from message mgmt.v1alpha1.PostgresSourceSchemaSubset
 */
export type PostgresSourceSchemaSubset = Message<"mgmt.v1alpha1.PostgresSourceSchemaSubset"> & {
  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.PostgresSourceSchemaOption postgres_schemas = 1;
   */
  postgresSchemas: PostgresSourceSchemaOption[];
};

/**
 * Describes the message mgmt.v1alpha1.PostgresSourceSchemaSubset.
 * Use `create(PostgresSourceSchemaSubsetSchema)` to create a new message.
 */
export const PostgresSourceSchemaSubsetSchema: GenMessage<PostgresSourceSchemaSubset> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 58);

/**
 * @generated from message mgmt.v1alpha1.MysqlSourceSchemaSubset
 */
export type MysqlSourceSchemaSubset = Message<"mgmt.v1alpha1.MysqlSourceSchemaSubset"> & {
  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.MysqlSourceSchemaOption mysql_schemas = 1;
   */
  mysqlSchemas: MysqlSourceSchemaOption[];
};

/**
 * Describes the message mgmt.v1alpha1.MysqlSourceSchemaSubset.
 * Use `create(MysqlSourceSchemaSubsetSchema)` to create a new message.
 */
export const MysqlSourceSchemaSubsetSchema: GenMessage<MysqlSourceSchemaSubset> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 59);

/**
 * @generated from message mgmt.v1alpha1.DynamoDBSourceSchemaSubset
 */
export type DynamoDBSourceSchemaSubset = Message<"mgmt.v1alpha1.DynamoDBSourceSchemaSubset"> & {
  /**
   * The list of tables (and their configuration) that reside within the schema
   *
   * @generated from field: repeated mgmt.v1alpha1.DynamoDBSourceTableOption tables = 1;
   */
  tables: DynamoDBSourceTableOption[];
};

/**
 * Describes the message mgmt.v1alpha1.DynamoDBSourceSchemaSubset.
 * Use `create(DynamoDBSourceSchemaSubsetSchema)` to create a new message.
 */
export const DynamoDBSourceSchemaSubsetSchema: GenMessage<DynamoDBSourceSchemaSubset> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 60);

/**
 * @generated from message mgmt.v1alpha1.MssqlSourceSchemaSubset
 */
export type MssqlSourceSchemaSubset = Message<"mgmt.v1alpha1.MssqlSourceSchemaSubset"> & {
  /**
   * The list of schemas (and their tables) along with any configuration options that will be used.
   *
   * @generated from field: repeated mgmt.v1alpha1.MssqlSourceSchemaOption mssql_schemas = 1;
   */
  mssqlSchemas: MssqlSourceSchemaOption[];
};

/**
 * Describes the message mgmt.v1alpha1.MssqlSourceSchemaSubset.
 * Use `create(MssqlSourceSchemaSubsetSchema)` to create a new message.
 */
export const MssqlSourceSchemaSubsetSchema: GenMessage<MssqlSourceSchemaSubset> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 61);

/**
 * @generated from message mgmt.v1alpha1.JobSourceSqlSubetSchemas
 */
export type JobSourceSqlSubetSchemas = Message<"mgmt.v1alpha1.JobSourceSqlSubetSchemas"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobSourceSqlSubetSchemas.schemas
   */
  schemas: {
    /**
     * The list of schemas (and their tables) along with any configuration options that will be used.
     *
     * @generated from field: mgmt.v1alpha1.PostgresSourceSchemaSubset postgres_subset = 2;
     */
    value: PostgresSourceSchemaSubset;
    case: "postgresSubset";
  } | {
    /**
     * The list of schemas (and their tables) along with any configuration options that will be used.
     *
     * @generated from field: mgmt.v1alpha1.MysqlSourceSchemaSubset mysql_subset = 3;
     */
    value: MysqlSourceSchemaSubset;
    case: "mysqlSubset";
  } | {
    /**
     * The list of tables (and their configuration) that reside within the schema
     *
     * @generated from field: mgmt.v1alpha1.DynamoDBSourceSchemaSubset dynamodb_subset = 4;
     */
    value: DynamoDBSourceSchemaSubset;
    case: "dynamodbSubset";
  } | {
    /**
     * The list of schemas (and their tables) along with any configuration options that will be used.
     *
     * @generated from field: mgmt.v1alpha1.MssqlSourceSchemaSubset mssql_subset = 5;
     */
    value: MssqlSourceSchemaSubset;
    case: "mssqlSubset";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobSourceSqlSubetSchemas.
 * Use `create(JobSourceSqlSubetSchemasSchema)` to create a new message.
 */
export const JobSourceSqlSubetSchemasSchema: GenMessage<JobSourceSqlSubetSchemas> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 62);

/**
 * @generated from message mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsRequest
 */
export type SetJobSourceSqlConnectionSubsetsRequest = Message<"mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsRequest"> & {
  /**
   * The unique identifier of the job to update subsets for
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The subset configuration
   *
   * @generated from field: mgmt.v1alpha1.JobSourceSqlSubetSchemas schemas = 2;
   */
  schemas?: JobSourceSqlSubetSchemas;

  /**
   * Whether or not to have subsets follow foreign key constraints (for connections that support it)
   *
   * @generated from field: bool subset_by_foreign_key_constraints = 3;
   */
  subsetByForeignKeyConstraints: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsRequest.
 * Use `create(SetJobSourceSqlConnectionSubsetsRequestSchema)` to create a new message.
 */
export const SetJobSourceSqlConnectionSubsetsRequestSchema: GenMessage<SetJobSourceSqlConnectionSubsetsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 63);

/**
 * @generated from message mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsResponse
 */
export type SetJobSourceSqlConnectionSubsetsResponse = Message<"mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsResponse"> & {
  /**
   * The job that was updated
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobSourceSqlConnectionSubsetsResponse.
 * Use `create(SetJobSourceSqlConnectionSubsetsResponseSchema)` to create a new message.
 */
export const SetJobSourceSqlConnectionSubsetsResponseSchema: GenMessage<SetJobSourceSqlConnectionSubsetsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 64);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobDestinationConnectionRequest
 */
export type UpdateJobDestinationConnectionRequest = Message<"mgmt.v1alpha1.UpdateJobDestinationConnectionRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The unique identifier of the connection
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;

  /**
   * The destination connection options
   *
   * @generated from field: mgmt.v1alpha1.JobDestinationOptions options = 3;
   */
  options?: JobDestinationOptions;

  /**
   * The unique identifier of the destination
   *
   * @generated from field: string destination_id = 4;
   */
  destinationId: string;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobDestinationConnectionRequest.
 * Use `create(UpdateJobDestinationConnectionRequestSchema)` to create a new message.
 */
export const UpdateJobDestinationConnectionRequestSchema: GenMessage<UpdateJobDestinationConnectionRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 65);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobDestinationConnectionResponse
 */
export type UpdateJobDestinationConnectionResponse = Message<"mgmt.v1alpha1.UpdateJobDestinationConnectionResponse"> & {
  /**
   * The job that was updated
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobDestinationConnectionResponse.
 * Use `create(UpdateJobDestinationConnectionResponseSchema)` to create a new message.
 */
export const UpdateJobDestinationConnectionResponseSchema: GenMessage<UpdateJobDestinationConnectionResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 66);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobDestinationConnectionRequest
 */
export type DeleteJobDestinationConnectionRequest = Message<"mgmt.v1alpha1.DeleteJobDestinationConnectionRequest"> & {
  /**
   * The unique identifier of the destination to delete
   *
   * @generated from field: string destination_id = 1;
   */
  destinationId: string;
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobDestinationConnectionRequest.
 * Use `create(DeleteJobDestinationConnectionRequestSchema)` to create a new message.
 */
export const DeleteJobDestinationConnectionRequestSchema: GenMessage<DeleteJobDestinationConnectionRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 67);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobDestinationConnectionResponse
 */
export type DeleteJobDestinationConnectionResponse = Message<"mgmt.v1alpha1.DeleteJobDestinationConnectionResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobDestinationConnectionResponse.
 * Use `create(DeleteJobDestinationConnectionResponseSchema)` to create a new message.
 */
export const DeleteJobDestinationConnectionResponseSchema: GenMessage<DeleteJobDestinationConnectionResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 68);

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestinationConnectionsRequest
 */
export type CreateJobDestinationConnectionsRequest = Message<"mgmt.v1alpha1.CreateJobDestinationConnectionsRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The list of destinations to create and associate with the job
   *
   * @generated from field: repeated mgmt.v1alpha1.CreateJobDestination destinations = 2;
   */
  destinations: CreateJobDestination[];
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobDestinationConnectionsRequest.
 * Use `create(CreateJobDestinationConnectionsRequestSchema)` to create a new message.
 */
export const CreateJobDestinationConnectionsRequestSchema: GenMessage<CreateJobDestinationConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 69);

/**
 * @generated from message mgmt.v1alpha1.CreateJobDestinationConnectionsResponse
 */
export type CreateJobDestinationConnectionsResponse = Message<"mgmt.v1alpha1.CreateJobDestinationConnectionsResponse"> & {
  /**
   * The job that was updated
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobDestinationConnectionsResponse.
 * Use `create(CreateJobDestinationConnectionsResponseSchema)` to create a new message.
 */
export const CreateJobDestinationConnectionsResponseSchema: GenMessage<CreateJobDestinationConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 70);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRequest
 */
export type DeleteJobRequest = Message<"mgmt.v1alpha1.DeleteJobRequest"> & {
  /**
   * The unique identifier of the job to delete
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobRequest.
 * Use `create(DeleteJobRequestSchema)` to create a new message.
 */
export const DeleteJobRequestSchema: GenMessage<DeleteJobRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 71);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobResponse
 */
export type DeleteJobResponse = Message<"mgmt.v1alpha1.DeleteJobResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobResponse.
 * Use `create(DeleteJobResponseSchema)` to create a new message.
 */
export const DeleteJobResponseSchema: GenMessage<DeleteJobResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 72);

/**
 * @generated from message mgmt.v1alpha1.IsJobNameAvailableRequest
 */
export type IsJobNameAvailableRequest = Message<"mgmt.v1alpha1.IsJobNameAvailableRequest"> & {
  /**
   * The name to check for availability
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The unique identifier of the account to check for availability
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.IsJobNameAvailableRequest.
 * Use `create(IsJobNameAvailableRequestSchema)` to create a new message.
 */
export const IsJobNameAvailableRequestSchema: GenMessage<IsJobNameAvailableRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 73);

/**
 * @generated from message mgmt.v1alpha1.IsJobNameAvailableResponse
 */
export type IsJobNameAvailableResponse = Message<"mgmt.v1alpha1.IsJobNameAvailableResponse"> & {
  /**
   * Whether the name is available
   *
   * @generated from field: bool is_available = 1;
   */
  isAvailable: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.IsJobNameAvailableResponse.
 * Use `create(IsJobNameAvailableResponseSchema)` to create a new message.
 */
export const IsJobNameAvailableResponseSchema: GenMessage<IsJobNameAvailableResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 74);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunsRequest
 */
export type GetJobRunsRequest = Message<"mgmt.v1alpha1.GetJobRunsRequest"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.GetJobRunsRequest.id
   */
  id: {
    /**
     * Retireve runs for a specific job
     *
     * @generated from field: string job_id = 1;
     */
    value: string;
    case: "jobId";
  } | {
    /**
     * Retrieve runs for all jobs in an account
     *
     * @generated from field: string account_id = 2;
     */
    value: string;
    case: "accountId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunsRequest.
 * Use `create(GetJobRunsRequestSchema)` to create a new message.
 */
export const GetJobRunsRequestSchema: GenMessage<GetJobRunsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 75);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunsResponse
 */
export type GetJobRunsResponse = Message<"mgmt.v1alpha1.GetJobRunsResponse"> & {
  /**
   * The list of job runs
   *
   * @generated from field: repeated mgmt.v1alpha1.JobRun job_runs = 1;
   */
  jobRuns: JobRun[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunsResponse.
 * Use `create(GetJobRunsResponseSchema)` to create a new message.
 */
export const GetJobRunsResponseSchema: GenMessage<GetJobRunsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 76);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunRequest
 */
export type GetJobRunRequest = Message<"mgmt.v1alpha1.GetJobRunRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunRequest.
 * Use `create(GetJobRunRequestSchema)` to create a new message.
 */
export const GetJobRunRequestSchema: GenMessage<GetJobRunRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 77);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunResponse
 */
export type GetJobRunResponse = Message<"mgmt.v1alpha1.GetJobRunResponse"> & {
  /**
   * The job run that was retrieved
   *
   * @generated from field: mgmt.v1alpha1.JobRun job_run = 1;
   */
  jobRun?: JobRun;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunResponse.
 * Use `create(GetJobRunResponseSchema)` to create a new message.
 */
export const GetJobRunResponseSchema: GenMessage<GetJobRunResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 78);

/**
 * @generated from message mgmt.v1alpha1.CreateJobRunRequest
 */
export type CreateJobRunRequest = Message<"mgmt.v1alpha1.CreateJobRunRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobRunRequest.
 * Use `create(CreateJobRunRequestSchema)` to create a new message.
 */
export const CreateJobRunRequestSchema: GenMessage<CreateJobRunRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 79);

/**
 * @generated from message mgmt.v1alpha1.CreateJobRunResponse
 */
export type CreateJobRunResponse = Message<"mgmt.v1alpha1.CreateJobRunResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobRunResponse.
 * Use `create(CreateJobRunResponseSchema)` to create a new message.
 */
export const CreateJobRunResponseSchema: GenMessage<CreateJobRunResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 80);

/**
 * @generated from message mgmt.v1alpha1.CancelJobRunRequest
 */
export type CancelJobRunRequest = Message<"mgmt.v1alpha1.CancelJobRunRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.CancelJobRunRequest.
 * Use `create(CancelJobRunRequestSchema)` to create a new message.
 */
export const CancelJobRunRequestSchema: GenMessage<CancelJobRunRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 81);

/**
 * @generated from message mgmt.v1alpha1.CancelJobRunResponse
 */
export type CancelJobRunResponse = Message<"mgmt.v1alpha1.CancelJobRunResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.CancelJobRunResponse.
 * Use `create(CancelJobRunResponseSchema)` to create a new message.
 */
export const CancelJobRunResponseSchema: GenMessage<CancelJobRunResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 82);

/**
 * @generated from message mgmt.v1alpha1.Job
 */
export type Job = Message<"mgmt.v1alpha1.Job"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string created_by_user_id = 2;
   */
  createdByUserId: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string updated_by_user_id = 4;
   */
  updatedByUserId: string;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  /**
   * The unique, friendly name of the job
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * The source connection configuration
   *
   * @generated from field: mgmt.v1alpha1.JobSource source = 7;
   */
  source?: JobSource;

  /**
   * The list of destinations that will be used to store the data
   *
   * @generated from field: repeated mgmt.v1alpha1.JobDestination destinations = 8;
   */
  destinations: JobDestination[];

  /**
   * The list of mappings that will be used to transform the data
   *
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 9;
   */
  mappings: JobMapping[];

  /**
   * The cron schedule that will be used to trigger the job
   *
   * @generated from field: optional string cron_schedule = 10;
   */
  cronSchedule?: string;

  /**
   * The account identifier that a job is associated with
   *
   * @generated from field: string account_id = 11;
   */
  accountId: string;

  /**
   * Specify timeout and retry options for data synchronization activities
   * Data sync activities are any piece of work that involves actually synchronizing data from a source to a destination
   * For the data sync and generate jobs, this will be applied per table
   *
   * @generated from field: mgmt.v1alpha1.ActivityOptions sync_options = 12;
   */
  syncOptions?: ActivityOptions;

  /**
   * Specify timeouts and other workflow options for the underlying temporal workflow
   *
   * @generated from field: mgmt.v1alpha1.WorkflowOptions workflow_options = 13;
   */
  workflowOptions?: WorkflowOptions;

  /**
   * Any virtual foreign keys that are configured as a part of this job
   *
   * @generated from field: repeated mgmt.v1alpha1.VirtualForeignConstraint virtual_foreign_keys = 14;
   */
  virtualForeignKeys: VirtualForeignConstraint[];

  /**
   * The type of job
   *
   * @generated from field: mgmt.v1alpha1.JobTypeConfig job_type = 15;
   */
  jobType?: JobTypeConfig;
};

/**
 * Describes the message mgmt.v1alpha1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 83);

/**
 * @generated from message mgmt.v1alpha1.JobRecentRun
 */
export type JobRecentRun = Message<"mgmt.v1alpha1.JobRecentRun"> & {
  /**
   * The start time of the job run
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 2;
   */
  jobRunId: string;
};

/**
 * Describes the message mgmt.v1alpha1.JobRecentRun.
 * Use `create(JobRecentRunSchema)` to create a new message.
 */
export const JobRecentRunSchema: GenMessage<JobRecentRun> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 84);

/**
 * @generated from message mgmt.v1alpha1.GetJobRecentRunsRequest
 */
export type GetJobRecentRunsRequest = Message<"mgmt.v1alpha1.GetJobRecentRunsRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRecentRunsRequest.
 * Use `create(GetJobRecentRunsRequestSchema)` to create a new message.
 */
export const GetJobRecentRunsRequestSchema: GenMessage<GetJobRecentRunsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 85);

/**
 * @generated from message mgmt.v1alpha1.GetJobRecentRunsResponse
 */
export type GetJobRecentRunsResponse = Message<"mgmt.v1alpha1.GetJobRecentRunsResponse"> & {
  /**
   * The list of recent job runs
   *
   * @generated from field: repeated mgmt.v1alpha1.JobRecentRun recent_runs = 1;
   */
  recentRuns: JobRecentRun[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRecentRunsResponse.
 * Use `create(GetJobRecentRunsResponseSchema)` to create a new message.
 */
export const GetJobRecentRunsResponseSchema: GenMessage<GetJobRecentRunsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 86);

/**
 * @generated from message mgmt.v1alpha1.JobNextRuns
 */
export type JobNextRuns = Message<"mgmt.v1alpha1.JobNextRuns"> & {
  /**
   * The list of next run times
   *
   * @generated from field: repeated google.protobuf.Timestamp next_run_times = 1;
   */
  nextRunTimes: Timestamp[];
};

/**
 * Describes the message mgmt.v1alpha1.JobNextRuns.
 * Use `create(JobNextRunsSchema)` to create a new message.
 */
export const JobNextRunsSchema: GenMessage<JobNextRuns> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 87);

/**
 * @generated from message mgmt.v1alpha1.GetJobNextRunsRequest
 */
export type GetJobNextRunsRequest = Message<"mgmt.v1alpha1.GetJobNextRunsRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobNextRunsRequest.
 * Use `create(GetJobNextRunsRequestSchema)` to create a new message.
 */
export const GetJobNextRunsRequestSchema: GenMessage<GetJobNextRunsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 88);

/**
 * @generated from message mgmt.v1alpha1.GetJobNextRunsResponse
 */
export type GetJobNextRunsResponse = Message<"mgmt.v1alpha1.GetJobNextRunsResponse"> & {
  /**
   * The list of next run times
   *
   * @generated from field: mgmt.v1alpha1.JobNextRuns next_runs = 1;
   */
  nextRuns?: JobNextRuns;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobNextRunsResponse.
 * Use `create(GetJobNextRunsResponseSchema)` to create a new message.
 */
export const GetJobNextRunsResponseSchema: GenMessage<GetJobNextRunsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 89);

/**
 * @generated from message mgmt.v1alpha1.GetJobStatusRequest
 */
export type GetJobStatusRequest = Message<"mgmt.v1alpha1.GetJobStatusRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobStatusRequest.
 * Use `create(GetJobStatusRequestSchema)` to create a new message.
 */
export const GetJobStatusRequestSchema: GenMessage<GetJobStatusRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 90);

/**
 * @generated from message mgmt.v1alpha1.GetJobStatusResponse
 */
export type GetJobStatusResponse = Message<"mgmt.v1alpha1.GetJobStatusResponse"> & {
  /**
   * The status of the job
   *
   * @generated from field: mgmt.v1alpha1.JobStatus status = 1;
   */
  status: JobStatus;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobStatusResponse.
 * Use `create(GetJobStatusResponseSchema)` to create a new message.
 */
export const GetJobStatusResponseSchema: GenMessage<GetJobStatusResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 91);

/**
 * @generated from message mgmt.v1alpha1.JobStatusRecord
 */
export type JobStatusRecord = Message<"mgmt.v1alpha1.JobStatusRecord"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The status of the job
   *
   * @generated from field: mgmt.v1alpha1.JobStatus status = 2;
   */
  status: JobStatus;
};

/**
 * Describes the message mgmt.v1alpha1.JobStatusRecord.
 * Use `create(JobStatusRecordSchema)` to create a new message.
 */
export const JobStatusRecordSchema: GenMessage<JobStatusRecord> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 92);

/**
 * @generated from message mgmt.v1alpha1.GetJobStatusesRequest
 */
export type GetJobStatusesRequest = Message<"mgmt.v1alpha1.GetJobStatusesRequest"> & {
  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobStatusesRequest.
 * Use `create(GetJobStatusesRequestSchema)` to create a new message.
 */
export const GetJobStatusesRequestSchema: GenMessage<GetJobStatusesRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 93);

/**
 * @generated from message mgmt.v1alpha1.GetJobStatusesResponse
 */
export type GetJobStatusesResponse = Message<"mgmt.v1alpha1.GetJobStatusesResponse"> & {
  /**
   * The list of job statuses
   *
   * @generated from field: repeated mgmt.v1alpha1.JobStatusRecord statuses = 1;
   */
  statuses: JobStatusRecord[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobStatusesResponse.
 * Use `create(GetJobStatusesResponseSchema)` to create a new message.
 */
export const GetJobStatusesResponseSchema: GenMessage<GetJobStatusesResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 94);

/**
 * @generated from message mgmt.v1alpha1.ActivityFailure
 */
export type ActivityFailure = Message<"mgmt.v1alpha1.ActivityFailure"> & {
  /**
   * The message of the failure
   *
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message mgmt.v1alpha1.ActivityFailure.
 * Use `create(ActivityFailureSchema)` to create a new message.
 */
export const ActivityFailureSchema: GenMessage<ActivityFailure> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 95);

/**
 * @generated from message mgmt.v1alpha1.PendingActivity
 */
export type PendingActivity = Message<"mgmt.v1alpha1.PendingActivity"> & {
  /**
   * The status of the activity
   *
   * @generated from field: mgmt.v1alpha1.ActivityStatus status = 1;
   */
  status: ActivityStatus;

  /**
   * The name of the activity
   *
   * @generated from field: string activity_name = 2;
   */
  activityName: string;

  /**
   * The last failure of the activity
   *
   * @generated from field: optional mgmt.v1alpha1.ActivityFailure last_failure = 3;
   */
  lastFailure?: ActivityFailure;
};

/**
 * Describes the message mgmt.v1alpha1.PendingActivity.
 * Use `create(PendingActivitySchema)` to create a new message.
 */
export const PendingActivitySchema: GenMessage<PendingActivity> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 96);

/**
 * @generated from message mgmt.v1alpha1.JobRun
 */
export type JobRun = Message<"mgmt.v1alpha1.JobRun"> & {
  /**
   * The id of the job run. This will currently be equivalent to the temporal workflow id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The unique identifier of the job id this run is associated with
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * The name of the job run.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * the status of the job run
   *
   * @generated from field: mgmt.v1alpha1.JobRunStatus status = 4;
   */
  status: JobRunStatus;

  /**
   * A timestamp of when the run started
   *
   * @generated from field: google.protobuf.Timestamp started_at = 6;
   */
  startedAt?: Timestamp;

  /**
   * Available if the run completed or has not yet been archived by the system
   *
   * @generated from field: optional google.protobuf.Timestamp completed_at = 7;
   */
  completedAt?: Timestamp;

  /**
   * Pending activities are only returned when retrieving a specific job run and will not be returned when requesting job runs in list format
   *
   * @generated from field: repeated mgmt.v1alpha1.PendingActivity pending_activities = 8;
   */
  pendingActivities: PendingActivity[];
};

/**
 * Describes the message mgmt.v1alpha1.JobRun.
 * Use `create(JobRunSchema)` to create a new message.
 */
export const JobRunSchema: GenMessage<JobRun> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 97);

/**
 * @generated from message mgmt.v1alpha1.JobRunEventTaskError
 */
export type JobRunEventTaskError = Message<"mgmt.v1alpha1.JobRunEventTaskError"> & {
  /**
   * The message of the error
   *
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * The retry state of the error
   *
   * @generated from field: string retry_state = 2;
   */
  retryState: string;
};

/**
 * Describes the message mgmt.v1alpha1.JobRunEventTaskError.
 * Use `create(JobRunEventTaskErrorSchema)` to create a new message.
 */
export const JobRunEventTaskErrorSchema: GenMessage<JobRunEventTaskError> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 98);

/**
 * @generated from message mgmt.v1alpha1.JobRunEventTask
 */
export type JobRunEventTask = Message<"mgmt.v1alpha1.JobRunEventTask"> & {
  /**
   * The unique identifier of the task
   *
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * The type of the task
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * The time of the event
   *
   * @generated from field: google.protobuf.Timestamp event_time = 3;
   */
  eventTime?: Timestamp;

  /**
   * The error of the task
   *
   * @generated from field: mgmt.v1alpha1.JobRunEventTaskError error = 4;
   */
  error?: JobRunEventTaskError;
};

/**
 * Describes the message mgmt.v1alpha1.JobRunEventTask.
 * Use `create(JobRunEventTaskSchema)` to create a new message.
 */
export const JobRunEventTaskSchema: GenMessage<JobRunEventTask> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 99);

/**
 * @generated from message mgmt.v1alpha1.JobRunSyncMetadata
 */
export type JobRunSyncMetadata = Message<"mgmt.v1alpha1.JobRunSyncMetadata"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the sync
   *
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message mgmt.v1alpha1.JobRunSyncMetadata.
 * Use `create(JobRunSyncMetadataSchema)` to create a new message.
 */
export const JobRunSyncMetadataSchema: GenMessage<JobRunSyncMetadata> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 100);

/**
 * @generated from message mgmt.v1alpha1.JobRunEventMetadata
 */
export type JobRunEventMetadata = Message<"mgmt.v1alpha1.JobRunEventMetadata"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobRunEventMetadata.metadata
   */
  metadata: {
    /**
     * The metadata of the sync
     *
     * @generated from field: mgmt.v1alpha1.JobRunSyncMetadata sync_metadata = 1;
     */
    value: JobRunSyncMetadata;
    case: "syncMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobRunEventMetadata.
 * Use `create(JobRunEventMetadataSchema)` to create a new message.
 */
export const JobRunEventMetadataSchema: GenMessage<JobRunEventMetadata> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 101);

/**
 * @generated from message mgmt.v1alpha1.JobRunEvent
 */
export type JobRunEvent = Message<"mgmt.v1alpha1.JobRunEvent"> & {
  /**
   * The unique identifier of the event
   *
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * The type of the event
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * The start time of the event
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * The close time of the event
   *
   * @generated from field: google.protobuf.Timestamp close_time = 4;
   */
  closeTime?: Timestamp;

  /**
   * The metadata of the event
   *
   * @generated from field: mgmt.v1alpha1.JobRunEventMetadata metadata = 5;
   */
  metadata?: JobRunEventMetadata;

  /**
   * The list of tasks associated with the event
   *
   * @generated from field: repeated mgmt.v1alpha1.JobRunEventTask tasks = 6;
   */
  tasks: JobRunEventTask[];
};

/**
 * Describes the message mgmt.v1alpha1.JobRunEvent.
 * Use `create(JobRunEventSchema)` to create a new message.
 */
export const JobRunEventSchema: GenMessage<JobRunEvent> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 102);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunEventsRequest
 */
export type GetJobRunEventsRequest = Message<"mgmt.v1alpha1.GetJobRunEventsRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunEventsRequest.
 * Use `create(GetJobRunEventsRequestSchema)` to create a new message.
 */
export const GetJobRunEventsRequestSchema: GenMessage<GetJobRunEventsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 103);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunEventsResponse
 */
export type GetJobRunEventsResponse = Message<"mgmt.v1alpha1.GetJobRunEventsResponse"> & {
  /**
   * The list of events
   *
   * @generated from field: repeated mgmt.v1alpha1.JobRunEvent events = 1;
   */
  events: JobRunEvent[];

  /**
   * Whether the run is complete
   *
   * @generated from field: bool is_run_complete = 2;
   */
  isRunComplete: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunEventsResponse.
 * Use `create(GetJobRunEventsResponseSchema)` to create a new message.
 */
export const GetJobRunEventsResponseSchema: GenMessage<GetJobRunEventsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 104);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRunRequest
 */
export type DeleteJobRunRequest = Message<"mgmt.v1alpha1.DeleteJobRunRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobRunRequest.
 * Use `create(DeleteJobRunRequestSchema)` to create a new message.
 */
export const DeleteJobRunRequestSchema: GenMessage<DeleteJobRunRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 105);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobRunResponse
 */
export type DeleteJobRunResponse = Message<"mgmt.v1alpha1.DeleteJobRunResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobRunResponse.
 * Use `create(DeleteJobRunResponseSchema)` to create a new message.
 */
export const DeleteJobRunResponseSchema: GenMessage<DeleteJobRunResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 106);

/**
 * @generated from message mgmt.v1alpha1.TerminateJobRunRequest
 */
export type TerminateJobRunRequest = Message<"mgmt.v1alpha1.TerminateJobRunRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.TerminateJobRunRequest.
 * Use `create(TerminateJobRunRequestSchema)` to create a new message.
 */
export const TerminateJobRunRequestSchema: GenMessage<TerminateJobRunRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 107);

/**
 * @generated from message mgmt.v1alpha1.TerminateJobRunResponse
 */
export type TerminateJobRunResponse = Message<"mgmt.v1alpha1.TerminateJobRunResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.TerminateJobRunResponse.
 * Use `create(TerminateJobRunResponseSchema)` to create a new message.
 */
export const TerminateJobRunResponseSchema: GenMessage<TerminateJobRunResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 108);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunLogsStreamRequest
 */
export type GetJobRunLogsStreamRequest = Message<"mgmt.v1alpha1.GetJobRunLogsStreamRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * The time window in which to retrieve the logs
   *
   * @generated from field: mgmt.v1alpha1.LogWindow window = 3;
   */
  window: LogWindow;

  /**
   * Whether or not to tail the stream. Note: only works with k8s-pods and is not currently supported with Loki logs
   *
   * @generated from field: bool should_tail = 4;
   */
  shouldTail: boolean;

  /**
   * Optionally provide a max log limit
   *
   * @generated from field: optional int64 max_log_lines = 5;
   */
  maxLogLines?: bigint;

  /**
   * Provide a list of log levels to filter by. If any of these are UNSPECIFIED, all log levels are returned.
   *
   * @generated from field: repeated mgmt.v1alpha1.LogLevel log_levels = 6;
   */
  logLevels: LogLevel[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunLogsStreamRequest.
 * Use `create(GetJobRunLogsStreamRequestSchema)` to create a new message.
 */
export const GetJobRunLogsStreamRequestSchema: GenMessage<GetJobRunLogsStreamRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 109);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunLogsStreamResponse
 */
export type GetJobRunLogsStreamResponse = Message<"mgmt.v1alpha1.GetJobRunLogsStreamResponse"> & {
  /**
   * The log line
   *
   * @generated from field: string log_line = 1;
   */
  logLine: string;

  /**
   * The timestamp of the log line
   *
   * @generated from field: optional google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * The labels associated with the log line
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunLogsStreamResponse.
 * Use `create(GetJobRunLogsStreamResponseSchema)` to create a new message.
 */
export const GetJobRunLogsStreamResponseSchema: GenMessage<GetJobRunLogsStreamResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 110);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunLogsRequest
 */
export type GetJobRunLogsRequest = Message<"mgmt.v1alpha1.GetJobRunLogsRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * The time window in which to retrieve the logs
   *
   * @generated from field: mgmt.v1alpha1.LogWindow window = 3;
   */
  window: LogWindow;

  /**
   * Optionally provide a max log limit
   *
   * @generated from field: optional int64 max_log_lines = 4;
   */
  maxLogLines?: bigint;

  /**
   * Provide a list of log levels to filter by. If any of these are UNSPECIFIED, all log levels are returned.
   *
   * @generated from field: repeated mgmt.v1alpha1.LogLevel log_levels = 5;
   */
  logLevels: LogLevel[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunLogsRequest.
 * Use `create(GetJobRunLogsRequestSchema)` to create a new message.
 */
export const GetJobRunLogsRequestSchema: GenMessage<GetJobRunLogsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 111);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunLogsResponse
 */
export type GetJobRunLogsResponse = Message<"mgmt.v1alpha1.GetJobRunLogsResponse"> & {
  /**
   * The list of log lines
   *
   * @generated from field: repeated mgmt.v1alpha1.GetJobRunLogsResponse.LogLine log_lines = 1;
   */
  logLines: GetJobRunLogsResponse_LogLine[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunLogsResponse.
 * Use `create(GetJobRunLogsResponseSchema)` to create a new message.
 */
export const GetJobRunLogsResponseSchema: GenMessage<GetJobRunLogsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 112);

/**
 * @generated from message mgmt.v1alpha1.GetJobRunLogsResponse.LogLine
 */
export type GetJobRunLogsResponse_LogLine = Message<"mgmt.v1alpha1.GetJobRunLogsResponse.LogLine"> & {
  /**
   * The log line
   *
   * @generated from field: string log_line = 1;
   */
  logLine: string;

  /**
   * The timestamp of the log line
   *
   * @generated from field: optional google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * The labels associated with the log line
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message mgmt.v1alpha1.GetJobRunLogsResponse.LogLine.
 * Use `create(GetJobRunLogsResponse_LogLineSchema)` to create a new message.
 */
export const GetJobRunLogsResponse_LogLineSchema: GenMessage<GetJobRunLogsResponse_LogLine> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 112, 0);

/**
 * @generated from message mgmt.v1alpha1.SetJobWorkflowOptionsRequest
 */
export type SetJobWorkflowOptionsRequest = Message<"mgmt.v1alpha1.SetJobWorkflowOptionsRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The workflow options object. The entire object must be provided and will fully overwrite the previous result
   *
   * @generated from field: mgmt.v1alpha1.WorkflowOptions worfklow_options = 2;
   */
  worfklowOptions?: WorkflowOptions;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobWorkflowOptionsRequest.
 * Use `create(SetJobWorkflowOptionsRequestSchema)` to create a new message.
 */
export const SetJobWorkflowOptionsRequestSchema: GenMessage<SetJobWorkflowOptionsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 113);

/**
 * @generated from message mgmt.v1alpha1.SetJobWorkflowOptionsResponse
 */
export type SetJobWorkflowOptionsResponse = Message<"mgmt.v1alpha1.SetJobWorkflowOptionsResponse"> & {
  /**
   * The updated job
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobWorkflowOptionsResponse.
 * Use `create(SetJobWorkflowOptionsResponseSchema)` to create a new message.
 */
export const SetJobWorkflowOptionsResponseSchema: GenMessage<SetJobWorkflowOptionsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 114);

/**
 * @generated from message mgmt.v1alpha1.SetJobSyncOptionsRequest
 */
export type SetJobSyncOptionsRequest = Message<"mgmt.v1alpha1.SetJobSyncOptionsRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The sync options object. The entire object must be provided and will fully overwrite the previous result
   *
   * @generated from field: mgmt.v1alpha1.ActivityOptions sync_options = 2;
   */
  syncOptions?: ActivityOptions;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobSyncOptionsRequest.
 * Use `create(SetJobSyncOptionsRequestSchema)` to create a new message.
 */
export const SetJobSyncOptionsRequestSchema: GenMessage<SetJobSyncOptionsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 115);

/**
 * @generated from message mgmt.v1alpha1.SetJobSyncOptionsResponse
 */
export type SetJobSyncOptionsResponse = Message<"mgmt.v1alpha1.SetJobSyncOptionsResponse"> & {
  /**
   * The updated job
   *
   * @generated from field: mgmt.v1alpha1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobSyncOptionsResponse.
 * Use `create(SetJobSyncOptionsResponseSchema)` to create a new message.
 */
export const SetJobSyncOptionsResponseSchema: GenMessage<SetJobSyncOptionsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 116);

/**
 * @generated from message mgmt.v1alpha1.ValidateJobMappingsRequest
 */
export type ValidateJobMappingsRequest = Message<"mgmt.v1alpha1.ValidateJobMappingsRequest"> & {
  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The list of mappings to validate
   *
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 2;
   */
  mappings: JobMapping[];

  /**
   * The unique identifier of the connection
   *
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;

  /**
   * The list of virtual foreign keys
   *
   * @generated from field: repeated mgmt.v1alpha1.VirtualForeignConstraint virtual_foreign_keys = 4;
   */
  virtualForeignKeys: VirtualForeignConstraint[];

  /**
   * The source options of the job
   *
   * @generated from field: optional mgmt.v1alpha1.JobSource job_source = 5;
   */
  jobSource?: JobSource;
};

/**
 * Describes the message mgmt.v1alpha1.ValidateJobMappingsRequest.
 * Use `create(ValidateJobMappingsRequestSchema)` to create a new message.
 */
export const ValidateJobMappingsRequestSchema: GenMessage<ValidateJobMappingsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 117);

/**
 * @generated from message mgmt.v1alpha1.ColumnError
 */
export type ColumnError = Message<"mgmt.v1alpha1.ColumnError"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the column
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The column of the error
   *
   * @generated from field: string column = 3;
   */
  column: string;

  /**
   * @deprecated - Use error_reports instead
   *
   * @generated from field: repeated string errors = 4 [deprecated = true];
   * @deprecated
   */
  errors: string[];

  /**
   * The list of error reports
   *
   * @generated from field: repeated mgmt.v1alpha1.ColumnError.ColumnErrorReport error_reports = 5;
   */
  errorReports: ColumnError_ColumnErrorReport[];
};

/**
 * Describes the message mgmt.v1alpha1.ColumnError.
 * Use `create(ColumnErrorSchema)` to create a new message.
 */
export const ColumnErrorSchema: GenMessage<ColumnError> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 118);

/**
 * Column error report
 *
 * @generated from message mgmt.v1alpha1.ColumnError.ColumnErrorReport
 */
export type ColumnError_ColumnErrorReport = Message<"mgmt.v1alpha1.ColumnError.ColumnErrorReport"> & {
  /**
   * The error code
   *
   * @generated from field: mgmt.v1alpha1.ColumnError.ColumnErrorCode code = 1;
   */
  code: ColumnError_ColumnErrorCode;

  /**
   * The error message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message mgmt.v1alpha1.ColumnError.ColumnErrorReport.
 * Use `create(ColumnError_ColumnErrorReportSchema)` to create a new message.
 */
export const ColumnError_ColumnErrorReportSchema: GenMessage<ColumnError_ColumnErrorReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 118, 0);

/**
 * An enumeration of column error codes
 *
 * @generated from enum mgmt.v1alpha1.ColumnError.ColumnErrorCode
 */
export enum ColumnError_ColumnErrorCode {
  /**
   * Default unspecified value
   *
   * @generated from enum value: COLUMN_ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Column not found in source database
   *
   * @generated from enum value: COLUMN_ERROR_CODE_NOT_FOUND_IN_SOURCE = 1;
   */
  NOT_FOUND_IN_SOURCE = 1,

  /**
   * Column not found in job mapping
   *
   * @generated from enum value: COLUMN_ERROR_CODE_NOT_FOUND_IN_MAPPING = 2;
   */
  NOT_FOUND_IN_MAPPING = 2,

  /**
   * Required column not found in job mapping
   *
   * @generated from enum value: COLUMN_ERROR_CODE_REQUIRED_COLUMN_NOT_FOUND_IN_MAPPING = 3;
   */
  REQUIRED_COLUMN_NOT_FOUND_IN_MAPPING = 3,

  /**
   * Required foreign key not found in job mapping
   *
   * @generated from enum value: COLUMN_ERROR_CODE_REQUIRED_FOREIGN_KEY_NOT_FOUND_IN_MAPPING = 4;
   */
  REQUIRED_FOREIGN_KEY_NOT_FOUND_IN_MAPPING = 4,

  /**
   * Unsupported circular dependency detected
   *
   * @generated from enum value: COLUMN_ERROR_CODE_UNSUPPORTED_CIRCULAR_DEPENDENCY_AT_LEAST_ONE_NULLABLE = 5;
   */
  UNSUPPORTED_CIRCULAR_DEPENDENCY_AT_LEAST_ONE_NULLABLE = 5,

  /**
   * Virtual foreign key source column not found in mapping
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_SOURCE_COLUMN_NOT_FOUND_IN_MAPPING = 6;
   */
  VFK_SOURCE_COLUMN_NOT_FOUND_IN_MAPPING = 6,

  /**
   * Virtual foreign key source column not found in source
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_SOURCE_COLUMN_NOT_FOUND_IN_SOURCE = 7;
   */
  VFK_SOURCE_COLUMN_NOT_FOUND_IN_SOURCE = 7,

  /**
   * Virtual foreign key target column not found in mapping
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_TARGET_COLUMN_NOT_FOUND_IN_MAPPING = 8;
   */
  VFK_TARGET_COLUMN_NOT_FOUND_IN_MAPPING = 8,

  /**
   * Virtual foreign key target column not found in source
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_TARGET_COLUMN_NOT_FOUND_IN_SOURCE = 9;
   */
  VFK_TARGET_COLUMN_NOT_FOUND_IN_SOURCE = 9,

  /**
   * Virtual foreign key column datatype mismatch
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_COLUMN_DATATYPE_MISMATCH = 10;
   */
  VFK_COLUMN_DATATYPE_MISMATCH = 10,

  /**
   * Virtual foreign key source column not unique
   *
   * @generated from enum value: COLUMN_ERROR_CODE_VFK_SOURCE_COLUMN_NOT_UNIQUE = 11;
   */
  VFK_SOURCE_COLUMN_NOT_UNIQUE = 11,
}

/**
 * Describes the enum mgmt.v1alpha1.ColumnError.ColumnErrorCode.
 */
export const ColumnError_ColumnErrorCodeSchema: GenEnum<ColumnError_ColumnErrorCode> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 118, 0);

/**
 * @generated from message mgmt.v1alpha1.ColumnWarning
 */
export type ColumnWarning = Message<"mgmt.v1alpha1.ColumnWarning"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the column
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The column of the warning
   *
   * @generated from field: string column = 3;
   */
  column: string;

  /**
   * @deprecated - Use warning_reports instead
   *
   * @generated from field: repeated string warnings = 5 [deprecated = true];
   * @deprecated
   */
  warnings: string[];

  /**
   * The list of warning reports
   *
   * @generated from field: repeated mgmt.v1alpha1.ColumnWarning.ColumnWarningReport warning_reports = 6;
   */
  warningReports: ColumnWarning_ColumnWarningReport[];
};

/**
 * Describes the message mgmt.v1alpha1.ColumnWarning.
 * Use `create(ColumnWarningSchema)` to create a new message.
 */
export const ColumnWarningSchema: GenMessage<ColumnWarning> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 119);

/**
 * Column warning report
 *
 * @generated from message mgmt.v1alpha1.ColumnWarning.ColumnWarningReport
 */
export type ColumnWarning_ColumnWarningReport = Message<"mgmt.v1alpha1.ColumnWarning.ColumnWarningReport"> & {
  /**
   * The warning code
   *
   * @generated from field: mgmt.v1alpha1.ColumnWarning.ColumnWarningCode code = 1;
   */
  code: ColumnWarning_ColumnWarningCode;

  /**
   * The warning message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message mgmt.v1alpha1.ColumnWarning.ColumnWarningReport.
 * Use `create(ColumnWarning_ColumnWarningReportSchema)` to create a new message.
 */
export const ColumnWarning_ColumnWarningReportSchema: GenMessage<ColumnWarning_ColumnWarningReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 119, 0);

/**
 * An enumeration of column warning codes
 *
 * @generated from enum mgmt.v1alpha1.ColumnWarning.ColumnWarningCode
 */
export enum ColumnWarning_ColumnWarningCode {
  /**
   * Default unspecified value
   *
   * @generated from enum value: COLUMN_WARNING_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Column not found in source database
   *
   * @generated from enum value: COLUMN_WARNING_CODE_NOT_FOUND_IN_SOURCE = 1;
   */
  NOT_FOUND_IN_SOURCE = 1,

  /**
   * Column not found in job mapping
   *
   * @generated from enum value: COLUMN_WARNING_CODE_NOT_FOUND_IN_MAPPING = 2;
   */
  NOT_FOUND_IN_MAPPING = 2,
}

/**
 * Describes the enum mgmt.v1alpha1.ColumnWarning.ColumnWarningCode.
 */
export const ColumnWarning_ColumnWarningCodeSchema: GenEnum<ColumnWarning_ColumnWarningCode> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 119, 0);

/**
 * @generated from message mgmt.v1alpha1.DatabaseError
 */
export type DatabaseError = Message<"mgmt.v1alpha1.DatabaseError"> & {
  /**
   * @deprecated - Use error_reports instead
   *
   * @generated from field: repeated string errors = 1 [deprecated = true];
   * @deprecated
   */
  errors: string[];

  /**
   * The list of error reports
   *
   * @generated from field: repeated mgmt.v1alpha1.DatabaseError.DatabaseErrorReport error_reports = 2;
   */
  errorReports: DatabaseError_DatabaseErrorReport[];
};

/**
 * Describes the message mgmt.v1alpha1.DatabaseError.
 * Use `create(DatabaseErrorSchema)` to create a new message.
 */
export const DatabaseErrorSchema: GenMessage<DatabaseError> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 120);

/**
 * Database error report
 *
 * @generated from message mgmt.v1alpha1.DatabaseError.DatabaseErrorReport
 */
export type DatabaseError_DatabaseErrorReport = Message<"mgmt.v1alpha1.DatabaseError.DatabaseErrorReport"> & {
  /**
   * The error code
   *
   * @generated from field: mgmt.v1alpha1.DatabaseError.DatabaseErrorCode code = 1;
   */
  code: DatabaseError_DatabaseErrorCode;

  /**
   * The error message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message mgmt.v1alpha1.DatabaseError.DatabaseErrorReport.
 * Use `create(DatabaseError_DatabaseErrorReportSchema)` to create a new message.
 */
export const DatabaseError_DatabaseErrorReportSchema: GenMessage<DatabaseError_DatabaseErrorReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 120, 0);

/**
 * An enumeration of database error codes
 *
 * @generated from enum mgmt.v1alpha1.DatabaseError.DatabaseErrorCode
 */
export enum DatabaseError_DatabaseErrorCode {
  /**
   * Default unspecified value
   *
   * @generated from enum value: DATABASE_ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Unsupported circular dependency detected
   *
   * @generated from enum value: DATABASE_ERROR_CODE_UNSUPPORTED_CIRCULAR_DEPENDENCY_AT_LEAST_ONE_NULLABLE = 1;
   */
  UNSUPPORTED_CIRCULAR_DEPENDENCY_AT_LEAST_ONE_NULLABLE = 1,

  /**
   * Virtual foreign key column mismatch
   *
   * @generated from enum value: DATABASE_ERROR_CODE_VFK_COLUMN_MISMATCH = 2;
   */
  VFK_COLUMN_MISMATCH = 2,
}

/**
 * Describes the enum mgmt.v1alpha1.DatabaseError.DatabaseErrorCode.
 */
export const DatabaseError_DatabaseErrorCodeSchema: GenEnum<DatabaseError_DatabaseErrorCode> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 120, 0);

/**
 * @generated from message mgmt.v1alpha1.TableError
 */
export type TableError = Message<"mgmt.v1alpha1.TableError"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the error
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The list of error reports
   *
   * @generated from field: repeated mgmt.v1alpha1.TableError.TableErrorReport error_reports = 3;
   */
  errorReports: TableError_TableErrorReport[];
};

/**
 * Describes the message mgmt.v1alpha1.TableError.
 * Use `create(TableErrorSchema)` to create a new message.
 */
export const TableErrorSchema: GenMessage<TableError> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 121);

/**
 * Database error report
 *
 * @generated from message mgmt.v1alpha1.TableError.TableErrorReport
 */
export type TableError_TableErrorReport = Message<"mgmt.v1alpha1.TableError.TableErrorReport"> & {
  /**
   * The error code
   *
   * @generated from field: mgmt.v1alpha1.TableError.TableErrorCode code = 1;
   */
  code: TableError_TableErrorCode;

  /**
   * The error message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message mgmt.v1alpha1.TableError.TableErrorReport.
 * Use `create(TableError_TableErrorReportSchema)` to create a new message.
 */
export const TableError_TableErrorReportSchema: GenMessage<TableError_TableErrorReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 121, 0);

/**
 * An enumeration of table error codes
 *
 * @generated from enum mgmt.v1alpha1.TableError.TableErrorCode
 */
export enum TableError_TableErrorCode {
  /**
   * Default unspecified value
   *
   * @generated from enum value: TABLE_ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Table not found in source database
   *
   * @generated from enum value: TABLE_ERROR_CODE_TABLE_NOT_FOUND_IN_SOURCE = 1;
   */
  TABLE_NOT_FOUND_IN_SOURCE = 1,

  /**
   * Virtual foreign key source table not found in mapping
   *
   * @generated from enum value: TABLE_ERROR_CODE_VFK_SOURCE_TABLE_NOT_FOUND_IN_MAPPING = 2;
   */
  VFK_SOURCE_TABLE_NOT_FOUND_IN_MAPPING = 2,

  /**
   * Virtual foreign key source table not found in source
   *
   * @generated from enum value: TABLE_ERROR_CODE_VFK_SOURCE_TABLE_NOT_FOUND_IN_SOURCE = 3;
   */
  VFK_SOURCE_TABLE_NOT_FOUND_IN_SOURCE = 3,

  /**
   * Virtual foreign key target table not found in mapping
   *
   * @generated from enum value: TABLE_ERROR_CODE_VFK_TARGET_TABLE_NOT_FOUND_IN_MAPPING = 4;
   */
  VFK_TARGET_TABLE_NOT_FOUND_IN_MAPPING = 4,

  /**
   * Virtual foreign key target table not found in source
   *
   * @generated from enum value: TABLE_ERROR_CODE_VFK_TARGET_TABLE_NOT_FOUND_IN_SOURCE = 5;
   */
  VFK_TARGET_TABLE_NOT_FOUND_IN_SOURCE = 5,
}

/**
 * Describes the enum mgmt.v1alpha1.TableError.TableErrorCode.
 */
export const TableError_TableErrorCodeSchema: GenEnum<TableError_TableErrorCode> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 121, 0);

/**
 * @generated from message mgmt.v1alpha1.ValidateJobMappingsResponse
 */
export type ValidateJobMappingsResponse = Message<"mgmt.v1alpha1.ValidateJobMappingsResponse"> & {
  /**
   * The list of column errors
   *
   * @generated from field: repeated mgmt.v1alpha1.ColumnError column_errors = 1;
   */
  columnErrors: ColumnError[];

  /**
   * The list of database errors
   *
   * @generated from field: mgmt.v1alpha1.DatabaseError database_errors = 2;
   */
  databaseErrors?: DatabaseError;

  /**
   * The list of column warnings
   *
   * @generated from field: repeated mgmt.v1alpha1.ColumnWarning column_warnings = 3;
   */
  columnWarnings: ColumnWarning[];

  /**
   * The list of table errors
   *
   * @generated from field: repeated mgmt.v1alpha1.TableError table_errors = 4;
   */
  tableErrors: TableError[];
};

/**
 * Describes the message mgmt.v1alpha1.ValidateJobMappingsResponse.
 * Use `create(ValidateJobMappingsResponseSchema)` to create a new message.
 */
export const ValidateJobMappingsResponseSchema: GenMessage<ValidateJobMappingsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 122);

/**
 * @generated from message mgmt.v1alpha1.ValidateSchemaRequest
 */
export type ValidateSchemaRequest = Message<"mgmt.v1alpha1.ValidateSchemaRequest"> & {
  /**
   * The list of mappings to validate
   *
   * @generated from field: repeated mgmt.v1alpha1.JobMapping mappings = 1;
   */
  mappings: JobMapping[];

  /**
   * The unique identifier of the connection to validate
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;
};

/**
 * Describes the message mgmt.v1alpha1.ValidateSchemaRequest.
 * Use `create(ValidateSchemaRequestSchema)` to create a new message.
 */
export const ValidateSchemaRequestSchema: GenMessage<ValidateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 123);

/**
 * @generated from message mgmt.v1alpha1.ValidateSchemaResponse
 */
export type ValidateSchemaResponse = Message<"mgmt.v1alpha1.ValidateSchemaResponse"> & {
  /**
   * The list columns missing in destination
   *
   * @generated from field: repeated mgmt.v1alpha1.DatabaseColumn missing_columns = 1;
   */
  missingColumns: DatabaseColumn[];

  /**
   * The list of extra columns in destination and not in source
   *
   * @generated from field: repeated mgmt.v1alpha1.DatabaseColumn extra_columns = 2;
   */
  extraColumns: DatabaseColumn[];

  /**
   * The list of tables missing in destination
   *
   * @generated from field: repeated mgmt.v1alpha1.ValidateSchemaResponse.Table missing_tables = 3;
   */
  missingTables: ValidateSchemaResponse_Table[];

  /**
   * The list of schemas missing in destination
   *
   * @generated from field: repeated string missing_schemas = 4;
   */
  missingSchemas: string[];
};

/**
 * Describes the message mgmt.v1alpha1.ValidateSchemaResponse.
 * Use `create(ValidateSchemaResponseSchema)` to create a new message.
 */
export const ValidateSchemaResponseSchema: GenMessage<ValidateSchemaResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 124);

/**
 * @generated from message mgmt.v1alpha1.ValidateSchemaResponse.Table
 */
export type ValidateSchemaResponse_Table = Message<"mgmt.v1alpha1.ValidateSchemaResponse.Table"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table
   *
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message mgmt.v1alpha1.ValidateSchemaResponse.Table.
 * Use `create(ValidateSchemaResponse_TableSchema)` to create a new message.
 */
export const ValidateSchemaResponse_TableSchema: GenMessage<ValidateSchemaResponse_Table> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 124, 0);

/**
 * @generated from message mgmt.v1alpha1.VirtualForeignKey
 */
export type VirtualForeignKey = Message<"mgmt.v1alpha1.VirtualForeignKey"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the virtual foreign key
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The list of columns
   *
   * @generated from field: repeated string columns = 3;
   */
  columns: string[];
};

/**
 * Describes the message mgmt.v1alpha1.VirtualForeignKey.
 * Use `create(VirtualForeignKeySchema)` to create a new message.
 */
export const VirtualForeignKeySchema: GenMessage<VirtualForeignKey> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 125);

/**
 * @generated from message mgmt.v1alpha1.VirtualForeignConstraint
 */
export type VirtualForeignConstraint = Message<"mgmt.v1alpha1.VirtualForeignConstraint"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The table of the virtual foreign key
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The list of columns
   *
   * @generated from field: repeated string columns = 3;
   */
  columns: string[];

  /**
   * The foreign key
   *
   * @generated from field: mgmt.v1alpha1.VirtualForeignKey foreign_key = 4;
   */
  foreignKey?: VirtualForeignKey;
};

/**
 * Describes the message mgmt.v1alpha1.VirtualForeignConstraint.
 * Use `create(VirtualForeignConstraintSchema)` to create a new message.
 */
export const VirtualForeignConstraintSchema: GenMessage<VirtualForeignConstraint> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 126);

/**
 * @generated from message mgmt.v1alpha1.RunContextKey
 */
export type RunContextKey = Message<"mgmt.v1alpha1.RunContextKey"> & {
  /**
   * The Neosync Run ID
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * An opaque identifier that will be used to store specific items
   *
   * @generated from field: string external_id = 2;
   */
  externalId: string;

  /**
   * The Neosync Account ID
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.RunContextKey.
 * Use `create(RunContextKeySchema)` to create a new message.
 */
export const RunContextKeySchema: GenMessage<RunContextKey> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 127);

/**
 * @generated from message mgmt.v1alpha1.GetRunContextRequest
 */
export type GetRunContextRequest = Message<"mgmt.v1alpha1.GetRunContextRequest"> & {
  /**
   * The run context key
   *
   * @generated from field: mgmt.v1alpha1.RunContextKey id = 1;
   */
  id?: RunContextKey;
};

/**
 * Describes the message mgmt.v1alpha1.GetRunContextRequest.
 * Use `create(GetRunContextRequestSchema)` to create a new message.
 */
export const GetRunContextRequestSchema: GenMessage<GetRunContextRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 128);

/**
 * @generated from message mgmt.v1alpha1.GetRunContextResponse
 */
export type GetRunContextResponse = Message<"mgmt.v1alpha1.GetRunContextResponse"> & {
  /**
   * The returned value in bytes. The format is determined by the key when it is set.
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;
};

/**
 * Describes the message mgmt.v1alpha1.GetRunContextResponse.
 * Use `create(GetRunContextResponseSchema)` to create a new message.
 */
export const GetRunContextResponseSchema: GenMessage<GetRunContextResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 129);

/**
 * @generated from message mgmt.v1alpha1.SetRunContextRequest
 */
export type SetRunContextRequest = Message<"mgmt.v1alpha1.SetRunContextRequest"> & {
  /**
   * The run context key
   *
   * @generated from field: mgmt.v1alpha1.RunContextKey id = 1;
   */
  id?: RunContextKey;

  /**
   * An opaque value that is to be determined by the key
   *
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * Describes the message mgmt.v1alpha1.SetRunContextRequest.
 * Use `create(SetRunContextRequestSchema)` to create a new message.
 */
export const SetRunContextRequestSchema: GenMessage<SetRunContextRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 130);

/**
 * @generated from message mgmt.v1alpha1.SetRunContextResponse
 */
export type SetRunContextResponse = Message<"mgmt.v1alpha1.SetRunContextResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.SetRunContextResponse.
 * Use `create(SetRunContextResponseSchema)` to create a new message.
 */
export const SetRunContextResponseSchema: GenMessage<SetRunContextResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 131);

/**
 * @generated from message mgmt.v1alpha1.SetRunContextsRequest
 */
export type SetRunContextsRequest = Message<"mgmt.v1alpha1.SetRunContextsRequest"> & {
  /**
   * The run context key
   *
   * @generated from field: mgmt.v1alpha1.RunContextKey id = 1;
   */
  id?: RunContextKey;

  /**
   * An opaque value that is to be determined by the key
   *
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * Describes the message mgmt.v1alpha1.SetRunContextsRequest.
 * Use `create(SetRunContextsRequestSchema)` to create a new message.
 */
export const SetRunContextsRequestSchema: GenMessage<SetRunContextsRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 132);

/**
 * @generated from message mgmt.v1alpha1.SetRunContextsResponse
 */
export type SetRunContextsResponse = Message<"mgmt.v1alpha1.SetRunContextsResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.SetRunContextsResponse.
 * Use `create(SetRunContextsResponseSchema)` to create a new message.
 */
export const SetRunContextsResponseSchema: GenMessage<SetRunContextsResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 133);

/**
 * @generated from message mgmt.v1alpha1.JobHook
 */
export type JobHook = Message<"mgmt.v1alpha1.JobHook"> & {
  /**
   * The unique identifier of this hook.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Name of the hook for display/reference.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Description of what this hook does.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The unique identifier of the job this hook belongs to.
   *
   * @generated from field: string job_id = 4;
   */
  jobId: string;

  /**
   * Hook-type specific configuration.
   *
   * @generated from field: mgmt.v1alpha1.JobHookConfig config = 5;
   */
  config?: JobHookConfig;

  /**
   * The user that created this hook.
   *
   * @generated from field: string created_by_user_id = 6;
   */
  createdByUserId: string;

  /**
   * The time this hook was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * The user that last updated this hook.
   *
   * @generated from field: string updated_by_user_id = 8;
   */
  updatedByUserId: string;

  /**
   * The last time this hook was updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  /**
   * Whether or not the hook is enabled.
   *
   * @generated from field: bool enabled = 10;
   */
  enabled: boolean;

  /**
   * The priority of the hook (0-100). This determines the execution order. Lower values are higher priority (priority=0 is the highest).
   * Tie Breaking is determined by the following: (priority, created_at, id) in ascending order.
   *
   * @generated from field: uint32 priority = 11;
   */
  priority: number;
};

/**
 * Describes the message mgmt.v1alpha1.JobHook.
 * Use `create(JobHookSchema)` to create a new message.
 */
export const JobHookSchema: GenMessage<JobHook> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 134);

/**
 * @generated from message mgmt.v1alpha1.NewJobHook
 */
export type NewJobHook = Message<"mgmt.v1alpha1.NewJobHook"> & {
  /**
   * Name of the hook for display/reference.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of what this hook does.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Hook-type specific configuration.
   *
   * @generated from field: mgmt.v1alpha1.JobHookConfig config = 3;
   */
  config?: JobHookConfig;

  /**
   * Whether or not the hook is enabled.
   *
   * @generated from field: bool enabled = 4;
   */
  enabled: boolean;

  /**
   * The priority of the hook (0-100). This determines the execution order. Lower values are higher priority (priority=0 is the highest).
   * Tie Breaking is determined by the following: (priority, created_at, id) in ascending order.
   *
   * @generated from field: uint32 priority = 5;
   */
  priority: number;
};

/**
 * Describes the message mgmt.v1alpha1.NewJobHook.
 * Use `create(NewJobHookSchema)` to create a new message.
 */
export const NewJobHookSchema: GenMessage<NewJobHook> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 135);

/**
 * Contains the specific hook type configurations.
 *
 * @generated from message mgmt.v1alpha1.JobHookConfig
 */
export type JobHookConfig = Message<"mgmt.v1alpha1.JobHookConfig"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobHookConfig.config
   */
  config: {
    /**
     * Configuration for SQL-specific hooks.
     *
     * @generated from field: mgmt.v1alpha1.JobHookConfig.JobSqlHook sql = 5;
     */
    value: JobHookConfig_JobSqlHook;
    case: "sql";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobHookConfig.
 * Use `create(JobHookConfigSchema)` to create a new message.
 */
export const JobHookConfigSchema: GenMessage<JobHookConfig> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 136);

/**
 * Configuration for SQL-based hooks
 *
 * @generated from message mgmt.v1alpha1.JobHookConfig.JobSqlHook
 */
export type JobHookConfig_JobSqlHook = Message<"mgmt.v1alpha1.JobHookConfig.JobSqlHook"> & {
  /**
   * The SQL query to execute
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Unique identifier of the Neosync connection to run this hook for. Must be a connection id that is present in the job.
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;

  /**
   * The timing of when the hook will run
   *
   * @generated from field: mgmt.v1alpha1.JobHookConfig.JobSqlHook.Timing timing = 3;
   */
  timing?: JobHookConfig_JobSqlHook_Timing;
};

/**
 * Describes the message mgmt.v1alpha1.JobHookConfig.JobSqlHook.
 * Use `create(JobHookConfig_JobSqlHookSchema)` to create a new message.
 */
export const JobHookConfig_JobSqlHookSchema: GenMessage<JobHookConfig_JobSqlHook> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 136, 0);

/**
 * @generated from message mgmt.v1alpha1.JobHookConfig.JobSqlHook.Timing
 */
export type JobHookConfig_JobSqlHook_Timing = Message<"mgmt.v1alpha1.JobHookConfig.JobSqlHook.Timing"> & {
  /**
   * @generated from oneof mgmt.v1alpha1.JobHookConfig.JobSqlHook.Timing.timing
   */
  timing: {
    /**
     * A Pre-Sync timing.
     * Will run before the first table sync.
     * Will run before Truncation, if enabled.
     * Will run before Schema Init, if enabled.
     *
     * @generated from field: mgmt.v1alpha1.JobHookTimingPreSync pre_sync = 3;
     */
    value: JobHookTimingPreSync;
    case: "preSync";
  } | {
    /**
     * A Post-Sync timing. Will run after the last table sync.
     *
     * @generated from field: mgmt.v1alpha1.JobHookTimingPostSync post_sync = 4;
     */
    value: JobHookTimingPostSync;
    case: "postSync";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mgmt.v1alpha1.JobHookConfig.JobSqlHook.Timing.
 * Use `create(JobHookConfig_JobSqlHook_TimingSchema)` to create a new message.
 */
export const JobHookConfig_JobSqlHook_TimingSchema: GenMessage<JobHookConfig_JobSqlHook_Timing> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 136, 0, 0);

/**
 * Configures the job hook to run before the first table sync.
 * Will run before Truncation, if enabled.
 * Will run before Schema Init, if enabled.
 *
 * @generated from message mgmt.v1alpha1.JobHookTimingPreSync
 */
export type JobHookTimingPreSync = Message<"mgmt.v1alpha1.JobHookTimingPreSync"> & {
};

/**
 * Describes the message mgmt.v1alpha1.JobHookTimingPreSync.
 * Use `create(JobHookTimingPreSyncSchema)` to create a new message.
 */
export const JobHookTimingPreSyncSchema: GenMessage<JobHookTimingPreSync> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 137);

/**
 * Configures the job hook to run after the last table sync.
 *
 * @generated from message mgmt.v1alpha1.JobHookTimingPostSync
 */
export type JobHookTimingPostSync = Message<"mgmt.v1alpha1.JobHookTimingPostSync"> & {
};

/**
 * Describes the message mgmt.v1alpha1.JobHookTimingPostSync.
 * Use `create(JobHookTimingPostSyncSchema)` to create a new message.
 */
export const JobHookTimingPostSyncSchema: GenMessage<JobHookTimingPostSync> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 138);

/**
 * @generated from message mgmt.v1alpha1.GetJobHooksRequest
 */
export type GetJobHooksRequest = Message<"mgmt.v1alpha1.GetJobHooksRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobHooksRequest.
 * Use `create(GetJobHooksRequestSchema)` to create a new message.
 */
export const GetJobHooksRequestSchema: GenMessage<GetJobHooksRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 139);

/**
 * @generated from message mgmt.v1alpha1.GetJobHooksResponse
 */
export type GetJobHooksResponse = Message<"mgmt.v1alpha1.GetJobHooksResponse"> & {
  /**
   * The list of hooks found attached to the job
   *
   * @generated from field: repeated mgmt.v1alpha1.JobHook hooks = 1;
   */
  hooks: JobHook[];
};

/**
 * Describes the message mgmt.v1alpha1.GetJobHooksResponse.
 * Use `create(GetJobHooksResponseSchema)` to create a new message.
 */
export const GetJobHooksResponseSchema: GenMessage<GetJobHooksResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 140);

/**
 * @generated from message mgmt.v1alpha1.GetJobHookRequest
 */
export type GetJobHookRequest = Message<"mgmt.v1alpha1.GetJobHookRequest"> & {
  /**
   * The unique identifier of the hook
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobHookRequest.
 * Use `create(GetJobHookRequestSchema)` to create a new message.
 */
export const GetJobHookRequestSchema: GenMessage<GetJobHookRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 141);

/**
 * @generated from message mgmt.v1alpha1.GetJobHookResponse
 */
export type GetJobHookResponse = Message<"mgmt.v1alpha1.GetJobHookResponse"> & {
  /**
   * The found hook
   *
   * @generated from field: mgmt.v1alpha1.JobHook hook = 1;
   */
  hook?: JobHook;
};

/**
 * Describes the message mgmt.v1alpha1.GetJobHookResponse.
 * Use `create(GetJobHookResponseSchema)` to create a new message.
 */
export const GetJobHookResponseSchema: GenMessage<GetJobHookResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 142);

/**
 * @generated from message mgmt.v1alpha1.CreateJobHookRequest
 */
export type CreateJobHookRequest = Message<"mgmt.v1alpha1.CreateJobHookRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The new hook configuration
   *
   * @generated from field: mgmt.v1alpha1.NewJobHook hook = 2;
   */
  hook?: NewJobHook;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobHookRequest.
 * Use `create(CreateJobHookRequestSchema)` to create a new message.
 */
export const CreateJobHookRequestSchema: GenMessage<CreateJobHookRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 143);

/**
 * @generated from message mgmt.v1alpha1.CreateJobHookResponse
 */
export type CreateJobHookResponse = Message<"mgmt.v1alpha1.CreateJobHookResponse"> & {
  /**
   * The newly created hook
   *
   * @generated from field: mgmt.v1alpha1.JobHook hook = 1;
   */
  hook?: JobHook;
};

/**
 * Describes the message mgmt.v1alpha1.CreateJobHookResponse.
 * Use `create(CreateJobHookResponseSchema)` to create a new message.
 */
export const CreateJobHookResponseSchema: GenMessage<CreateJobHookResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 144);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobHookRequest
 */
export type DeleteJobHookRequest = Message<"mgmt.v1alpha1.DeleteJobHookRequest"> & {
  /**
   * The unique identifier of the hook
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobHookRequest.
 * Use `create(DeleteJobHookRequestSchema)` to create a new message.
 */
export const DeleteJobHookRequestSchema: GenMessage<DeleteJobHookRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 145);

/**
 * @generated from message mgmt.v1alpha1.DeleteJobHookResponse
 */
export type DeleteJobHookResponse = Message<"mgmt.v1alpha1.DeleteJobHookResponse"> & {
};

/**
 * Describes the message mgmt.v1alpha1.DeleteJobHookResponse.
 * Use `create(DeleteJobHookResponseSchema)` to create a new message.
 */
export const DeleteJobHookResponseSchema: GenMessage<DeleteJobHookResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 146);

/**
 * @generated from message mgmt.v1alpha1.IsJobHookNameAvailableRequest
 */
export type IsJobHookNameAvailableRequest = Message<"mgmt.v1alpha1.IsJobHookNameAvailableRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The hook name to check.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message mgmt.v1alpha1.IsJobHookNameAvailableRequest.
 * Use `create(IsJobHookNameAvailableRequestSchema)` to create a new message.
 */
export const IsJobHookNameAvailableRequestSchema: GenMessage<IsJobHookNameAvailableRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 147);

/**
 * @generated from message mgmt.v1alpha1.IsJobHookNameAvailableResponse
 */
export type IsJobHookNameAvailableResponse = Message<"mgmt.v1alpha1.IsJobHookNameAvailableResponse"> & {
  /**
   * Whether or not the hook name is available
   *
   * @generated from field: bool is_available = 1;
   */
  isAvailable: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.IsJobHookNameAvailableResponse.
 * Use `create(IsJobHookNameAvailableResponseSchema)` to create a new message.
 */
export const IsJobHookNameAvailableResponseSchema: GenMessage<IsJobHookNameAvailableResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 148);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobHookRequest
 */
export type UpdateJobHookRequest = Message<"mgmt.v1alpha1.UpdateJobHookRequest"> & {
  /**
   * The unique identifier of the hook
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Name of the hook for display/reference.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Description of what this hook does.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Hook-type specific configuration.
   *
   * @generated from field: mgmt.v1alpha1.JobHookConfig config = 4;
   */
  config?: JobHookConfig;

  /**
   * Whether or not the hook is enabled.
   *
   * @generated from field: bool enabled = 5;
   */
  enabled: boolean;

  /**
   * The priority of the hook (0-100). This determines the execution order. Lower values are higher priority (priority=0 is the highest).
   * Tie Breaking is determined by the following: (priority, created_at, id) in ascending order.
   *
   * @generated from field: uint32 priority = 6;
   */
  priority: number;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobHookRequest.
 * Use `create(UpdateJobHookRequestSchema)` to create a new message.
 */
export const UpdateJobHookRequestSchema: GenMessage<UpdateJobHookRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 149);

/**
 * @generated from message mgmt.v1alpha1.UpdateJobHookResponse
 */
export type UpdateJobHookResponse = Message<"mgmt.v1alpha1.UpdateJobHookResponse"> & {
  /**
   * The updated job hook
   *
   * @generated from field: mgmt.v1alpha1.JobHook hook = 1;
   */
  hook?: JobHook;
};

/**
 * Describes the message mgmt.v1alpha1.UpdateJobHookResponse.
 * Use `create(UpdateJobHookResponseSchema)` to create a new message.
 */
export const UpdateJobHookResponseSchema: GenMessage<UpdateJobHookResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 150);

/**
 * @generated from message mgmt.v1alpha1.SetJobHookEnabledRequest
 */
export type SetJobHookEnabledRequest = Message<"mgmt.v1alpha1.SetJobHookEnabledRequest"> & {
  /**
   * The unique identifier of the hook
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Whether or not the hook is enabled.
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobHookEnabledRequest.
 * Use `create(SetJobHookEnabledRequestSchema)` to create a new message.
 */
export const SetJobHookEnabledRequestSchema: GenMessage<SetJobHookEnabledRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 151);

/**
 * @generated from message mgmt.v1alpha1.SetJobHookEnabledResponse
 */
export type SetJobHookEnabledResponse = Message<"mgmt.v1alpha1.SetJobHookEnabledResponse"> & {
  /**
   * The updated job hook
   *
   * @generated from field: mgmt.v1alpha1.JobHook hook = 1;
   */
  hook?: JobHook;
};

/**
 * Describes the message mgmt.v1alpha1.SetJobHookEnabledResponse.
 * Use `create(SetJobHookEnabledResponseSchema)` to create a new message.
 */
export const SetJobHookEnabledResponseSchema: GenMessage<SetJobHookEnabledResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 152);

/**
 * @generated from message mgmt.v1alpha1.GetActiveJobHooksByTimingRequest
 */
export type GetActiveJobHooksByTimingRequest = Message<"mgmt.v1alpha1.GetActiveJobHooksByTimingRequest"> & {
  /**
   * The unique identifier of the job
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * The timing desired.
   *
   * @generated from field: mgmt.v1alpha1.GetActiveJobHooksByTimingRequest.Timing timing = 2;
   */
  timing: GetActiveJobHooksByTimingRequest_Timing;
};

/**
 * Describes the message mgmt.v1alpha1.GetActiveJobHooksByTimingRequest.
 * Use `create(GetActiveJobHooksByTimingRequestSchema)` to create a new message.
 */
export const GetActiveJobHooksByTimingRequestSchema: GenMessage<GetActiveJobHooksByTimingRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 153);

/**
 * @generated from enum mgmt.v1alpha1.GetActiveJobHooksByTimingRequest.Timing
 */
export enum GetActiveJobHooksByTimingRequest_Timing {
  /**
   * If unspecified, returns all active job hooks
   *
   * @generated from enum value: TIMING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Only returns presync hooks
   *
   * @generated from enum value: TIMING_PRESYNC = 1;
   */
  PRESYNC = 1,

  /**
   * Only returns postsync hooks
   *
   * @generated from enum value: TIMING_POSTSYNC = 2;
   */
  POSTSYNC = 2,
}

/**
 * Describes the enum mgmt.v1alpha1.GetActiveJobHooksByTimingRequest.Timing.
 */
export const GetActiveJobHooksByTimingRequest_TimingSchema: GenEnum<GetActiveJobHooksByTimingRequest_Timing> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 153, 0);

/**
 * @generated from message mgmt.v1alpha1.GetActiveJobHooksByTimingResponse
 */
export type GetActiveJobHooksByTimingResponse = Message<"mgmt.v1alpha1.GetActiveJobHooksByTimingResponse"> & {
  /**
   * The active job hooks
   *
   * @generated from field: repeated mgmt.v1alpha1.JobHook hooks = 1;
   */
  hooks: JobHook[];
};

/**
 * Describes the message mgmt.v1alpha1.GetActiveJobHooksByTimingResponse.
 * Use `create(GetActiveJobHooksByTimingResponseSchema)` to create a new message.
 */
export const GetActiveJobHooksByTimingResponseSchema: GenMessage<GetActiveJobHooksByTimingResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 154);

/**
 * @generated from message mgmt.v1alpha1.GetPiiDetectionReportRequest
 */
export type GetPiiDetectionReportRequest = Message<"mgmt.v1alpha1.GetPiiDetectionReportRequest"> & {
  /**
   * The unique identifier of the job run
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  /**
   * The unique identifier of the account
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;
};

/**
 * Describes the message mgmt.v1alpha1.GetPiiDetectionReportRequest.
 * Use `create(GetPiiDetectionReportRequestSchema)` to create a new message.
 */
export const GetPiiDetectionReportRequestSchema: GenMessage<GetPiiDetectionReportRequest> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 155);

/**
 * @generated from message mgmt.v1alpha1.GetPiiDetectionReportResponse
 */
export type GetPiiDetectionReportResponse = Message<"mgmt.v1alpha1.GetPiiDetectionReportResponse"> & {
  /**
   * The pii detection report
   *
   * @generated from field: mgmt.v1alpha1.PiiDetectionReport report = 1;
   */
  report?: PiiDetectionReport;
};

/**
 * Describes the message mgmt.v1alpha1.GetPiiDetectionReportResponse.
 * Use `create(GetPiiDetectionReportResponseSchema)` to create a new message.
 */
export const GetPiiDetectionReportResponseSchema: GenMessage<GetPiiDetectionReportResponse> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 156);

/**
 * The pii detection report
 *
 * @generated from message mgmt.v1alpha1.PiiDetectionReport
 */
export type PiiDetectionReport = Message<"mgmt.v1alpha1.PiiDetectionReport"> & {
  /**
   * The report for each table where PII was detected. If no PII was detected, the table will not be included.
   *
   * @generated from field: repeated mgmt.v1alpha1.PiiDetectionReport.TableReport tables = 1;
   */
  tables: PiiDetectionReport_TableReport[];
};

/**
 * Describes the message mgmt.v1alpha1.PiiDetectionReport.
 * Use `create(PiiDetectionReportSchema)` to create a new message.
 */
export const PiiDetectionReportSchema: GenMessage<PiiDetectionReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 157);

/**
 * The report for a table
 *
 * @generated from message mgmt.v1alpha1.PiiDetectionReport.TableReport
 */
export type PiiDetectionReport_TableReport = Message<"mgmt.v1alpha1.PiiDetectionReport.TableReport"> & {
  /**
   * The schema of the table
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * The name of the table
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * The report for each column
   *
   * @generated from field: repeated mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport columns = 3;
   */
  columns: PiiDetectionReport_TableReport_ColumnReport[];
};

/**
 * Describes the message mgmt.v1alpha1.PiiDetectionReport.TableReport.
 * Use `create(PiiDetectionReport_TableReportSchema)` to create a new message.
 */
export const PiiDetectionReport_TableReportSchema: GenMessage<PiiDetectionReport_TableReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 157, 0);

/**
 * The report for a column
 *
 * @generated from message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport
 */
export type PiiDetectionReport_TableReport_ColumnReport = Message<"mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport"> & {
  /**
   * The name of the column
   *
   * @generated from field: string column = 1;
   */
  column: string;

  /**
   * The regex report. Will be empty if no regex matched the column name.
   *
   * @generated from field: optional mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.Regex regex_report = 2;
   */
  regexReport?: PiiDetectionReport_TableReport_ColumnReport_Regex;

  /**
   * The LLM report. Will be empty if the LLM determined the column name (and optionally the data) was not PII.
   *
   * @generated from field: optional mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.LLM llm_report = 3;
   */
  llmReport?: PiiDetectionReport_TableReport_ColumnReport_LLM;
};

/**
 * Describes the message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.
 * Use `create(PiiDetectionReport_TableReport_ColumnReportSchema)` to create a new message.
 */
export const PiiDetectionReport_TableReport_ColumnReportSchema: GenMessage<PiiDetectionReport_TableReport_ColumnReport> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 157, 0, 0);

/**
 * The regex report
 *
 * @generated from message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.Regex
 */
export type PiiDetectionReport_TableReport_ColumnReport_Regex = Message<"mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.Regex"> & {
  /**
   * The category of the column
   *
   * @generated from field: string category = 1;
   */
  category: string;
};

/**
 * Describes the message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.Regex.
 * Use `create(PiiDetectionReport_TableReport_ColumnReport_RegexSchema)` to create a new message.
 */
export const PiiDetectionReport_TableReport_ColumnReport_RegexSchema: GenMessage<PiiDetectionReport_TableReport_ColumnReport_Regex> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 157, 0, 0, 0);

/**
 * The LLM report
 *
 * @generated from message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.LLM
 */
export type PiiDetectionReport_TableReport_ColumnReport_LLM = Message<"mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.LLM"> & {
  /**
   * The category of the column
   *
   * @generated from field: string category = 1;
   */
  category: string;

  /**
   * The confidence of the column from 0.0-1.0
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;
};

/**
 * Describes the message mgmt.v1alpha1.PiiDetectionReport.TableReport.ColumnReport.LLM.
 * Use `create(PiiDetectionReport_TableReport_ColumnReport_LLMSchema)` to create a new message.
 */
export const PiiDetectionReport_TableReport_ColumnReport_LLMSchema: GenMessage<PiiDetectionReport_TableReport_ColumnReport_LLM> = /*@__PURE__*/
  messageDesc(file_mgmt_v1alpha1_job, 157, 0, 0, 1);

/**
 * @generated from enum mgmt.v1alpha1.JobStatus
 */
export enum JobStatus {
  /**
   * @generated from enum value: JOB_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: JOB_STATUS_ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * @generated from enum value: JOB_STATUS_PAUSED = 3;
   */
  PAUSED = 3,

  /**
   * @generated from enum value: JOB_STATUS_DISABLED = 4;
   */
  DISABLED = 4,
}

/**
 * Describes the enum mgmt.v1alpha1.JobStatus.
 */
export const JobStatusSchema: GenEnum<JobStatus> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 0);

/**
 * @generated from enum mgmt.v1alpha1.ActivityStatus
 */
export enum ActivityStatus {
  /**
   * @generated from enum value: ACTIVITY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVITY_STATUS_SCHEDULED = 1;
   */
  SCHEDULED = 1,

  /**
   * @generated from enum value: ACTIVITY_STATUS_STARTED = 2;
   */
  STARTED = 2,

  /**
   * @generated from enum value: ACTIVITY_STATUS_CANCELED = 3;
   */
  CANCELED = 3,

  /**
   * @generated from enum value: ACTIVITY_STATUS_FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum mgmt.v1alpha1.ActivityStatus.
 */
export const ActivityStatusSchema: GenEnum<ActivityStatus> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 1);

/**
 * An enumeration of job run statuses.
 *
 * @generated from enum mgmt.v1alpha1.JobRunStatus
 */
export enum JobRunStatus {
  /**
   * if the job run status is unknown
   *
   * @generated from enum value: JOB_RUN_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * the run is pending and has not started yet
   *
   * @generated from enum value: JOB_RUN_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * the run is currently in progress
   *
   * @generated from enum value: JOB_RUN_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * the run has successfully completed
   *
   * @generated from enum value: JOB_RUN_STATUS_COMPLETE = 3;
   */
  COMPLETE = 3,

  /**
   * the run ended with an error
   *
   * @generated from enum value: JOB_RUN_STATUS_ERROR = 4;
   */
  ERROR = 4,

  /**
   * the run was cancelled
   *
   * @generated from enum value: JOB_RUN_STATUS_CANCELED = 5;
   */
  CANCELED = 5,

  /**
   * the run was terminated
   *
   * @generated from enum value: JOB_RUN_STATUS_TERMINATED = 6;
   */
  TERMINATED = 6,

  /**
   * the run ended in failure
   *
   * @generated from enum value: JOB_RUN_STATUS_FAILED = 7;
   */
  FAILED = 7,

  /**
   * the run was ended pre-maturely due to timeout
   *
   * @generated from enum value: JOB_RUN_STATUS_TIMED_OUT = 8;
   */
  TIMED_OUT = 8,
}

/**
 * Describes the enum mgmt.v1alpha1.JobRunStatus.
 */
export const JobRunStatusSchema: GenEnum<JobRunStatus> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 2);

/**
 * @generated from enum mgmt.v1alpha1.LogWindow
 */
export enum LogWindow {
  /**
   * @generated from enum value: LOG_WINDOW_NO_TIME_UNSPECIFIED = 0;
   */
  NO_TIME_UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOG_WINDOW_FIFTEEN_MIN = 1;
   */
  FIFTEEN_MIN = 1,

  /**
   * @generated from enum value: LOG_WINDOW_ONE_HOUR = 2;
   */
  ONE_HOUR = 2,

  /**
   * @generated from enum value: LOG_WINDOW_ONE_DAY = 3;
   */
  ONE_DAY = 3,
}

/**
 * Describes the enum mgmt.v1alpha1.LogWindow.
 */
export const LogWindowSchema: GenEnum<LogWindow> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 3);

/**
 * @generated from enum mgmt.v1alpha1.LogLevel
 */
export enum LogLevel {
  /**
   * @generated from enum value: LOG_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOG_LEVEL_DEBUG = 1;
   */
  DEBUG = 1,

  /**
   * @generated from enum value: LOG_LEVEL_INFO = 2;
   */
  INFO = 2,

  /**
   * @generated from enum value: LOG_LEVEL_WARN = 3;
   */
  WARN = 3,

  /**
   * @generated from enum value: LOG_LEVEL_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum mgmt.v1alpha1.LogLevel.
 */
export const LogLevelSchema: GenEnum<LogLevel> = /*@__PURE__*/
  enumDesc(file_mgmt_v1alpha1_job, 4);

/**
 * Service that handles jobs, runs, and hooks
 *
 * @generated from service mgmt.v1alpha1.JobService
 */
export const JobService: GenService<{
  /**
   * Returns a list of jobs by either account or job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobs
   */
  getJobs: {
    methodKind: "unary";
    input: typeof GetJobsRequestSchema;
    output: typeof GetJobsResponseSchema;
  },
  /**
   * Returns a specific job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof GetJobResponseSchema;
  },
  /**
   * Creates a new job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.CreateJob
   */
  createJob: {
    methodKind: "unary";
    input: typeof CreateJobRequestSchema;
    output: typeof CreateJobResponseSchema;
  },
  /**
   * Deletes a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.DeleteJob
   */
  deleteJob: {
    methodKind: "unary";
    input: typeof DeleteJobRequestSchema;
    output: typeof DeleteJobResponseSchema;
  },
  /**
   * Checks if a job name is available
   *
   * @generated from rpc mgmt.v1alpha1.JobService.IsJobNameAvailable
   */
  isJobNameAvailable: {
    methodKind: "unary";
    input: typeof IsJobNameAvailableRequestSchema;
    output: typeof IsJobNameAvailableResponseSchema;
  },
  /**
   * Updates the schedule of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.UpdateJobSchedule
   */
  updateJobSchedule: {
    methodKind: "unary";
    input: typeof UpdateJobScheduleRequestSchema;
    output: typeof UpdateJobScheduleResponseSchema;
  },
  /**
   * Updates the source connection of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.UpdateJobSourceConnection
   */
  updateJobSourceConnection: {
    methodKind: "unary";
    input: typeof UpdateJobSourceConnectionRequestSchema;
    output: typeof UpdateJobSourceConnectionResponseSchema;
  },
  /**
   * Sets the source sql connection subsets of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetJobSourceSqlConnectionSubsets
   */
  setJobSourceSqlConnectionSubsets: {
    methodKind: "unary";
    input: typeof SetJobSourceSqlConnectionSubsetsRequestSchema;
    output: typeof SetJobSourceSqlConnectionSubsetsResponseSchema;
  },
  /**
   * Updates the destination connection of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.UpdateJobDestinationConnection
   */
  updateJobDestinationConnection: {
    methodKind: "unary";
    input: typeof UpdateJobDestinationConnectionRequestSchema;
    output: typeof UpdateJobDestinationConnectionResponseSchema;
  },
  /**
   * Deletes the destination connection of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.DeleteJobDestinationConnection
   */
  deleteJobDestinationConnection: {
    methodKind: "unary";
    input: typeof DeleteJobDestinationConnectionRequestSchema;
    output: typeof DeleteJobDestinationConnectionResponseSchema;
  },
  /**
   * Creates the destination connections of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.CreateJobDestinationConnections
   */
  createJobDestinationConnections: {
    methodKind: "unary";
    input: typeof CreateJobDestinationConnectionsRequestSchema;
    output: typeof CreateJobDestinationConnectionsResponseSchema;
  },
  /**
   * Pauses or unpauses a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.PauseJob
   */
  pauseJob: {
    methodKind: "unary";
    input: typeof PauseJobRequestSchema;
    output: typeof PauseJobResponseSchema;
  },
  /**
   * Returns a list of recently invoked job runs based on the Temporal cron scheduler. This will return a list of job runs that include archived runs
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRecentRuns
   */
  getJobRecentRuns: {
    methodKind: "unary";
    input: typeof GetJobRecentRunsRequestSchema;
    output: typeof GetJobRecentRunsResponseSchema;
  },
  /**
   * Returns a list of runs that are scheduled for execution based on the Temporal cron scheduler.
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobNextRuns
   */
  getJobNextRuns: {
    methodKind: "unary";
    input: typeof GetJobNextRunsRequestSchema;
    output: typeof GetJobNextRunsResponseSchema;
  },
  /**
   * Returns the status of a job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobStatus
   */
  getJobStatus: {
    methodKind: "unary";
    input: typeof GetJobStatusRequestSchema;
    output: typeof GetJobStatusResponseSchema;
  },
  /**
   * Returns the statuses of jobs within an account
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobStatuses
   */
  getJobStatuses: {
    methodKind: "unary";
    input: typeof GetJobStatusesRequestSchema;
    output: typeof GetJobStatusesResponseSchema;
  },
  /**
   * Returns a list of job runs by either account or job
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRuns
   */
  getJobRuns: {
    methodKind: "unary";
    input: typeof GetJobRunsRequestSchema;
    output: typeof GetJobRunsResponseSchema;
  },
  /**
   * Returns a list of events for a job run to understand more details of the run itself
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRunEvents
   */
  getJobRunEvents: {
    methodKind: "unary";
    input: typeof GetJobRunEventsRequestSchema;
    output: typeof GetJobRunEventsResponseSchema;
  },
  /**
   * Returns a specific job run, along with any of its pending activities
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRun
   */
  getJobRun: {
    methodKind: "unary";
    input: typeof GetJobRunRequestSchema;
    output: typeof GetJobRunResponseSchema;
  },
  /**
   * Deletes a job run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.DeleteJobRun
   */
  deleteJobRun: {
    methodKind: "unary";
    input: typeof DeleteJobRunRequestSchema;
    output: typeof DeleteJobRunResponseSchema;
  },
  /**
   * Creates a new job run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.CreateJobRun
   */
  createJobRun: {
    methodKind: "unary";
    input: typeof CreateJobRunRequestSchema;
    output: typeof CreateJobRunResponseSchema;
  },
  /**
   * Cancels a job run. This is a graceful termination and allows the workflow to clean up and exit gracefully.
   *
   * @generated from rpc mgmt.v1alpha1.JobService.CancelJobRun
   */
  cancelJobRun: {
    methodKind: "unary";
    input: typeof CancelJobRunRequestSchema;
    output: typeof CancelJobRunResponseSchema;
  },
  /**
   * Terminates a job run. This is an immediate termination and will not allow the workflow to clean up and exit gracefully.
   *
   * @generated from rpc mgmt.v1alpha1.JobService.TerminateJobRun
   */
  terminateJobRun: {
    methodKind: "unary";
    input: typeof TerminateJobRunRequestSchema;
    output: typeof TerminateJobRunResponseSchema;
  },
  /**
   * Returns a stream of logs from the worker nodes that pertain to a specific job run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRunLogsStream
   */
  getJobRunLogsStream: {
    methodKind: "server_streaming";
    input: typeof GetJobRunLogsStreamRequestSchema;
    output: typeof GetJobRunLogsStreamResponseSchema;
  },
  /**
   * Returns a list of logs from the worker nodes that pertain to a specific job run.
   * Equivalent to the stream endpoint, but runs in a unary fashion.
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobRunLogs
   */
  getJobRunLogs: {
    methodKind: "unary";
    input: typeof GetJobRunLogsRequestSchema;
    output: typeof GetJobRunLogsResponseSchema;
  },
  /**
   * Set any job workflow options. Must provide entire object as is it will fully override the previous configuration
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetJobWorkflowOptions
   */
  setJobWorkflowOptions: {
    methodKind: "unary";
    input: typeof SetJobWorkflowOptionsRequestSchema;
    output: typeof SetJobWorkflowOptionsResponseSchema;
  },
  /**
   * Set the job sync options. Must provide entire object as it will fully override the previous configuration
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetJobSyncOptions
   */
  setJobSyncOptions: {
    methodKind: "unary";
    input: typeof SetJobSyncOptionsRequestSchema;
    output: typeof SetJobSyncOptionsResponseSchema;
  },
  /**
   * Validates that the jobmapping configured can run with table constraints
   *
   * @generated from rpc mgmt.v1alpha1.JobService.ValidateJobMappings
   */
  validateJobMappings: {
    methodKind: "unary";
    input: typeof ValidateJobMappingsRequestSchema;
    output: typeof ValidateJobMappingsResponseSchema;
  },
  /**
   * Validates that the schema is compatible with the job mappings
   *
   * @generated from rpc mgmt.v1alpha1.JobService.ValidateSchema
   */
  validateSchema: {
    methodKind: "unary";
    input: typeof ValidateSchemaRequestSchema;
    output: typeof ValidateSchemaResponseSchema;
  },
  /**
   * Gets a run context to be used by a workflow run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetRunContext
   */
  getRunContext: {
    methodKind: "unary";
    input: typeof GetRunContextRequestSchema;
    output: typeof GetRunContextResponseSchema;
  },
  /**
   * Sets a run context to be used by a workflow run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetRunContext
   */
  setRunContext: {
    methodKind: "unary";
    input: typeof SetRunContextRequestSchema;
    output: typeof SetRunContextResponseSchema;
  },
  /**
   * Sets a stream of run contexts to be used by a workflow run
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetRunContexts
   */
  setRunContexts: {
    methodKind: "client_streaming";
    input: typeof SetRunContextsRequestSchema;
    output: typeof SetRunContextsResponseSchema;
  },
  /**
   * Retrieves all job hooks
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobHooks
   */
  getJobHooks: {
    methodKind: "unary";
    input: typeof GetJobHooksRequestSchema;
    output: typeof GetJobHooksResponseSchema;
  },
  /**
   * Retrieves a specific job hook
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetJobHook
   */
  getJobHook: {
    methodKind: "unary";
    input: typeof GetJobHookRequestSchema;
    output: typeof GetJobHookResponseSchema;
  },
  /**
   * Creates a new job hook
   *
   * @generated from rpc mgmt.v1alpha1.JobService.CreateJobHook
   */
  createJobHook: {
    methodKind: "unary";
    input: typeof CreateJobHookRequestSchema;
    output: typeof CreateJobHookResponseSchema;
  },
  /**
   * Removes a job hook
   *
   * @generated from rpc mgmt.v1alpha1.JobService.DeleteJobHook
   */
  deleteJobHook: {
    methodKind: "unary";
    input: typeof DeleteJobHookRequestSchema;
    output: typeof DeleteJobHookResponseSchema;
  },
  /**
   * Check if a specific job hook name is available
   *
   * @generated from rpc mgmt.v1alpha1.JobService.IsJobHookNameAvailable
   */
  isJobHookNameAvailable: {
    methodKind: "unary";
    input: typeof IsJobHookNameAvailableRequestSchema;
    output: typeof IsJobHookNameAvailableResponseSchema;
  },
  /**
   * Updates a job hook
   *
   * @generated from rpc mgmt.v1alpha1.JobService.UpdateJobHook
   */
  updateJobHook: {
    methodKind: "unary";
    input: typeof UpdateJobHookRequestSchema;
    output: typeof UpdateJobHookResponseSchema;
  },
  /**
   * Enables or disables a job hook
   *
   * @generated from rpc mgmt.v1alpha1.JobService.SetJobHookEnabled
   */
  setJobHookEnabled: {
    methodKind: "unary";
    input: typeof SetJobHookEnabledRequestSchema;
    output: typeof SetJobHookEnabledResponseSchema;
  },
  /**
   * Returns job hooks that are enabled by a specific timing. They will be sorted by priority, created_at, and id ascending.
   *
   * @generated from rpc mgmt.v1alpha1.JobService.GetActiveJobHooksByTiming
   */
  getActiveJobHooksByTiming: {
    methodKind: "unary";
    input: typeof GetActiveJobHooksByTimingRequestSchema;
    output: typeof GetActiveJobHooksByTimingResponseSchema;
  },
  /**
   * @generated from rpc mgmt.v1alpha1.JobService.GetPiiDetectionReport
   */
  getPiiDetectionReport: {
    methodKind: "unary";
    input: typeof GetPiiDetectionReportRequestSchema;
    output: typeof GetPiiDetectionReportResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mgmt_v1alpha1_job, 0);

