// @generated by protoc-gen-connect-query v2.0.1 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/auth.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */

import { AuthService } from "./auth_pb.js";

/**
 * Used by the CLI to login to Neosync with OAuth.
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.LoginCli
 */
export const loginCli = AuthService.method.loginCli;

/**
 * Used by the CLI to refresh an expired Neosync accesss token.
 * This should only be used if an access token was previously retrieved from the `LoginCli` or `RefreshCli` methods.
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.RefreshCli
 */
export const refreshCli = AuthService.method.refreshCli;

/**
 * Empty endpoint to simply check if the provided access token is valid
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.CheckToken
 */
export const checkToken = AuthService.method.checkToken;

/**
 * Used by the CLI to retrieve Auth Issuer information
 * @deprecated
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.GetCliIssuer
 */
export const getCliIssuer = AuthService.method.getCliIssuer;

/**
 * Used by the CLI to retrieve an Authorize URL for use with OAuth login.
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.GetAuthorizeUrl
 */
export const getAuthorizeUrl = AuthService.method.getAuthorizeUrl;

/**
 * Returns the auth status of the API server. Whether or not the backend has authentication enabled.
 * This is used by clients to make decisions on whether or not they should send access tokens to the API.
 *
 * @generated from rpc mgmt.v1alpha1.AuthService.GetAuthStatus
 */
export const getAuthStatus = AuthService.method.getAuthStatus;
