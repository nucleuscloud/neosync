// @generated by protoc-gen-connect-query v2.0.1 with parameter "target=ts,import_extension=.js"
// @generated from file mgmt/v1alpha1/connection.proto (package mgmt.v1alpha1, syntax proto3)
/* eslint-disable */

import { ConnectionService } from "./connection_pb.js";

/**
 * Returns a list of connections associated with the account
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnections
 */
export const getConnections = ConnectionService.method.getConnections;

/**
 * Returns a single connection
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.GetConnection
 */
export const getConnection = ConnectionService.method.getConnection;

/**
 * Creates a new connection
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.CreateConnection
 */
export const createConnection = ConnectionService.method.createConnection;

/**
 * Updates an existing connection
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.UpdateConnection
 */
export const updateConnection = ConnectionService.method.updateConnection;

/**
 * Removes a connection from the system.
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.DeleteConnection
 */
export const deleteConnection = ConnectionService.method.deleteConnection;

/**
 * Connections have friendly names, this method checks if the requested name is available in the system based on the account
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.IsConnectionNameAvailable
 */
export const isConnectionNameAvailable = ConnectionService.method.isConnectionNameAvailable;

/**
 * Checks if the connection config is connectable by the backend.
 * Used mostly to verify that a connection is valid prior to creating a Connection object.
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.CheckConnectionConfig
 */
export const checkConnectionConfig = ConnectionService.method.checkConnectionConfig;

/**
 * Checks if the connection id is connectable by the backend.
 * Used to verify that a connection is still connectable.
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.CheckConnectionConfigById
 */
export const checkConnectionConfigById = ConnectionService.method.checkConnectionConfigById;

/**
 * Checks a constructed SQL query against a sql-based connection to see if it's valid based on that connection's data schema
 * This is useful when constructing subsets to see if the WHERE clause is correct
 *
 * @generated from rpc mgmt.v1alpha1.ConnectionService.CheckSqlQuery
 */
export const checkSqlQuery = ConnectionService.method.checkSqlQuery;
