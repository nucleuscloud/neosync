---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: taskruns.neosync.dev
spec:
  group: neosync.dev
  names:
    kind: TaskRun
    listKind: TaskRunList
    plural: taskruns
    singular: taskrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TaskRun is the Schema for the taskruns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TaskRunSpec defines the desired state of TaskRun
            properties:
              dependsOn:
                items:
                  properties:
                    taskName:
                      type: string
                  required:
                  - taskName
                  type: object
                type: array
              podTemplate:
                properties:
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              task:
                description: Foo is an example field of TaskRun. Edit taskrun_types.go
                  to remove/update
                properties:
                  taskRef:
                    properties:
                      name:
                        description: Kind string `json:"kind"`
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - task
            type: object
          status:
            description: TaskRunStatus defines the observed state of TaskRun
            properties:
              completionTime:
                format: date-time
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              jobStatus:
                description: JobStatus represents the current state of a Job.
                properties:
                  active:
                    description: The number of pending and running pods.
                    format: int32
                    type: integer
                  completedIndexes:
                    description: completedIndexes holds the completed indexes when
                      .spec.completionMode = "Indexed" in a text format. The indexes
                      are represented as decimal integers separated by commas. The
                      numbers are listed in increasing order. Three or more consecutive
                      numbers are compressed and represented by the first and last
                      element of the series, separated by a hyphen. For example, if
                      the completed indexes are 1, 3, 4, 5 and 7, they are represented
                      as "1,3-5,7".
                    type: string
                  completionTime:
                    description: Represents time when the job was completed. It is
                      not guaranteed to be set in happens-before order across separate
                      operations. It is represented in RFC3339 form and is in UTC.
                      The completion time is only set when the job finishes successfully.
                    format: date-time
                    type: string
                  conditions:
                    description: 'The latest available observations of an object''s
                      current state. When a Job fails, one of the conditions will
                      have type "Failed" and status true. When a Job is suspended,
                      one of the conditions will have type "Suspended" and status
                      true; when the Job is resumed, the status of this condition
                      will become false. When a Job is completed, one of the conditions
                      will have type "Complete" and status true. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                    items:
                      description: JobCondition describes current state of a job.
                      properties:
                        lastProbeTime:
                          description: Last time the condition was checked.
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: Last time the condition transit from one status
                            to another.
                          format: date-time
                          type: string
                        message:
                          description: Human readable message indicating details about
                            last transition.
                          type: string
                        reason:
                          description: (brief) reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of job condition, Complete or Failed.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  failed:
                    description: The number of pods which reached phase Failed.
                    format: int32
                    type: integer
                  failedIndexes:
                    description: FailedIndexes holds the failed indexes when backoffLimitPerIndex=true.
                      The indexes are represented in the text format analogous as
                      for the `completedIndexes` field, ie. they are kept as decimal
                      integers separated by commas. The numbers are listed in increasing
                      order. Three or more consecutive numbers are compressed and
                      represented by the first and last element of the series, separated
                      by a hyphen. For example, if the failed indexes are 1, 3, 4,
                      5 and 7, they are represented as "1,3-5,7". This field is alpha-level.
                      It can be used when the `JobBackoffLimitPerIndex` feature gate
                      is enabled (disabled by default).
                    type: string
                  ready:
                    description: "The number of pods which have a Ready condition.
                      \n This field is beta-level. The job controller populates the
                      field when the feature gate JobReadyPods is enabled (enabled
                      by default)."
                    format: int32
                    type: integer
                  startTime:
                    description: Represents time when the job controller started processing
                      a job. When a Job is created in the suspended state, this field
                      is not set until the first time it is resumed. This field is
                      reset every time a Job is resumed from suspension. It is represented
                      in RFC3339 form and is in UTC.
                    format: date-time
                    type: string
                  succeeded:
                    description: The number of pods which reached phase Succeeded.
                    format: int32
                    type: integer
                  terminating:
                    description: "The number of pods which are terminating (in phase
                      Pending or Running and have a deletionTimestamp). \n This field
                      is alpha-level. The job controller populates the field when
                      the feature gate JobPodReplacementPolicy is enabled (disabled
                      by default)."
                    format: int32
                    type: integer
                  uncountedTerminatedPods:
                    description: "uncountedTerminatedPods holds the UIDs of Pods that
                      have terminated but the job controller hasn't yet accounted
                      for in the status counters. \n The job controller creates pods
                      with a finalizer. When a pod terminates (succeeded or failed),
                      the controller does three steps to account for it in the job
                      status: \n 1. Add the pod UID to the arrays in this field. 2.
                      Remove the pod finalizer. 3. Remove the pod UID from the arrays
                      while increasing the corresponding counter. \n Old jobs might
                      not be tracked using this field, in which case the field remains
                      null."
                    properties:
                      failed:
                        description: failed holds UIDs of failed Pods.
                        items:
                          description: UID is a type that holds unique ID values,
                            including UUIDs.  Because we don't ONLY use UUIDs, this
                            is an alias to string.  Being a type captures intent and
                            helps make sure that UIDs and names do not get conflated.
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      succeeded:
                        description: succeeded holds UIDs of succeeded Pods.
                        items:
                          description: UID is a type that holds unique ID values,
                            including UUIDs.  Because we don't ONLY use UUIDs, this
                            is an alias to string.  Being a type captures intent and
                            helps make sure that UIDs and names do not get conflated.
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                type: object
              startTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
