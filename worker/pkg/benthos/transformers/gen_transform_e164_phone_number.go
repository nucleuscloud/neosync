
// Code generated by Neosync neosync_transformer_generator.go. DO NOT EDIT.
// source: transform_e164_phone_number.go

package transformers

import (
	"fmt"
	
	transformer_utils "github.com/nucleuscloud/neosync/worker/pkg/benthos/transformers/utils"
	"github.com/nucleuscloud/neosync/worker/pkg/rng"
	
)

type TransformE164PhoneNumber struct{}

type TransformE164PhoneNumberOpts struct {
	randomizer     rng.Rand
	
	preserveLength bool
	maxLength *int64
}

func NewTransformE164PhoneNumber() *TransformE164PhoneNumber {
	return &TransformE164PhoneNumber{}
}

func NewTransformE164PhoneNumberOpts(
	preserveLength bool,
	maxLength *int64,
  seedArg *int64,
) (*TransformE164PhoneNumberOpts, error) {
	seed, err := transformer_utils.GetSeedOrDefault(seedArg)
  if err != nil {
    return nil, fmt.Errorf("unable to generate seed: %w", err)
	}
	
	return &TransformE164PhoneNumberOpts{
		preserveLength: preserveLength,
		maxLength: maxLength,
		randomizer: rng.New(seed),	
	}, nil
}

func (t *TransformE164PhoneNumber) GetJsTemplateData() (*TemplateData, error) {
	return &TemplateData{
		Name: "transformE164PhoneNumber",
		Description: "Transforms an existing E164 formatted phone number.",
		Example: "",
	}, nil
}

func (t *TransformE164PhoneNumber) ParseOptions(opts map[string]any) (any, error) {
	transformerOpts := &TransformE164PhoneNumberOpts{}

	if _, ok := opts["preserveLength"].(bool); !ok {
		return nil, fmt.Errorf("missing required argument. function: %s argument: %s", "transformE164PhoneNumber", "preserveLength")
	}
	preserveLength := opts["preserveLength"].(bool)
	transformerOpts.preserveLength = preserveLength

	var maxLength *int64
	if arg, ok := opts["maxLength"].(int64); ok {
		maxLength = &arg
	}
	transformerOpts.maxLength = maxLength

	var seedArg *int64
	if seedValue, ok := opts["seed"].(int64); ok {
			seedArg = &seedValue
	}
	seed, err := transformer_utils.GetSeedOrDefault(seedArg)
	if err != nil {
		return nil, fmt.Errorf("unable to generate seed: %w", err)
	}
	transformerOpts.randomizer = rng.New(seed)

	return transformerOpts, nil
}
