
// Code generated by Neosync neosync_transformer_generator.go. DO NOT EDIT.
// source: generate_unix_timestamp.go

package transformers

import (
	"fmt"
	
	transformer_utils "github.com/nucleuscloud/neosync/worker/pkg/benthos/transformers/utils"
	"github.com/nucleuscloud/neosync/worker/pkg/rng"
	
)

type GenerateUnixTimestamp struct{}

type GenerateUnixTimestampOpts struct {
	randomizer     rng.Rand
	
}

func NewGenerateUnixTimestamp() *GenerateUnixTimestamp {
	return &GenerateUnixTimestamp{}
}

func (t *GenerateUnixTimestamp) GetJsTemplateData() (*TemplateData, error) {
	return &TemplateData{
		Name: "generateUnixTimestamp",
		Description: "Randomly generates a Unix timestamp.",
		Example: "",
	}, nil
}

func (t *GenerateUnixTimestamp) ParseOptions(opts map[string]any) (any, error) {
	transformerOpts := &GenerateUnixTimestampOpts{}

	var seed int64
	seedArg, ok := opts["seed"].(int64)
	if ok {
		seed = seedArg
	} else {
		var err error
		seed, err = transformer_utils.GenerateCryptoSeed()
		if err != nil {
			return nil, fmt.Errorf("unable to generate seed: %w", err)
		}
	}
	transformerOpts.randomizer = rng.New(seed)

	return transformerOpts, nil
}
