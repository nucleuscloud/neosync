
// Code generated by Neosync neosync_transformer_generator.go. DO NOT EDIT.
// source: generate_sha256hash.go

package transformers

import (
	"strings"
	"fmt"
)

type GenerateSHA256Hash struct{}

type GenerateSHA256HashOpts struct {
}

func NewGenerateSHA256Hash() *GenerateSHA256Hash {
	return &GenerateSHA256Hash{}
}

func NewGenerateSHA256HashOpts(
) (*GenerateSHA256HashOpts, error) {
	return &GenerateSHA256HashOpts{	
	}, nil
}

func (o *GenerateSHA256HashOpts) BuildBloblangString(	
) string {
	fnStr := []string{
	}

	params := []any{
	}

	

	template := fmt.Sprintf("generate_sha256hash(%s)", strings.Join(fnStr, ","))
	return fmt.Sprintf(template, params...)
}

func (t *GenerateSHA256Hash) GetJsTemplateData() (*TemplateData, error) {
	return &TemplateData{
		Name: "generateSHA256Hash",
		Description: "Generates a random SHA256 hash and returns it as a string.",
		Example: "",
	}, nil
}

func (t *GenerateSHA256Hash) ParseOptions(opts map[string]any) (any, error) {
	transformerOpts := &GenerateSHA256HashOpts{}

	return transformerOpts, nil
}
