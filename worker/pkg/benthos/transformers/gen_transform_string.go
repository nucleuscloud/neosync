
// Code generated by Neosync neosync_transformer_generator.go. DO NOT EDIT.
// source: transform_string.go

package transformers

import (
	"fmt"
)

type TransformString struct{}

type TransformStringOpts struct {
	preserveLength bool
	minLength int64
	maxLength int64
}

func NewTransformString() *TransformString {
	return &TransformString{}
}

func (t *TransformString) GetJsTemplateData() (*TemplateData, error) {
	return &TemplateData{
		Name: "transformString",
		Description: "",
	}, nil
}

func (t *TransformString) ParseOptions(opts map[string]any) (any, error) {
	transformerOpts := &TransformStringOpts{}

	if _, ok := opts["preserveLength"].(bool); !ok {
		return nil, fmt.Errorf("missing required argument. argument: %s", "preserveLength")
	}
	preserveLength := opts["preserveLength"].(bool)
	transformerOpts.preserveLength = preserveLength

	if _, ok := opts["minLength"].(int64); !ok {
		return nil, fmt.Errorf("missing required argument. argument: %s", "minLength")
	}
	minLength := opts["minLength"].(int64)
	transformerOpts.minLength = minLength

	if _, ok := opts["maxLength"].(int64); !ok {
		return nil, fmt.Errorf("missing required argument. argument: %s", "maxLength")
	}
	maxLength := opts["maxLength"].(int64)
	transformerOpts.maxLength = maxLength

	return transformerOpts, nil
}
