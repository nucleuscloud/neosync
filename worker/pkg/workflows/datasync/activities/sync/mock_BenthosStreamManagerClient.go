// Code generated by mockery. DO NOT EDIT.

package sync_activity

import (
	mock "github.com/stretchr/testify/mock"
	service "github.com/warpstreamlabs/bento/public/service"
)

// MockBenthosStreamManagerClient is an autogenerated mock type for the BenthosStreamManagerClient type
type MockBenthosStreamManagerClient struct {
	mock.Mock
}

type MockBenthosStreamManagerClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBenthosStreamManagerClient) EXPECT() *MockBenthosStreamManagerClient_Expecter {
	return &MockBenthosStreamManagerClient_Expecter{mock: &_m.Mock}
}

// NewBenthosStreamFromBuilder provides a mock function with given fields: streambldr
func (_m *MockBenthosStreamManagerClient) NewBenthosStreamFromBuilder(streambldr *service.StreamBuilder) (BenthosStreamClient, error) {
	ret := _m.Called(streambldr)

	if len(ret) == 0 {
		panic("no return value specified for NewBenthosStreamFromBuilder")
	}

	var r0 BenthosStreamClient
	var r1 error
	if rf, ok := ret.Get(0).(func(*service.StreamBuilder) (BenthosStreamClient, error)); ok {
		return rf(streambldr)
	}
	if rf, ok := ret.Get(0).(func(*service.StreamBuilder) BenthosStreamClient); ok {
		r0 = rf(streambldr)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(BenthosStreamClient)
		}
	}

	if rf, ok := ret.Get(1).(func(*service.StreamBuilder) error); ok {
		r1 = rf(streambldr)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewBenthosStreamFromBuilder'
type MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call struct {
	*mock.Call
}

// NewBenthosStreamFromBuilder is a helper method to define mock.On call
//   - streambldr *service.StreamBuilder
func (_e *MockBenthosStreamManagerClient_Expecter) NewBenthosStreamFromBuilder(streambldr interface{}) *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call {
	return &MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call{Call: _e.mock.On("NewBenthosStreamFromBuilder", streambldr)}
}

func (_c *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call) Run(run func(streambldr *service.StreamBuilder)) *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*service.StreamBuilder))
	})
	return _c
}

func (_c *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call) Return(_a0 BenthosStreamClient, _a1 error) *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call) RunAndReturn(run func(*service.StreamBuilder) (BenthosStreamClient, error)) *MockBenthosStreamManagerClient_NewBenthosStreamFromBuilder_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBenthosStreamManagerClient creates a new instance of MockBenthosStreamManagerClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBenthosStreamManagerClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBenthosStreamManagerClient {
	mock := &MockBenthosStreamManagerClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
