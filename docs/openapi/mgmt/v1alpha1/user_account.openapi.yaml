openapi: 3.1.0
info:
  version: "0.4"
  title: mgmt.v1alpha1
paths:
  /mgmt.v1alpha1.UserAccountService/GetUser:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetUser
      operationId: mgmt.v1alpha1.UserAccountService.GetUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetUserResponse'
  /mgmt.v1alpha1.UserAccountService/SetUser:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: SetUser
      operationId: mgmt.v1alpha1.UserAccountService.SetUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.SetUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.SetUserResponse'
  /mgmt.v1alpha1.UserAccountService/GetUserAccounts:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetUserAccounts
      operationId: mgmt.v1alpha1.UserAccountService.GetUserAccounts
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetUserAccountsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetUserAccountsResponse'
  /mgmt.v1alpha1.UserAccountService/SetPersonalAccount:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: SetPersonalAccount
      operationId: mgmt.v1alpha1.UserAccountService.SetPersonalAccount
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.SetPersonalAccountRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.SetPersonalAccountResponse'
  /mgmt.v1alpha1.UserAccountService/ConvertPersonalToTeamAccount:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: ConvertPersonalToTeamAccount
      description: Convert a personal account to a team account retaining all of the jobs and connections. This will also create a new empty personal account.
      operationId: mgmt.v1alpha1.UserAccountService.ConvertPersonalToTeamAccount
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.ConvertPersonalToTeamAccountRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.ConvertPersonalToTeamAccountResponse'
  /mgmt.v1alpha1.UserAccountService/CreateTeamAccount:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: CreateTeamAccount
      description: Creates a new team account
      operationId: mgmt.v1alpha1.UserAccountService.CreateTeamAccount
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.CreateTeamAccountRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.CreateTeamAccountResponse'
  /mgmt.v1alpha1.UserAccountService/IsUserInAccount:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: IsUserInAccount
      operationId: mgmt.v1alpha1.UserAccountService.IsUserInAccount
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.IsUserInAccountRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.IsUserInAccountResponse'
  /mgmt.v1alpha1.UserAccountService/GetAccountTemporalConfig:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetAccountTemporalConfig
      operationId: mgmt.v1alpha1.UserAccountService.GetAccountTemporalConfig
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountTemporalConfigRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountTemporalConfigResponse'
  /mgmt.v1alpha1.UserAccountService/SetAccountTemporalConfig:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: SetAccountTemporalConfig
      operationId: mgmt.v1alpha1.UserAccountService.SetAccountTemporalConfig
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.SetAccountTemporalConfigRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.SetAccountTemporalConfigResponse'
  /mgmt.v1alpha1.UserAccountService/GetTeamAccountMembers:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetTeamAccountMembers
      operationId: mgmt.v1alpha1.UserAccountService.GetTeamAccountMembers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetTeamAccountMembersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetTeamAccountMembersResponse'
  /mgmt.v1alpha1.UserAccountService/RemoveTeamAccountMember:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: RemoveTeamAccountMember
      operationId: mgmt.v1alpha1.UserAccountService.RemoveTeamAccountMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.RemoveTeamAccountMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.RemoveTeamAccountMemberResponse'
  /mgmt.v1alpha1.UserAccountService/InviteUserToTeamAccount:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: InviteUserToTeamAccount
      operationId: mgmt.v1alpha1.UserAccountService.InviteUserToTeamAccount
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.InviteUserToTeamAccountRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.InviteUserToTeamAccountResponse'
  /mgmt.v1alpha1.UserAccountService/GetTeamAccountInvites:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetTeamAccountInvites
      operationId: mgmt.v1alpha1.UserAccountService.GetTeamAccountInvites
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetTeamAccountInvitesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetTeamAccountInvitesResponse'
  /mgmt.v1alpha1.UserAccountService/RemoveTeamAccountInvite:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: RemoveTeamAccountInvite
      operationId: mgmt.v1alpha1.UserAccountService.RemoveTeamAccountInvite
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.RemoveTeamAccountInviteRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.RemoveTeamAccountInviteResponse'
  /mgmt.v1alpha1.UserAccountService/AcceptTeamAccountInvite:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: AcceptTeamAccountInvite
      operationId: mgmt.v1alpha1.UserAccountService.AcceptTeamAccountInvite
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.AcceptTeamAccountInviteRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.AcceptTeamAccountInviteResponse'
  /mgmt.v1alpha1.UserAccountService/GetSystemInformation:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetSystemInformation
      operationId: mgmt.v1alpha1.UserAccountService.GetSystemInformation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetSystemInformationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetSystemInformationResponse'
  /mgmt.v1alpha1.UserAccountService/GetAccountOnboardingConfig:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetAccountOnboardingConfig
      operationId: mgmt.v1alpha1.UserAccountService.GetAccountOnboardingConfig
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountOnboardingConfigRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountOnboardingConfigResponse'
  /mgmt.v1alpha1.UserAccountService/SetAccountOnboardingConfig:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: SetAccountOnboardingConfig
      operationId: mgmt.v1alpha1.UserAccountService.SetAccountOnboardingConfig
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.SetAccountOnboardingConfigRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.SetAccountOnboardingConfigResponse'
  /mgmt.v1alpha1.UserAccountService/GetAccountStatus:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetAccountStatus
      description: Returns different metrics on the account status for the active billing period
      operationId: mgmt.v1alpha1.UserAccountService.GetAccountStatus
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountStatusRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountStatusResponse'
  /mgmt.v1alpha1.UserAccountService/IsAccountStatusValid:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: IsAccountStatusValid
      description: Distils the account status down to whether not it is in a valid state.
      operationId: mgmt.v1alpha1.UserAccountService.IsAccountStatusValid
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.IsAccountStatusValidRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.IsAccountStatusValidResponse'
  /mgmt.v1alpha1.UserAccountService/GetAccountBillingCheckoutSession:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetAccountBillingCheckoutSession
      description: Returns a new checkout session for the account to subscribe
      operationId: mgmt.v1alpha1.UserAccountService.GetAccountBillingCheckoutSession
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountBillingCheckoutSessionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountBillingCheckoutSessionResponse'
  /mgmt.v1alpha1.UserAccountService/GetAccountBillingPortalSession:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetAccountBillingPortalSession
      description: Returns a new billing portal session if the account has a billing customer id
      operationId: mgmt.v1alpha1.UserAccountService.GetAccountBillingPortalSession
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountBillingPortalSessionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetAccountBillingPortalSessionResponse'
  /mgmt.v1alpha1.UserAccountService/GetBillingAccounts:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: GetBillingAccounts
      description: Returns user accounts that have a billing id.
      operationId: mgmt.v1alpha1.UserAccountService.GetBillingAccounts
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.GetBillingAccountsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.GetBillingAccountsResponse'
  /mgmt.v1alpha1.UserAccountService/SetBillingMeterEvent:
    post:
      tags:
        - mgmt.v1alpha1.UserAccountService
      summary: SetBillingMeterEvent
      description: Sends a new metered event to the billing system
      operationId: mgmt.v1alpha1.UserAccountService.SetBillingMeterEvent
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mgmt.v1alpha1.SetBillingMeterEventRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgmt.v1alpha1.SetBillingMeterEventResponse'
components:
  schemas:
    mgmt.v1alpha1.AccountStatus:
      type: string
      title: AccountStatus
      enum:
        - ACCOUNT_STATUS_REASON_UNSPECIFIED
        - ACCOUNT_STATUS_EXCEEDS_ALLOWED_LIMIT
        - ACCOUNT_STATUS_REQUESTED_EXCEEDS_LIMIT
        - ACCOUNT_STATUS_ACCOUNT_IN_EXPIRED_STATE
        - ACCOUNT_STATUS_ACCOUNT_TRIAL_ACTIVE
        - ACCOUNT_STATUS_ACCOUNT_TRIAL_EXPIRED
    mgmt.v1alpha1.BillingStatus:
      type: string
      title: BillingStatus
      enum:
        - BILLING_STATUS_UNSPECIFIED
        - BILLING_STATUS_ACTIVE
        - BILLING_STATUS_EXPIRED
        - BILLING_STATUS_TRIAL_ACTIVE
        - BILLING_STATUS_TRIAL_EXPIRED
    mgmt.v1alpha1.UserAccountType:
      type: string
      title: UserAccountType
      enum:
        - USER_ACCOUNT_TYPE_UNSPECIFIED
        - USER_ACCOUNT_TYPE_PERSONAL
        - USER_ACCOUNT_TYPE_TEAM
        - USER_ACCOUNT_TYPE_ENTERPRISE
    google.protobuf.Timestamp:
      type: string
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    mgmt.v1alpha1.AcceptTeamAccountInviteRequest:
      type: object
      properties:
        token:
          type: string
          title: token
          minLength: 1
      title: AcceptTeamAccountInviteRequest
      additionalProperties: false
    mgmt.v1alpha1.AcceptTeamAccountInviteResponse:
      type: object
      properties:
        account:
          allOf:
            - title: account
            - $ref: '#/components/schemas/mgmt.v1alpha1.UserAccount'
      title: AcceptTeamAccountInviteResponse
      additionalProperties: false
    mgmt.v1alpha1.AccountInvite:
      type: object
      properties:
        id:
          type: string
          title: id
        accountId:
          type: string
          title: account_id
        senderUserId:
          type: string
          title: sender_user_id
        email:
          type: string
          title: email
        token:
          type: string
          title: token
        accepted:
          type: boolean
          title: accepted
        createdAt:
          allOf:
            - title: created_at
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          allOf:
            - title: updated_at
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiresAt:
          allOf:
            - title: expires_at
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: AccountInvite
      additionalProperties: false
    mgmt.v1alpha1.AccountOnboardingConfig:
      type: object
      properties:
        hasCreatedSourceConnection:
          type: boolean
          title: has_created_source_connection
          description: '@deprecated - use has_completed_onboarding'
        hasCreatedDestinationConnection:
          type: boolean
          title: has_created_destination_connection
          description: '@deprecated - use has_completed_onboarding'
        hasCreatedJob:
          type: boolean
          title: has_created_job
          description: '@deprecated - use has_completed_onboarding'
        hasInvitedMembers:
          type: boolean
          title: has_invited_members
          description: '@deprecated - use has_completed_onboarding'
        hasCompletedOnboarding:
          type: boolean
          title: has_completed_onboarding
      title: AccountOnboardingConfig
      additionalProperties: false
    mgmt.v1alpha1.AccountTemporalConfig:
      type: object
      properties:
        url:
          type: string
          title: url
          minLength: 1
        namespace:
          type: string
          title: namespace
          minLength: 1
        syncJobQueueName:
          type: string
          title: sync_job_queue_name
          minLength: 1
      title: AccountTemporalConfig
      additionalProperties: false
    mgmt.v1alpha1.AccountUser:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        image:
          type: string
          title: image
        email:
          type: string
          title: email
      title: AccountUser
      additionalProperties: false
    mgmt.v1alpha1.ConvertPersonalToTeamAccountRequest:
      type: object
      allOf:
        - anyOf:
            - required:
                - accountId
            - not:
                anyOf:
                  - required:
                      - accountId
      anyOf:
        - required:
            - accountId
        - not:
            anyOf:
              - required:
                  - accountId
      properties:
        name:
          type: string
          title: name
          pattern: ^[a-z0-9-]{3,100}$
          description: The name of the team account
        accountId:
          type: string
          title: account_id
          format: uuid
          description: |-
            Optionally provide the personal account to convert. This may be used in break-glass scenarios where there are multiple personal accounts
             And we want to convert one of them. If not provided, it will find the first one and convert it, leaving the other.
      title: ConvertPersonalToTeamAccountRequest
      additionalProperties: false
    mgmt.v1alpha1.ConvertPersonalToTeamAccountResponse:
      type: object
      allOf:
        - anyOf:
            - required:
                - checkoutSessionUrl
            - not:
                anyOf:
                  - required:
                      - checkoutSessionUrl
      anyOf:
        - required:
            - checkoutSessionUrl
        - not:
            anyOf:
              - required:
                  - checkoutSessionUrl
      properties:
        accountId:
          type: string
          title: account_id
          description: The id of the team account (will be the same identifier as the personal account)
        checkoutSessionUrl:
          type: string
          title: checkout_session_url
          description: If NeosyncCloud, will respond with a checkout session url so they can setup billing
        newPersonalAccountId:
          type: string
          title: new_personal_account_id
          description: The identifier of the newly created personal account
      title: ConvertPersonalToTeamAccountResponse
      additionalProperties: false
    mgmt.v1alpha1.CreateTeamAccountRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          pattern: ^[a-z0-9-]{3,100}$
          description: The name of the team account
      title: CreateTeamAccountRequest
      additionalProperties: false
    mgmt.v1alpha1.CreateTeamAccountResponse:
      type: object
      allOf:
        - anyOf:
            - required:
                - checkoutSessionUrl
            - not:
                anyOf:
                  - required:
                      - checkoutSessionUrl
      anyOf:
        - required:
            - checkoutSessionUrl
        - not:
            anyOf:
              - required:
                  - checkoutSessionUrl
      properties:
        accountId:
          type: string
          title: account_id
        checkoutSessionUrl:
          type: string
          title: checkout_session_url
          description: If NeosyncCloud, will respond with a checkout session url so they can setup billing
      title: CreateTeamAccountResponse
      additionalProperties: false
    mgmt.v1alpha1.GetAccountBillingCheckoutSessionRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetAccountBillingCheckoutSessionRequest
      additionalProperties: false
    mgmt.v1alpha1.GetAccountBillingCheckoutSessionResponse:
      type: object
      properties:
        checkoutSessionUrl:
          type: string
          title: checkout_session_url
          description: The url that will be redirected to
      title: GetAccountBillingCheckoutSessionResponse
      additionalProperties: false
    mgmt.v1alpha1.GetAccountBillingPortalSessionRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetAccountBillingPortalSessionRequest
      additionalProperties: false
    mgmt.v1alpha1.GetAccountBillingPortalSessionResponse:
      type: object
      properties:
        portalSessionUrl:
          type: string
          title: portal_session_url
          description: The url that will be redirected to
      title: GetAccountBillingPortalSessionResponse
      additionalProperties: false
    mgmt.v1alpha1.GetAccountOnboardingConfigRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetAccountOnboardingConfigRequest
      additionalProperties: false
    mgmt.v1alpha1.GetAccountOnboardingConfigResponse:
      type: object
      properties:
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountOnboardingConfig'
      title: GetAccountOnboardingConfigResponse
      additionalProperties: false
    mgmt.v1alpha1.GetAccountStatusRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetAccountStatusRequest
      additionalProperties: false
    mgmt.v1alpha1.GetAccountStatusResponse:
      type: object
      allOf:
        - anyOf:
            - required:
                - allowedRecordCount
            - not:
                anyOf:
                  - required:
                      - allowedRecordCount
      anyOf:
        - required:
            - allowedRecordCount
        - not:
            anyOf:
              - required:
                  - allowedRecordCount
      properties:
        usedRecordCount:
          oneOf:
            - type: string
            - type: number
          title: used_record_count
          description: |-
            A count of the currently used records for the current billing period.
             This may go over the allowed record count depending on when the record count is polled by the metric system.
        allowedRecordCount:
          oneOf:
            - type: string
            - type: number
          title: allowed_record_count
          description: The allowed record count. It will be null if there is no limit.
        subscriptionStatus:
          allOf:
            - title: subscription_status
              description: The current subscription status determined by the billing system.
            - $ref: '#/components/schemas/mgmt.v1alpha1.BillingStatus'
      title: GetAccountStatusResponse
      additionalProperties: false
    mgmt.v1alpha1.GetAccountTemporalConfigRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetAccountTemporalConfigRequest
      additionalProperties: false
    mgmt.v1alpha1.GetAccountTemporalConfigResponse:
      type: object
      properties:
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountTemporalConfig'
      title: GetAccountTemporalConfigResponse
      additionalProperties: false
    mgmt.v1alpha1.GetBillingAccountsRequest:
      type: object
      properties:
        accountIds:
          type: array
          items:
            type: string
          title: account_ids
          description: Optional list of account identifiers to filter the response by
      title: GetBillingAccountsRequest
      additionalProperties: false
    mgmt.v1alpha1.GetBillingAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/mgmt.v1alpha1.UserAccount'
          title: accounts
      title: GetBillingAccountsResponse
      additionalProperties: false
    mgmt.v1alpha1.GetSystemInformationRequest:
      type: object
      title: GetSystemInformationRequest
      additionalProperties: false
    mgmt.v1alpha1.GetSystemInformationResponse:
      type: object
      properties:
        version:
          type: string
          title: version
          description: The Git tagged version
        commit:
          type: string
          title: commit
          description: The Git commit
        compiler:
          type: string
          title: compiler
          description: The Go compiler flag that was used to build this version of Neosync
        platform:
          type: string
          title: platform
          description: The Go platform flag that was used to build this version of Neosync
        buildDate:
          allOf:
            - title: build_date
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetSystemInformationResponse
      additionalProperties: false
    mgmt.v1alpha1.GetTeamAccountInvitesRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetTeamAccountInvitesRequest
      additionalProperties: false
    mgmt.v1alpha1.GetTeamAccountInvitesResponse:
      type: object
      properties:
        invites:
          type: array
          items:
            $ref: '#/components/schemas/mgmt.v1alpha1.AccountInvite'
          title: invites
      title: GetTeamAccountInvitesResponse
      additionalProperties: false
    mgmt.v1alpha1.GetTeamAccountMembersRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: GetTeamAccountMembersRequest
      additionalProperties: false
    mgmt.v1alpha1.GetTeamAccountMembersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/mgmt.v1alpha1.AccountUser'
          title: users
      title: GetTeamAccountMembersResponse
      additionalProperties: false
    mgmt.v1alpha1.GetUserAccountsRequest:
      type: object
      title: GetUserAccountsRequest
      additionalProperties: false
    mgmt.v1alpha1.GetUserAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/mgmt.v1alpha1.UserAccount'
          title: accounts
      title: GetUserAccountsResponse
      additionalProperties: false
    mgmt.v1alpha1.GetUserRequest:
      type: object
      title: GetUserRequest
      additionalProperties: false
    mgmt.v1alpha1.GetUserResponse:
      type: object
      properties:
        userId:
          type: string
          title: user_id
      title: GetUserResponse
      additionalProperties: false
    mgmt.v1alpha1.InviteUserToTeamAccountRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
        email:
          type: string
          title: email
          minLength: 1
      title: InviteUserToTeamAccountRequest
      additionalProperties: false
    mgmt.v1alpha1.InviteUserToTeamAccountResponse:
      type: object
      properties:
        invite:
          allOf:
            - title: invite
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountInvite'
      title: InviteUserToTeamAccountResponse
      additionalProperties: false
    mgmt.v1alpha1.IsAccountStatusValidRequest:
      type: object
      allOf:
        - anyOf:
            - required:
                - requestedRecordCount
            - not:
                anyOf:
                  - required:
                      - requestedRecordCount
      anyOf:
        - required:
            - requestedRecordCount
        - not:
            anyOf:
              - required:
                  - requestedRecordCount
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
        requestedRecordCount:
          oneOf:
            - type: string
            - type: number
          title: requested_record_count
          description: An optional count of records to be added to the current usage for validation.
      title: IsAccountStatusValidRequest
      additionalProperties: false
    mgmt.v1alpha1.IsAccountStatusValidResponse:
      type: object
      allOf:
        - anyOf:
            - required:
                - allowedRecordCount
            - not:
                anyOf:
                  - required:
                      - allowedRecordCount
        - anyOf:
            - required:
                - reason
            - not:
                anyOf:
                  - required:
                      - reason
        - anyOf:
            - required:
                - trialExpiresAt
            - not:
                anyOf:
                  - required:
                      - trialExpiresAt
      properties:
        isValid:
          type: boolean
          title: is_valid
        reason:
          type: string
          title: reason
          description: If the account is not valid, a reason for why may be provided.
        shouldPoll:
          type: boolean
          title: should_poll
          description: Whether or not the process should decide to continue polling for validitiy updates
        usedRecordCount:
          oneOf:
            - type: string
            - type: number
          title: used_record_count
          description: |-
            A count of the currently used records for the current billing period.
             This may go over the allowed record count depending on when the record count is polled by the metric system.
             @deprecated
        allowedRecordCount:
          oneOf:
            - type: string
            - type: number
          title: allowed_record_count
          description: |-
            The allowed record count. It will be null if there is no limit.
             @deprecated
        accountStatus:
          allOf:
            - title: account_status
              description: The current status of the account. Default is valid.
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountStatus'
        trialExpiresAt:
          allOf:
            - title: trial_expires_at
              description: The time when the trial expires
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: IsAccountStatusValidResponse
      additionalProperties: false
    mgmt.v1alpha1.IsUserInAccountRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
      title: IsUserInAccountRequest
      additionalProperties: false
    mgmt.v1alpha1.IsUserInAccountResponse:
      type: object
      properties:
        ok:
          type: boolean
          title: ok
      title: IsUserInAccountResponse
      additionalProperties: false
    mgmt.v1alpha1.RemoveTeamAccountInviteRequest:
      type: object
      properties:
        id:
          type: string
          title: id
          format: uuid
      title: RemoveTeamAccountInviteRequest
      additionalProperties: false
    mgmt.v1alpha1.RemoveTeamAccountInviteResponse:
      type: object
      title: RemoveTeamAccountInviteResponse
      additionalProperties: false
    mgmt.v1alpha1.RemoveTeamAccountMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          format: uuid
        accountId:
          type: string
          title: account_id
          format: uuid
      title: RemoveTeamAccountMemberRequest
      additionalProperties: false
    mgmt.v1alpha1.RemoveTeamAccountMemberResponse:
      type: object
      title: RemoveTeamAccountMemberResponse
      additionalProperties: false
    mgmt.v1alpha1.SetAccountOnboardingConfigRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountOnboardingConfig'
      title: SetAccountOnboardingConfigRequest
      additionalProperties: false
    mgmt.v1alpha1.SetAccountOnboardingConfigResponse:
      type: object
      properties:
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountOnboardingConfig'
      title: SetAccountOnboardingConfigResponse
      additionalProperties: false
    mgmt.v1alpha1.SetAccountTemporalConfigRequest:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountTemporalConfig'
      title: SetAccountTemporalConfigRequest
      additionalProperties: false
    mgmt.v1alpha1.SetAccountTemporalConfigResponse:
      type: object
      properties:
        config:
          allOf:
            - title: config
            - $ref: '#/components/schemas/mgmt.v1alpha1.AccountTemporalConfig'
      title: SetAccountTemporalConfigResponse
      additionalProperties: false
    mgmt.v1alpha1.SetBillingMeterEventRequest:
      type: object
      allOf:
        - anyOf:
            - required:
                - timestamp
            - not:
                anyOf:
                  - required:
                      - timestamp
      anyOf:
        - required:
            - timestamp
        - not:
            anyOf:
              - required:
                  - timestamp
      properties:
        accountId:
          type: string
          title: account_id
          format: uuid
          description: The account id to apply this metered event to
        eventName:
          type: string
          title: event_name
          minLength: 1
          description: The metered event name
        value:
          type: string
          title: value
          minLength: 1
          description: The value of the meter for the given time
        eventId:
          type: string
          title: event_id
          minLength: 1
          description: The unique identifier of this metered event
        timestamp:
          oneOf:
            - type: string
            - type: number
          title: timestamp
          description: The time of the event in Unix Epoch format. Defaults to the current timestamp if not specified.
      title: SetBillingMeterEventRequest
      additionalProperties: false
    mgmt.v1alpha1.SetBillingMeterEventResponse:
      type: object
      title: SetBillingMeterEventResponse
      additionalProperties: false
    mgmt.v1alpha1.SetPersonalAccountRequest:
      type: object
      title: SetPersonalAccountRequest
      additionalProperties: false
    mgmt.v1alpha1.SetPersonalAccountResponse:
      type: object
      properties:
        accountId:
          type: string
          title: account_id
      title: SetPersonalAccountResponse
      additionalProperties: false
    mgmt.v1alpha1.SetUserRequest:
      type: object
      title: SetUserRequest
      additionalProperties: false
    mgmt.v1alpha1.SetUserResponse:
      type: object
      properties:
        userId:
          type: string
          title: user_id
      title: SetUserResponse
      additionalProperties: false
    mgmt.v1alpha1.UserAccount:
      type: object
      properties:
        id:
          type: string
          title: id
          description: The unique identifier of the account
        name:
          type: string
          title: name
          description: The account slug
        type:
          allOf:
            - title: type
              description: The type of account
            - $ref: '#/components/schemas/mgmt.v1alpha1.UserAccountType'
        hasStripeCustomerId:
          type: boolean
          title: has_stripe_customer_id
          description: Whether or not the account has an associated stripe customer id
      title: UserAccount
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - CodeNotFound
          enum:
            - CodeCanceled
            - CodeUnknown
            - CodeInvalidArgument
            - CodeDeadlineExceeded
            - CodeNotFound
            - CodeAlreadyExists
            - CodePermissionDenied
            - CodeResourceExhausted
            - CodeFailedPrecondition
            - CodeAborted
            - CodeOutOfRange
            - CodeInternal
            - CodeUnavailable
            - CodeDataLoss
            - CodeUnauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: mgmt.v1alpha1.UserAccountService
