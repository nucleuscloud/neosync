# Build the manager binary
FROM golang:1.23-bookworm AS builder

RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive \
  apt-get install --no-install-recommends -y \
    build-essential

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum

RUN go mod download

WORKDIR /workspace
COPY worker/internal/ worker/internal/
COPY worker/pkg/ worker/pkg/
COPY internal/ internal/

# Define build arguments
ARG buildDate="1970-01-01T00:00:00Z"
ARG gitCommit=""
ARG gitVersion="v0.0.0-main"

WORKDIR /workspace/backend

# Copy in generated code
COPY backend/gen/ gen/

# Copy the go source
COPY backend/cmd/ cmd/
COPY backend/internal/ internal/
COPY backend/services/ services/
COPY backend/pkg/ pkg/
COPY backend/sql sql/

# Build
RUN go build -ldflags="-s -w -X 'github.com/nucleuscloud/neosync/backend/internal/version.buildDate=$buildDate' -X 'github.com/nucleuscloud/neosync/backend/internal/version.gitCommit=$gitCommit' -X 'github.com/nucleuscloud/neosync/backend/internal/version.gitVersion=$gitVersion'" -o bin/mgmt cmd/mgmt/*.go

# Use debian:bullseye-slim as the base image to include necessary C libraries
FROM debian:bookworm-slim
WORKDIR /

# Install CA certificates for HTTPS connections
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive \
  apt-get install --no-install-recommends -y ca-certificates \
  && rm -rf /var/lib/apt/lists/*

COPY --from=builder /workspace/backend/bin/mgmt .
COPY /backend/sql/postgresql/schema/ /migrations/

# Create a non-root user
RUN useradd -u 65532 -r nonroot
USER nonroot

ENTRYPOINT ["/mgmt"]

CMD ["serve", "connect"]
