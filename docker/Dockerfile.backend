FROM migrate/migrate:4 as migrate-builder

# Build the manager binary
FROM golang:1.21 as builder

WORKDIR /workspace
# Copy the Go Modules manifests
COPY backend/go.mod backend/go.mod
COPY backend/go.sum backend/go.sum
COPY worker/go.mod worker/go.mod
COPY worker/go.sum worker/go.sum

WORKDIR /workspace/backend
RUN go mod download

WORKDIR /workspace
COPY worker/ worker/

WORKDIR /workspace/backend

# COPY tools.go tools.go
# COPY Makefile Makefile
# RUN make install-go-tools

# ENV PATH="$PATH:$(go env GOPATH)/bin"
# ENV GOBIN="$PWD/bin"
# ENV PATH="$PATH:$GOBIN"

# Copy in generated code
COPY backend/gen/ gen/

# Copy the go source
COPY backend/cmd/ cmd/
COPY backend/internal/ internal/
COPY backend/services/ services/
COPY backend/sql sql/

# Build
RUN CGO_ENABLED=0 go build -ldflags="-s -w" -o bin/mgmt cmd/mgmt/*.go

FROM alpine:3.18

RUN apk add --update --no-cache \
    ca-certificates \
    tzdata \
    bash \
    curl

WORKDIR /
COPY --from=builder /workspace/backend/bin/mgmt .
COPY --from=migrate-builder /usr/local/bin/migrate /usr/local/bin/migrate
COPY /backend/sql/postgresql/schema/ /migrations/
COPY /backend/hack/migrate.sh /migrate.sh

ENTRYPOINT ["/mgmt"]

CMD ["serve", "connect"]
